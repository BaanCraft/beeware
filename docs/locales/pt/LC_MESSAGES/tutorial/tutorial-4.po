# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-24 17:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pt\n"
"Language-Team: pt <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../tutorial/tutorial-4.rst:3 9e1ca74391fb440d8d7851b04b00ef86
msgid "Tutorial 4 - Updating your application"
msgstr ""

#: ../../tutorial/tutorial-4.rst:5 8dba8bb8b0b344379273378b34130a86
msgid "In the last tutorial, we packaged our application as a native application. If you're dealing with a real-world app, that isn't going to be the end of the story - you'll likely do some testing, discover problems, and need to make some changes. Even if your application is perfect, you'll eventually want to publish version 2 of your application with improvements."
msgstr ""

#: ../../tutorial/tutorial-4.rst:11 63fec75abc2240149e71d2dc54cbf0b4
msgid "So - how do you update your installed app when you make code changes?"
msgstr ""

#: ../../tutorial/tutorial-4.rst:14 823070ee010c466483c1f49a3ea8d321
msgid "Updating application code"
msgstr ""

#: ../../tutorial/tutorial-4.rst:16 a6b6183828194e20b77f08f87bab4a06
msgid "Our application currently prints to the console when you press the button. However, GUI applications shouldn't really use the console for output. They need to use dialogs to communicate with users."
msgstr ""

#: ../../tutorial/tutorial-4.rst:20 9cda317fa38e40b09da55b214df63dfb
msgid "Let's add a dialog box to say hello, instead of writing to the console. Modify the ``say_hello`` callback so it looks like this::"
msgstr ""

#: ../../tutorial/tutorial-4.rst:29 d5edbd1682364398b319ce014211e9e3
msgid "This directs Toga to open a modal dialog box when the button is pressed."
msgstr ""

#: ../../tutorial/tutorial-4.rst:31 99a74487967246eca7577149dd06c7c6
msgid "If you run ``briefcase dev``, enter a name, and press the button, you'll see the new dialog box:"
msgstr ""

#: ../../tutorial/tutorial-4.rst:36 ../../tutorial/tutorial-4.rst:67
#: ../../tutorial/tutorial-4.rst:164 2157579cde1342ed829e69a1057ad1ba
#: 9a8f8fec1d964c1abdb4836d55972e72 e891e3e84c8f48409f8b195b9098e201
msgid "macOS"
msgstr ""

#: ../../tutorial/tutorial-4.rst 8689a0df70c141a8939906caefbda6f7
msgid "Hello World Tutorial 4 dialog, on macOS"
msgstr ""

#: ../../tutorial/tutorial-4.rst:41 ../../tutorial/tutorial-4.rst:81
#: ../../tutorial/tutorial-4.rst:185 058a31d34a404254bfc9d76f3ea4f430
#: 39539d0c6fd344c69990fb72d27f8760 496791039ae54086bcfef97dc4841497
msgid "Linux"
msgstr ""

#: ../../tutorial/tutorial-4.rst 4824e6fca36c48ff9c04e0d6574bef0e
msgid "Hello World Tutorial 4 dialog, on Linux"
msgstr ""

#: ../../tutorial/tutorial-4.rst:46 ../../tutorial/tutorial-4.rst:98
#: ../../tutorial/tutorial-4.rst:213 05df65d5bc1b4ba18081f56d354d0217
#: 33794c27f49648339c0b16eb06a6943e c8e7509186244ccb980c43e75c5d4d3d
msgid "Windows"
msgstr ""

#: ../../tutorial/tutorial-4.rst f7b373ccc92a49fbb33cdd5bfaa1aeaa
msgid "Hello World Tutorial 4 dialog, on Windows"
msgstr ""

#: ../../tutorial/tutorial-4.rst:51 553380892c174471be3b0fa14eebdd09
msgid "However, if you run ``briefcase run``, the dialog box won't appear."
msgstr ""

#: ../../tutorial/tutorial-4.rst:53 be4a657fbb1847a9bb488ea043ee57ce
msgid "Why is this? Well, ``briefcase dev`` operates by running your code in place - it tries to produce as realistic runtime environment for your code as possible, but it doesn't provide or use any of the platform infrastructure for wrapping your code as an application. Part of the process of packaging your app involves copying your code *into* the application bundle - and at the moment, your application still has the old code in it."
msgstr ""

#: ../../tutorial/tutorial-4.rst:60 c4811d1940694d8ba7483d989d1156ef
msgid "So - we need to tell briefcase to update your app, copying in the new version of the code. We *could* do this by deleting the old platform directory and starting from scratch. However, Briefcase provides an easier way - you can update the code for your existing bundled application:"
msgstr ""

#: ../../tutorial/tutorial-4.rst:112 28a3eefcb7554d0d94ff0c4365756e41
msgid "If Briefcase can't find the scaffolded template, it will automatically invoke ``create`` to generate a fresh scaffold."
msgstr ""

#: ../../tutorial/tutorial-4.rst:115 3ab192b5794d41aba4b0cf18d8ae5002
msgid "Now that we've updated the installer code, we can then run ``briefcase build`` to re-compile the app, ``briefcase run`` to run the updated app, and ``briefcase package`` to repackage the application for distribution."
msgstr ""

#: ../../tutorial/tutorial-4.rst:119 64b0f32442e947f9bbc1ee4e848aaf52
msgid "(macOS users, remember that as noted in :doc:`Tutorial 3 <tutorial-3>`, for the tutorial we recommend running ``briefcase package`` with the ``--adhoc-sign`` flag to avoid the complexity of setting up a code signing identity and keep the tutorial as simple as possible.)"
msgstr ""

#: ../../tutorial/tutorial-4.rst:125 89ffdeb0ddc249dfb4a54043f6e57999
msgid "Update and run in one step"
msgstr ""

#: ../../tutorial/tutorial-4.rst:127 c62bcc2c43d241baaf5602b136491127
msgid "If you're rapidly iterating code changes, you'll likely want to make a code change, update the application, and immediately re-run your application. For most purposes, developer mode (``briefcase dev``) will be the easiest way to do this sort of rapid iteration; however, if you're testing something about how your application runs as a native binary, or hunting a bug that only manifests when your application is in packaged form, you may need to use repeated calls to ``briefcase run``. To simplify the process of updating and running the bundled app, Briefcase has a shortcut to support this usage pattern - the ``-u`` (or ``--update``) option on the ``run`` command."
msgstr ""

#: ../../tutorial/tutorial-4.rst:137 7198ab20c3b8407da8a810cde0debada
msgid "Let's try making another change. You may have noticed that if you don't type a name in the text input box, the dialog will say \"Hello, \". Let's modify the ``say_hello`` function again to handle this edge case."
msgstr ""

#: ../../tutorial/tutorial-4.rst:141 9fb02489d97048538b51df1bf67c7925
msgid "At the top of the file, between the imports and the ``class HelloWorld`` definition, add a utility methods to generate an appropriate greeting depending on the value of the name that has been provided::"
msgstr ""

#: ../../tutorial/tutorial-4.rst:151 52f81a60632a43cebe42a0a1242bb7ea
msgid "Then, modify the ``say_hello`` callback to use this new utility method::"
msgstr ""

#: ../../tutorial/tutorial-4.rst:159 ae27eaee16ad48b3a25c0702265fc03b
msgid "Run your app in development mode (with ``briefcase dev``) to confirm that the new logic works; then update, build and run the app with one command:"
msgstr ""

#: ../../tutorial/tutorial-4.rst:229 2aa008f68483474dbd35be187ea51584
msgid "The package command also accepts the ``-u`` argument, so if you make a change to your application code and want to repackage immediately, you can run ``briefcase package -u``."
msgstr ""

#: ../../tutorial/tutorial-4.rst:234 b57333a0a18d41b199289e287fa9f017
msgid "Next steps"
msgstr ""

#: ../../tutorial/tutorial-4.rst:236 ffb6f3f4ce404a79a3a9bc1fc466ff2d
msgid "We now have our application packaged for distribution on desktop platforms, and we've been able to update the code in our application."
msgstr ""

#: ../../tutorial/tutorial-4.rst:239 b8c7040af8124171ab52ff10b10696eb
msgid "But what about mobile? In :doc:`Tutorial 5 <tutorial-5/index>`, we'll convert our application into a mobile application, and deploy it onto a device simulator, and onto a phone."
msgstr ""

