# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-19 14:38+0000\n"
"PO-Revision-Date: 2024-02-07 15:02+0000\n"
"Last-Translator: joaovitorpmoreira <programacaojoaopm@gmail.com>\n"
"Language: pt\n"
"Language-Team: Portuguese <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-2/pt/>\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../tutorial/tutorial-2.rst:3 c47ec98fa1a347ee9fce0a6d60eaf432
msgid "Tutorial 2 - Making it interesting"
msgstr "Tutorial 2 - Tornando as coisas interessantes"

#: ../../tutorial/tutorial-2.rst:5 02c2ad42f2b04caab7bb9e3d43d14f66
msgid "In :doc:`Tutorial 1 <tutorial-1>`, we generated a stub project that was able to run, but we didn't write any code ourselves. Let's take a look at what was generated for us."
msgstr "No :doc:`Tutorial 1 <tutorial-1>`, geramos um projeto inicial que executava, mas não escrevemos nenhum código por conta própria. Vamos dar uma olhada no que foi criado para nós."

#: ../../tutorial/tutorial-2.rst:10 1dc15c741d754e919500d47f84e71440
msgid "What was generated"
msgstr "O que foi gerado"

#: ../../tutorial/tutorial-2.rst:12 696cf47642cc4595b80a31755e225f3b
msgid "In the ``src/helloworld`` directory, you should see 3 files: ``__init__.py``, ``__main__.py`` and ``app.py``."
msgstr "No diretório ``src/helloworld``, você deverá ver 3 arquivos: ``__init__.py``, ``__main__.py`` e ``app.py``."

#: ../../tutorial/tutorial-2.rst:15 9a0734e3a2b34cfcbe11ca6334e36750
msgid "``__init__.py`` marks the ``helloworld`` directory as an importable Python module. It is an empty file; the very fact it exists tells the Python interpreter that the ``helloworld`` directory defines a module."
msgstr "``__init__.py`` torna o diretório ``helloworld`` um módulo Python importável. Trata-se de um arquivo vazio; sua simples existência indica ao interpretador Python que há um módulo definido pelo diretório `helloworld`."

#: ../../tutorial/tutorial-2.rst:19 8ca5e676b32c4a77929e9c44c0460dd6
msgid "``__main__.py`` marks the ``helloworld`` module as a special kind of module - an executable module. If you try to run the ``helloworld`` module using ``python -m helloworld``, the ``__main__.py`` file is where Python will start executing. The contents of ``__main__.py`` is relatively simple::"
msgstr "``__main__.py`` define o módulo ``helloworld`` como um tipo especial de módulo - um módulo executável. Ao tentar executar o módulo ``helloworld`` usando ``python -m helloworld``, o Python iniciará a execução no arquivo ``__main__.py``. O conteúdo de ``__main__.py`` é relativamente simples::"

#: ../../tutorial/tutorial-2.rst:29 0857b49bfdef49d2bab7bc80fd881e88
msgid "That is - it imports the ``main`` method from the ``helloworld`` app; and if it's being executed as an entry point, calls the main() method, and starts the application's main loop. The main loop is the way a GUI application listens for user input (like mouse clicks and keyboard presses)."
msgstr "Isto é - ele importa o método ``main`` do aplicativo ``helloworld``; quando executado como ponto de entrada, esse método main() é chamado, dando início ao loop principal da aplicação. Nesse loop, a aplicação de interface gráfica (GUI) espera pelas interações do usuário (como cliques do mouse e pressionamentos de teclas)."

#: ../../tutorial/tutorial-2.rst:34 96a414f05c0b4f0d9fc268c1ee00a6f5
msgid "The more interesting file is ``app.py`` - this contains the logic that creates our application window::"
msgstr "O arquivo mais interessante é o ``app.py`` - nele está contido a lógica que cria a janela da nossa aplicação::"

#: ../../tutorial/tutorial-2.rst:52 4774cd94316c4f3db8b35a2a23c7adce
msgid "Let's go through this line by line::"
msgstr "Vamos analisar isso linha por linha::"

#: ../../tutorial/tutorial-2.rst:58 a8601096df7946ea88ad8b47935d1e76
msgid "First, we import the ``toga`` widget toolkit, as well as some style-related utility classes and constants. Our code doesn't use these yet - but we'll make use of them shortly."
msgstr "Primeiro, importamos a biblioteca de widgets ``toga``, juntamente com algumas classes e constantes que são úteis para o estilo. Por enquanto, nosso código ainda não faz uso delas, mas em breve começaremos a utilizá-las."

#: ../../tutorial/tutorial-2.rst:62 c9df2c45316741ff9b1b72e5a8782fae
msgid "Then, we define a class::"
msgstr "Em seguida, definimos uma classe::"

#: ../../tutorial/tutorial-2.rst:66 320ee28836a14701954b48ad4158a651
msgid "Each Toga application has a single ``toga.App`` instance, representing the running entity that is the application. The app may end up managing multiple windows; but for simple applications, there will be a single main window."
msgstr "Cada aplicação Toga possui uma única instância chamada ``toga.App``, que representa o aplicativo em si sendo executado. A aplicação pode acabar gerenciando várias janelas; mas para aplicativos simples, haverá uma única janela principal."

#: ../../tutorial/tutorial-2.rst:70 9243c3919dfc4a3e90746f8753465c9e
msgid "Next, we define a ``startup()`` method::"
msgstr "Depois, definimos um método chamado ``startup()``::"

#: ../../tutorial/tutorial-2.rst:75 5f629a5c7cc04679bb32688d4e55878d
msgid "The first thing the startup method does is to define a main box. Toga's layout scheme behaves similar to HTML. You build an application by constructing a collection of boxes, each of which contains other boxes, or actual widgets. You then apply styles to these boxes to define how they will consume the available window space."
msgstr "A primeira coisa que o método startup() faz é definir um container principal. O esquema de layout do Toga se comporta de maneira semelhante ao HTML. A construção de uma aplicação se dá por meio da criação de uma coleção de containers, cada um contendo outros containers ou os widgets propriamente dito. Depois, você aplica estilos a esses containers para definir como vão usar o espaço na janela."

#: ../../tutorial/tutorial-2.rst:81 f7df9e3532b3499fab61e64e451e1d3b
msgid "In this application, we define a single box, but we don't put anything into it."
msgstr "Neste aplicativo, definimos um único container, mas não colocamos nada dentro dele."

#: ../../tutorial/tutorial-2.rst:83 a4263b0eb3474aeb926acd7f6e62a81b
msgid "Next, we define a window into which we can put this empty box::"
msgstr "Em seguida, definimos uma janela na qual podemos colocar o container vazio::"

#: ../../tutorial/tutorial-2.rst:87 bc178399dbd84f2aad3ed25d4583b96f
#, fuzzy
msgid "This creates an instance of a ``toga.MainWindow``, which will have a title matching the application's name. A Main Window is a special kind of window in Toga - it's a window that is closely bound to the life cycle of the app. When the Main Window is closed, the application exits. The Main Window is also the window that has the application's menu (if you're on a platform like Windows where menu bars are part of the window)."
msgstr "Isso cria uma instância de ``toga.MainWindow``, que terá um título correspondente ao nome do aplicativo. A MainWindow (Janela Principal) é um tipo especial de janela no Toga, pois está intimamente ligada ao ciclo de vida da aplicação. Quando a MainWindow é fechada, a aplicação também se encerra. Além disso, a MainWindow também é a janela que contém o menu do aplicativo (se você estiver em uma plataforma como o Windows, onde as barras de menu fazem parte da janela)"

#: ../../tutorial/tutorial-2.rst:94 fba93adf4927413cb04723aea1bc7173
msgid "Where is my window?"
msgstr ""

#: ../../tutorial/tutorial-2.rst:96 91286c4984f844a298bbd5dc5cdf5e4c
msgid "If you have made an error in your code, the main window of the app may not display. If this happens, you can type **Ctrl+C** in the terminal where you started the app. This will stop the app. You can then fix the error and restart the app."
msgstr ""

#: ../../tutorial/tutorial-2.rst:100 11db1c5631ca4ea393a8eaa0f63445f1
msgid "We then add our empty box as the content of the main window, and instruct the application to show our window::"
msgstr "Então, adicionamos nosso container vazio como conteúdo da janela principal e instruímos o aplicativo a mostrar nossa janela::"

#: ../../tutorial/tutorial-2.rst:106 76ce9ec83d9241b8a0384629b9dceccd
#, fuzzy
msgid "Last of all, we define a ``main()`` function. This is what creates the instance of our application::"
msgstr "Por último, definimos um método chamado ``main()``. Isso é o que cria a instância de nossa aplicação::"

#: ../../tutorial/tutorial-2.rst:112 cad665477502445ab5a96435b45a1735
msgid "This ``main()`` method is the one that is imported and invoked by ``__main__.py``. It creates and returns an instance of our ``HelloWorld`` application."
msgstr "O método ``main()`` é aquele que é importado e chamado pelo arquivo ``__main__.py``. Ele cria e retorna uma instância da nossa aplicação ``HelloWorld``."

#: ../../tutorial/tutorial-2.rst:116 a955b9e3571b474ea6fbecaf4c240ef3
msgid "That's the simplest possible Toga application. Let's put some of our own content into the application, and make the app do something interesting."
msgstr "Essa é a aplicação Toga mais básica possível. Vamos agora integrar conteúdo personalizado à aplicação e torná-la mais interessante."

#: ../../tutorial/tutorial-2.rst:120 41dd18a33f4f4803b1eeae4d2b0c4f15
msgid "Adding some content of our own"
msgstr "Adicionando conteúdo personalizado"

#: ../../tutorial/tutorial-2.rst:122 bd0fbaa150d744a08b487bdb5359263c
msgid "Let's do something more interesting with our ``HelloWorld`` app."
msgstr ""

#: ../../tutorial/tutorial-2.rst:126 589e6417e81c46a695c060200fc35547
#, fuzzy
msgid "When you make these changes, make sure you keep the imports at the top of the file, and the ``main()`` at the bottom of the file. You only need to update the ``HelloWorld`` class."
msgstr "Não remova as importações já feitas no topo do arquivo ou o ``main()`` ao final. Você só precisa atualizar a classe ``HelloWorld``."

#: ../../tutorial/tutorial-2.rst:130 ee86936620314a598d46e69310c789a8
msgid "Modify your ``HelloWorld`` class inside ``src/helloworld/app.py`` so that it looks like this::"
msgstr "Modifique sua classe ``HelloWorld`` dentro de ``src/helloworld/app.py`` para que fique assim:"

#: ../../tutorial/tutorial-2.rst:164 3cfb9473cc9d44729123fe33b50ea1cc
msgid "Let's look in detail at what has changed."
msgstr "Vamos ver em detalhes o que mudou."

#: ../../tutorial/tutorial-2.rst:166 40177a8d7eeb4c79b1659d504ce02e19
msgid "We're still creating a main box; however, we are now applying a style::"
msgstr "Ainda estamos fazendo o container principal; porém, agora estamos aplicando um estilo::"

#: ../../tutorial/tutorial-2.rst:170 2ef8560d8e794378accb64af0f055c97
#, fuzzy
msgid "Toga's built-in layout system is called \"Pack\". It behaves a lot like CSS. You define objects in a hierarchy - in HTML, the objects are ``<div>``, ``<span>``, and other DOM elements; in Toga, they're widgets and boxes. You can then assign styles to the individual elements. In this case, we're indicating that this is a ``COLUMN`` box - that is, it is a box that will consume all the available width, and will expand its height as content is added, but it will try to be as short as possible."
msgstr "O Toga possui um sistema de layout interno denominado \"Pack\". Seu funcionamento se assemelha ao CSS. Você define objetos em uma hierarquia - no HTML, os objetos são ``<div>`` e ``<span>``, e outros elementos do DOM; enquanto no Toga, são widgets e containers. Estilos podem ser atribuídos a cada elemento individualmente. Neste caso específico, estamos indicando que o container é um ``'COLUMN'`` - isto é, ele ocupará toda a largura disponível e aumentará sua altura à medida que conteúdo for adicionado, porém buscando sempre ser o mais compacto possível."

#: ../../tutorial/tutorial-2.rst:177 b876f71c1fb140a8ba1657723c6d3426
msgid "Next, we define a couple of widgets::"
msgstr "A seguir, vamos definir dois widgets::"

#: ../../tutorial/tutorial-2.rst:185 536ccced8ca24ccaacd386afee16f305
#, fuzzy
msgid "Here, we define a Label and a TextInput. Both widgets have styles associated with them; the label will have 5px of margin on its left and right, and no margin on the top and bottom. The TextInput is marked as being flexible - that is, it will absorb all available space in its layout axis."
msgstr "Nesta etapa, definimos um Label e um TextInput. Ambos os widgets possuem estilos associados; o Label terá 5px de preenchimento à esquerda e à direita, e nenhum preenchimento na parte superior e inferior. O TextInput é marcado como flexível, ou seja, ele absorverá todo o espaço disponível em seu eixo de layout."

#: ../../tutorial/tutorial-2.rst:190 72744672a2b749348ab7349b7ec17a5c
msgid "The TextInput is assigned as an instance variable of the class. This gives us easy access to the widget instance - something that we'll use in a moment."
msgstr "O TextInput é atribuído como uma variável de instância da classe. Isso nos permite acessar facilmente a instância do widget, o que será utilizado em breve."

#: ../../tutorial/tutorial-2.rst:193 24917c31b64344e48a2b0fe45bd9d6e2
msgid "Next, we define a box to hold these two widgets::"
msgstr "Após isso, definimos um container para colocar esses dois widgets::"

#: ../../tutorial/tutorial-2.rst:199 ae15772a02f847ef8d2a9101805d7dc9
#, fuzzy
msgid "The ``name_box`` is a box just like the main box; however, this time, it's a ``ROW`` box. That means content will be added horizontally, and it will try to make its width as narrow as possible. The box also has some margin - 5px on all sides."
msgstr "A container ``name_box`` é parecido com o container principal, só que agora ele é do tipo ``ROW``. Isso significa que o conteúdo será adicionado horizontalmente e tentará ficar o mais estreito possível. Esse container também possui preenchimento - 5px em todos os lados."

#: ../../tutorial/tutorial-2.rst:204 bdf13f6fe3494251b3c9f351a195c55d
msgid "Now we define a button::"
msgstr "Agora definimos um botão::"

#: ../../tutorial/tutorial-2.rst:212 9c530b68b9f342a79a687736d29a563f
#, fuzzy
msgid "The button also has 5px of margin on all sides. We also define a *handler* - a method to invoke when the button is pressed."
msgstr "O botão também possui 5px de preenchimento em todos os lados. Além disso, definimos um *gatilho* - um método a ser invocado quando o botão for pressionado."

#: ../../tutorial/tutorial-2.rst:215 122c07e8961f49dc9d784217b05c3b87
msgid "Then, we add the name box and the button to the main box::"
msgstr "Então, adicionamos o container name_box e o botão ao container principal::"

#: ../../tutorial/tutorial-2.rst:220 d36a1c5d33ba4a6abd532b77d40c63d1
#, fuzzy
msgid "This completes our layout; the rest of the startup method is as it was previously - defining a ``MainWindow``, and assigning the main box as the window's content::"
msgstr "Com isso, finalizamos o layout; o restante do código do método startup() permanece como antes - definindo uma MainWindow (Janela principal) e a atribuição do container principal como conteúdo dessa janela::"

#: ../../tutorial/tutorial-2.rst:228 fed09ff80e464a608982a7c30ac07db6
#, fuzzy
msgid "The last thing we need to do is define the handler for the button. A handler can be any method, generator, or asynchronous coroutine; it accepts the widget that generated the event as an argument, and will be invoked whenever the button is pressed::"
msgstr "A última etapa consiste na definição do gatilho do botão. Um gatilho pode ser qualquer método, gerador ou corrotina assíncrona; ele aceita como argumento o widget que gerou o evento e será invocado sempre que o botão for pressionado::"

#: ../../tutorial/tutorial-2.rst:236 12ef2549d2d1447ba040fe65936e0a63
msgid "The body of the method is a simple print statement - however, it will interrogate the current value of the name input, and use that content as the text that is printed."
msgstr "O corpo do método é uma simples instrução de impressão. No entanto, ele consultará o valor atual do campo de entrada de nome e usará esse conteúdo como o texto a ser impresso."

#: ../../tutorial/tutorial-2.rst:240 b8739f044f6843138736b2ada8b111b3
msgid "Now that we've made these changes we can see what they look like by starting the application again. As before, we'll use developer mode:"
msgstr "Ao concluirmos essas alterações, podemos visualizar o resultado reiniciando a aplicação. Seguindo o procedimento anterior, utilizaremos o modo de desenvolvedor:"

#: ../../tutorial/tutorial-2.rst:245 ../../tutorial/tutorial-2.rst:282
#: b94aa8a974b244aabc1029e14a3ee59a dc5571ac4831405988cd4453e9ff079b
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-2.rst:254 ../../tutorial/tutorial-2.rst:288
#: 10f0c85f493c495689cbe4a9dd01610a db98d5115bc64166bfac839551f06141
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-2.rst:263 ../../tutorial/tutorial-2.rst:294
#: 32cde16b64bd4609a65d972458a06b7b f0e7a2989ad847ebb9cdfae13d823233
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-2.rst:272 c58e4c24ebcc45e8a44516922ade77d4
msgid "You'll notice that this time, it *doesn't* install dependencies. Briefcase can detect that the application has been run before, and to save time, will only run the application. If you add new dependencies to your app, you can make sure that they're installed by passing in a ``-r`` option when you run ``briefcase dev``."
msgstr "Dessa vez, você vai reparar que as dependências *não são* instaladas. O Briefcase consegue identificar se o app já foi aberto antes e, pra economizar tempo, só executa ele. Se você adicionar novas dependências, pode garantir que elas sejam instaladas usando a opção ``-r`` quando executar o comando ``briefcase dev``."

#: ../../tutorial/tutorial-2.rst:278 e64ed10613ae4772b033af5c483cce7f
msgid "This should open a GUI window:"
msgstr "Isso deve abrir uma janela GUI:"

#: ../../tutorial/tutorial-2.rst:284 87ffe033ef704362ae3e98bcdfbd708a
msgid "Hello World Tutorial 2 window, on macOS"
msgstr "Tutorial 2: Janela \"Hello World\", no macOS"

#: ../../tutorial/tutorial-2.rst:290 db2377e3dd514ef4879bcbb756efdb01
msgid "Hello World Tutorial 2 window, on Linux"
msgstr "Tutorial 2: Janela \"Hello World\", no Linux"

#: ../../tutorial/tutorial-2.rst:296 c91bb732a6894a9e9dc90228bcf9a6d0
msgid "Hello World Tutorial 2 window, on Windows"
msgstr "Tutorial 2: Janela \"Hello World\", no Windows"

#: ../../tutorial/tutorial-2.rst:300 eb33e89c5ca54802bd5fc1ffb59a48cf
msgid "If you enter a name in the text box, and press the GUI button, you should see output appear in the console where you started the application."
msgstr "Se você escrever um nome na caixa de texto e clicar no botão da interface, vai ver uma mensagem aparecer no console onde você abriu a aplicação."

#: ../../tutorial/tutorial-2.rst:304 7a180e741aff4dcdadaad34bb71953ce
msgid "Next steps"
msgstr "Próximos passos"

#: ../../tutorial/tutorial-2.rst:306 f2d4c20600304d10b29a36d58d8cc4d8
msgid "We've now got an application that does something a little more interesting. But it only runs on our own computer. Let's package this application for distribution. In :doc:`Tutorial 3 <tutorial-3>`, we'll wrap our application up as a standalone installer that we could send to a friend, a customer, or upload to an App Store."
msgstr "Criamos uma aplicação com recursos mais interessantes. Porém, ela somente funciona em nosso computador. Vamos empacotar esta aplicação para distribuição. No :doc:`Tutorial 3 <tutorial-3>`, encapsularemos nossa aplicação em um instalador independente, que poderemos enviar a amigos, clientes ou publicar em uma App Store."

#~ msgid "Lets do something more interesting with our ``HelloWorld`` app."
#~ msgstr ""

