# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-25 04:42+0000\n"
"PO-Revision-Date: 2024-04-12 07:01+0000\n"
"Last-Translator: sus <jeffpeng2012@gmail.com>\n"
"Language: zh_TW\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-0/zh_Hant/>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../tutorial/tutorial-0.rst:3 a7080c0d128e459e841635ede8753759
msgid "Tutorial 0 - Let's get set up!"
msgstr "教學 0 - 讓我們開始設定吧！"

#: ../../tutorial/tutorial-0.rst:5 531c898a2fac41adadabb016ad34a08a
msgid "Before we build our first BeeWare app, we have to make sure we've got all the prerequisites for running BeeWare."
msgstr "在建立第一個 BeeWare 應用程式之前，我們必須確保具備運行 BeeWare 的所有先決條件。"

#: ../../tutorial/tutorial-0.rst:11 db2c3c34a4774e25b86fdeb6fa729536
msgid "Install Python"
msgstr "安裝Python"

#: ../../tutorial/tutorial-0.rst:13 774d1224ab0a4cbf8b6005bedcb3fcab
msgid "The first thing we'll need is a working Python interpreter."
msgstr "我們首先需要的是一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:17 ../../tutorial/tutorial-0.rst:88
#: ../../tutorial/tutorial-0.rst:157 0170cf9f02fa457f867a9b35fa469d2c
#: 83a05ab2dc424e249e65d82589945453 9f7ebc68e0784bc78935fdd86c2adc66
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-0.rst:19 949d592ab01043c9beeaefc1acf63e07
msgid "If you're on macOS, a recent version of Python is included with Xcode or the command line developer tools. To check if you already have it, run the following command:"
msgstr "如果您使用的是 macOS，則 Xcode 或命令列開發人員工具中包含最新版本的 Python。要檢查您是否已經擁有它，請執行以下命令："

#: ../../tutorial/tutorial-0.rst:27 5f923f1d6e374476b1dab6579e321219
msgid "If Python is installed, you'll see its version number. Otherwise, you'll be prompted to install the command line developer tools."
msgstr "如果安裝了 Python，您將看到其版本號。否則，系統將提示您安裝命令列開發人員工具。"

#: ../../tutorial/tutorial-0.rst:30 41f19bfc516e4f29bdf89db879d2591e
#, fuzzy
msgid "You should ensure that you are using Python 3.9 or newer. If it isn't, you'll need to upgrade your Python install. You can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.9 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:37 ../../tutorial/tutorial-0.rst:98
#: ../../tutorial/tutorial-0.rst:166 3624709aede84845a17f69312657f558
#: 6d8949d4ab344619b818fa341a87f657 888ec70e42a64ac581880988f39108d3
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-0.rst:39 993bd14ac3dc410a9929544d4395fde5
msgid "If you're on Linux, you'll install Python using the system package manager (``apt`` on Debian/Ubuntu/Mint, ``dnf`` on Fedora, or ``pacman`` on Arch)."
msgstr "如果您使用的是 Linux，則會使用系統套件管理器（Debian/Ubuntu/Mint 上的 ``apt`` 、Fedora 上的 ``dnf`` 或 Arch 上的 ``pacman`` ）安裝 Python。"

#: ../../tutorial/tutorial-0.rst:42 76bdbfedbad54feebd4b4375808018c6
#, fuzzy
msgid "You should ensure that the system Python is Python 3.9 or newer; if it isn't (e.g., Ubuntu 20.04 ships with Python 3.8), you'll need to upgrade your Linux distribution to something more recent."
msgstr "您應該確保系統Python是Python 3.8或更高版本；如果不是（例如，Ubuntu 18.04 附帶 Python 3.6），則需要將 Linux 發行版升級到更新的版本。"

#: ../../tutorial/tutorial-0.rst:46 b1f1cbd00bc34fc8bc059a329ae91a3e
msgid "Support for Raspberry Pi is limited at this time."
msgstr "目前對 Raspberry Pi 的支援有限。"

#: ../../tutorial/tutorial-0.rst:48 ../../tutorial/tutorial-0.rst:133
#: ../../tutorial/tutorial-0.rst:175 24b41528339a49de91c4ac0bf291e61f
#: 3e3092779f0c40fdb5a731cffc1f2f60 b4e6def8193741a39eeef3d36c8ae852
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-0.rst:50 a946f68deb414439b36259705e0fa06e
#, fuzzy
msgid "If you're on Windows, you can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.9 to 3.12 - `Python 3.13 is not currently supported <https://github.com/beeware/toga/issues/2889>`__. We'd also advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:57 3342972ab0ac4c0fb2bbe34583f8e59d
msgid "Alternative Python distributions"
msgstr "替代的 Python 發行版"

#: ../../tutorial/tutorial-0.rst:59 cecf1952f725413abd9775a421b29f78
msgid "There are lots of different ways of installing Python. You can install Python through `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__. You can use `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ to manage multiple Python installs on the same machine. Windows users can install Python from the Windows App Store. Users from a data science background might want to use `Anaconda <https://docs.anaconda.com/anaconda/install/>`__ or `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__."
msgstr "安裝 Python 有很多不同的方法。您可以透過 `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__ 安裝 Python。您可以使用 `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ 來管理同一台電腦上的多個 Python 安裝。 Windows 使用者可以從 Windows App Store 安裝 Python。有數據科學背景的用戶可能希望使用 `Anaconda <https://docs.anaconda.com/anaconda/install/>`_ 或 `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__ 。"

#: ../../tutorial/tutorial-0.rst:69 52590b55f10c41a5920b21271553dddd
msgid "If you're on macOS or Windows, it doesn't matter *how* you've installed Python - it only matters that you can run ``python3`` from your operating system's command prompt/terminal application, and get a working Python interpreter."
msgstr "如果你在 macOS 或 Windows 上，你如何安裝 Python 並不重要 - 重要的是你可以從作業系統的命令提示字元/終端應用程式運行 ``python3`` ，並獲得一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:74 3c128d13cbfa400192b3db8c7871d25b
#, fuzzy
msgid "If you're on Linux, you *must* use the system Python provided by your operating system. You will be able to complete *most* of this tutorial using a non-system Python, but you won't be able to package your application for distribution to others."
msgstr "如果您使用的是 Linux，則應該使用作業系統提供的系統 Python。您將能夠使用非系統 Python 完成本教程的 *大部分* ，但您將無法打包您的應用程式以分發給其他人。"

#: ../../tutorial/tutorial-0.rst:82 25ba6833ad3b4dd4b00482afe4442e10
msgid "Install dependencies"
msgstr "安裝依賴項"

#: ../../tutorial/tutorial-0.rst:84 0ee9d86572494506931c9435282e1500
msgid "Next, install the additional dependencies needed for your operating system:"
msgstr "接下來，安裝作業系統所需的其他依賴項："

#: ../../tutorial/tutorial-0.rst:90 69cdef17759a414c93fc7ede835bb4da
msgid "Building BeeWare apps on macOS requires:"
msgstr "在 macOS 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:92 d026ea60b9de4971abb90a5ef9ba7f8c
msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above. You may need to open Xcode for the first time in order for Git to work in your terminal session. If it still doesn't register that Git is installed, you may need to restart your terminal session."
msgstr ""

#: ../../tutorial/tutorial-0.rst:100 97e3ebd30749471e9c6bd7aa2187fa70
msgid "To support local development, you'll need to install some system packages. The list of packages required varies depending on your distribution:"
msgstr "為了支援本地開發，您需要安裝一些系統軟體包。所需的軟體包清單因您的發行版而異："

#: ../../tutorial/tutorial-0.rst:103 af9811dc10044ae69e6a540209a5f4f4
#, fuzzy
msgid "**Ubuntu / Debian**"
msgstr "**Ubuntu 20.04+ / Debian 10+**"

#: ../../tutorial/tutorial-0.rst:114 ecf116c31c344c95bd10a0ac6a75c02d
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../tutorial/tutorial-0.rst:120 92194d7157d442668823ddfc9f2d8081
#, fuzzy
msgid "**Arch / Manjaro**"
msgstr "**Arch, Manjaro**"

#: ../../tutorial/tutorial-0.rst:126 bf5b8589ad994659a0a51177890f46e4
msgid "**OpenSUSE Tumbleweed**"
msgstr ""

#: ../../tutorial/tutorial-0.rst:135 1cc65b8d3b1c4dd28fe76323cbe73650
msgid "Building BeeWare apps on Windows requires:"
msgstr "在 Windows 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:137 bd4b4b6d498747e9ac5f893297efe111
msgid "**Git**, a version control system. You can download Git from from `git-scm.com <https://git-scm.com/downloads/>`__."
msgstr "**Git** ，版本控制系統。您可以從 `git-scm.com <https://git-scm.com/downloads/>`__ 下載 Git。"

#: ../../tutorial/tutorial-0.rst:140 c4d364ec534b45ca96415e29eb7c989c
msgid "After installing these tools, you should ensure you restart any terminal sessions. Windows will only expose newly installed tools terminals started *after* the install has completed."
msgstr "安裝這些工具後，您應該確保重新啟動所有終端會話。 Windows 只會公開安裝完成 *之後* 啟動的新安裝的工具終端。"

#: ../../tutorial/tutorial-0.rst:145 cab0f0fead034f84a619b19924e7b80f
msgid "Set up a virtual environment"
msgstr "設定虛擬環境"

#: ../../tutorial/tutorial-0.rst:147 920043a8e7ba413fae77fa909c2e6e31
msgid "We're now going to create a virtual environment - a \"sandbox\" that we can use to isolate our work on this tutorial from our main Python installation. If we install packages into the virtual environment, our main Python installation (and any other Python projects on our computer) won't be affected. If we make a complete mess of our virtual environment, we'll be able to simply delete it and start again, without affecting any other Python project on our computer, and without the need to re-install Python."
msgstr "現在，我們將創建一個虛擬環境 - 一個 `沙箱` ，我們可以使用它來將本教程的工作與主 Python 安裝隔離。如果我們將套件安裝到虛擬環境中，我們的主要 Python 安裝（以及我們電腦上的任何其他 Python 專案）將不會受到影響。如果我們把虛擬環境弄得一團糟，我們只需刪除它並重新開始，就不會影響我們電腦上的任何其他 Python 項目，也不需要重新安裝 Python。"

#: ../../tutorial/tutorial-0.rst:184 4f3f164d365c4982bc9863decb87300a
msgid "If you're not using Python 3.12, replace the ``-3.12`` in these instructions with the version number that you are using."
msgstr ""

#: ../../tutorial/tutorial-0.rst:187 7f3144c47eda4e2cbd67be3c832c8ae2
msgid "Errors running PowerShell Scripts"
msgstr "執行 PowerShell 腳本時發生錯誤"

#: ../../tutorial/tutorial-0.rst:189 a4331382fa5f45ab808c6bf332f3255e
msgid "If you're using PowerShell, and you receive the error::"
msgstr "如果您使用 PowerShell，並且收到錯誤::"

#: ../../tutorial/tutorial-0.rst:193 4a8048a177564a66974bc93db9067eac
msgid "Your Windows account doesn't have permissions to run scripts. To fix this:"
msgstr "您的 Windows 帳戶沒有執行腳本的權限。要解決此問題："

#: ../../tutorial/tutorial-0.rst:195 9e24a555fa07465386329627c1503abd
msgid "Run `Windows PowerShell as Administrator <https://learn.microsoft.com/en-us/powershell/scripting/windows-powershell/starting-windows-powershell?view=powershell-7.4>`_."
msgstr ""

#: ../../tutorial/tutorial-0.rst:196 55ce0d79f6574ac3b76a7116d7053d72
msgid "Run ``set-executionpolicy RemoteSigned``"
msgstr "運行 ``set-executionpolicy RemoteSigned``"

#: ../../tutorial/tutorial-0.rst:197 99973d4af9b44a4684238b35b0ca576d
msgid "Select ``Y`` to change the execution policy."
msgstr "選擇 ``Y`` 更改執行策略。"

#: ../../tutorial/tutorial-0.rst:199 dcfd91de7afd40d39242887232de849d
msgid "Once you've done this you can rerun ``beeware-venv\\Scripts\\activate.ps1`` in your original PowerShell session (or a new session in the same directory)."
msgstr "完成此操作後，您可以在原始 PowerShell 會話（或同一目錄中的新會話）中重新執行 ``beeware-venv\\Scripts\\activate.ps1`` 。"

#: ../../tutorial/tutorial-0.rst:203 7f298f8d4e3b4dbd863369e7466491cd
msgid "If this worked, your prompt should now be changed - it should have a ``(beeware-venv)`` prefix. This lets you know that you're currently in your BeeWare virtual environment. Whenever you're working on this tutorial, you should make sure your virtual environment is activated. If it isn't, re-run the last command (the ``activate`` command) to re-activate your environment."
msgstr "如果這有效，你的提示現在應該改變 - 它應該有一個 ``(beeware-venv)`` 前綴。這可以讓您知道您目前處於 BeeWare 虛擬環境。每當您學習本教學時，您都應該確保您的虛擬環境已啟動。如果不是，請重新執行最後一個命令（ ``activate`` 命令）以啟動您的虛擬環境。"

#: ../../tutorial/tutorial-0.rst:209 394713a9464942dc95b65a3e6a63bec6
msgid "Alternative virtual environments"
msgstr "替代的虛擬環境"

#: ../../tutorial/tutorial-0.rst:211 a4c2b684637347d6aeb18045b6c84617
msgid "If you're using Anaconda or miniconda, you may be more familiar with using conda environments. You might also have heard of ``virtualenv``, a predecessor to Python's built in ``venv`` module. As with Python installs - if you're on macOS or Windows, it doesn't matter *how* you create your virtual environment, as long as you have one. If you're on Linux, you should stick to ``venv`` and the system Python."
msgstr "如果您使用 Anaconda 或 miniconda，您可能會更熟悉使用 conda 環境。您可能也聽說過 ``virtualenv`` ，它是 Python 內建的 ``venv`` 模組的前身。與 Python 安裝一樣 - 如果您使用的是 macOS 或 Windows，只要您有一個虛擬環境， *如何* 建立虛擬環境並不重要。如果您使用的是 Linux，則應該堅持使用 ``venv`` 和系統 Python。"

#: ../../tutorial/tutorial-0.rst:219 81d88937c4dc4ebbae6905396db5104f
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-0.rst:221 4355582616d24de5a9ecb78e46df75e5
msgid "We've now set up our environment. We're ready to :doc:`create our first BeeWare application <tutorial-1>`."
msgstr "我們現在已經設定好了我們的環境。我們準備好 :doc:`創建我們的第一個 BeeWare 應用程式<tutorial-1>`。"

#~ msgid "Run Windows PowerShell as Administrator."
#~ msgstr "以管理員身分執行 Windows PowerShell。"

#~ msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above."
#~ msgstr "**Git** ，版本控制系統。它包含在您上面安裝的 Xcode 或命令列開發人員工具中。"

