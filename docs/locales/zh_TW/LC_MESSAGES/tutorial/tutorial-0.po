# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-30 17:27+0000\n"
"PO-Revision-Date: 2024-04-12 07:01+0000\n"
"Last-Translator: sus <jeffpeng2012@gmail.com>\n"
"Language: zh_TW\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-0/zh_Hant/>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../tutorial/tutorial-0.rst:3 14acbf4075844f0db91ccd850ac90098
msgid "Tutorial 0 - Let's get set up!"
msgstr "教學 0 - 讓我們開始設定吧！"

#: ../../tutorial/tutorial-0.rst:5 14d5fdcefca44a369a85deb4edab7402
msgid "Before we build our first BeeWare app, we have to make sure we've got all the prerequisites for running BeeWare."
msgstr "在建立第一個 BeeWare 應用程式之前，我們必須確保具備運行 BeeWare 的所有先決條件。"

#: ../../tutorial/tutorial-0.rst:9 975b213dc89d4c46a9c41c473ffc1ae1
msgid "Install Python"
msgstr "安裝Python"

#: ../../tutorial/tutorial-0.rst:11 17050eaa6e2f4ce081f6bcc56db02c7d
msgid "The first thing we'll need is a working Python interpreter."
msgstr "我們首先需要的是一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:15 ../../tutorial/tutorial-0.rst:84
#: ../../tutorial/tutorial-0.rst:143 496eba4781da420abb837c607bada146
#: 7fa99ea62aea4acda2ad7102efd17f19 8d07d90a2aea42968f2713efd3409bb4
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-0.rst:17 76cca6fb504f4639965f5ce3c5c7c165
msgid "If you're on macOS, a recent version of Python is included with Xcode or the command line developer tools. To check if you already have it, run the following command:"
msgstr "如果您使用的是 macOS，則 Xcode 或命令列開發人員工具中包含最新版本的 Python。要檢查您是否已經擁有它，請執行以下命令："

#: ../../tutorial/tutorial-0.rst:25 78f57dc56e9b456f8edfdda23e9a7a2a
msgid "If Python is installed, you'll see its version number. Otherwise, you'll be prompted to install the command line developer tools."
msgstr "如果安裝了 Python，您將看到其版本號。否則，系統將提示您安裝命令列開發人員工具。"

#: ../../tutorial/tutorial-0.rst:28 856682f181fb4b99ba3c38795a39fed4
#, fuzzy
msgid "You should ensure that you are using Python 3.8 or newer. If it isn't, you'll need to upgrade your Python install. You can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.8 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:35 ../../tutorial/tutorial-0.rst:91
#: ../../tutorial/tutorial-0.rst:152 46e2b5908b8246aba0e997bba98281d2
#: 6a19a1d8f41d4860adb6a9275d73f719 910bfecd24f54c63a0813f7d6ae2a728
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-0.rst:37 7b9f234b7a1046c8bb80e783fbb0993e
msgid "If you're on Linux, you'll install Python using the system package manager (``apt`` on Debian/Ubuntu/Mint, ``dnf`` on Fedora, or ``pacman`` on Arch)."
msgstr "如果您使用的是 Linux，則會使用系統套件管理器（Debian/Ubuntu/Mint 上的 ``apt`` 、Fedora 上的 ``dnf`` 或 Arch 上的 ``pacman`` ）安裝 Python。"

#: ../../tutorial/tutorial-0.rst:40 297012e76a7e4df28141eebc852aaa0b
msgid "You should ensure that the system Python is Python 3.8 or newer; if it isn't (e.g., Ubuntu 18.04 ships with Python 3.6), you'll need to upgrade your Linux distribution to something more recent."
msgstr "您應該確保系統Python是Python 3.8或更高版本；如果不是（例如，Ubuntu 18.04 附帶 Python 3.6），則需要將 Linux 發行版升級到更新的版本。"

#: ../../tutorial/tutorial-0.rst:44 fcf5307896f74be2af500e82ed9c80a8
msgid "Support for Raspberry Pi is limited at this time."
msgstr "目前對 Raspberry Pi 的支援有限。"

#: ../../tutorial/tutorial-0.rst:46 ../../tutorial/tutorial-0.rst:119
#: ../../tutorial/tutorial-0.rst:161 77536b2d4f6b4149afcc2c022f17419c
#: 83a6c79d90854806aba50a7918e8f02b bc42cf196ce04e2eb317ce848e5d442d
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-0.rst:48 d6cfbfc99a60422c9e00a7460f67b939
msgid "If you're on Windows, you can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.8 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:53 e5135a02c3ec47feb850209a46af33f4
msgid "Alternative Python distributions"
msgstr "替代的 Python 發行版"

#: ../../tutorial/tutorial-0.rst:55 a7b4f41a75e54fb0bce12081d1029e46
msgid "There are lots of different ways of installing Python. You can install Python through `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__. You can use `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ to manage multiple Python installs on the same machine. Windows users can install Python from the Windows App Store. Users from a data science background might want to use `Anaconda <https://docs.anaconda.com/anaconda/install/>`__ or `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__."
msgstr "安裝 Python 有很多不同的方法。您可以透過 `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__ 安裝 Python。您可以使用 `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ 來管理同一台電腦上的多個 Python 安裝。 Windows 使用者可以從 Windows App Store 安裝 Python。有數據科學背景的用戶可能希望使用 `Anaconda <https://docs.anaconda.com/anaconda/install/>`_ 或 `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__ 。"

#: ../../tutorial/tutorial-0.rst:65 e4de035109024b2e8806c8b444058d1c
msgid "If you're on macOS or Windows, it doesn't matter *how* you've installed Python - it only matters that you can run ``python3`` from your operating system's command prompt/terminal application, and get a working Python interpreter."
msgstr "如果你在 macOS 或 Windows 上，你如何安裝 Python 並不重要 - 重要的是你可以從作業系統的命令提示字元/終端應用程式運行 ``python3`` ，並獲得一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:70 ee79eb8c79694bf4b37d8d940b17c5b3
msgid "If you're on Linux, you should use the system Python provided by your operating system. You will be able to complete *most* of this tutorial using a non-system Python, but you won't be able to package your application for distribution to others."
msgstr "如果您使用的是 Linux，則應該使用作業系統提供的系統 Python。您將能夠使用非系統 Python 完成本教程的 *大部分* ，但您將無法打包您的應用程式以分發給其他人。"

#: ../../tutorial/tutorial-0.rst:78 b13d627b43ac48c4844b4aba9fffc939
msgid "Install dependencies"
msgstr "安裝依賴項"

#: ../../tutorial/tutorial-0.rst:80 f59a038f1dd546bfaaf4be07adbbea6e
msgid "Next, install the additional dependencies needed for your operating system:"
msgstr "接下來，安裝作業系統所需的其他依賴項："

#: ../../tutorial/tutorial-0.rst:86 1f95101244974949a905e3b83af845bd
msgid "Building BeeWare apps on macOS requires:"
msgstr "在 macOS 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:88 997ca684cf5d46f9a790852de8216da1
msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above."
msgstr "**Git** ，版本控制系統。它包含在您上面安裝的 Xcode 或命令列開發人員工具中。"

#: ../../tutorial/tutorial-0.rst:93 4fc9ea9467b149cb86654f8bcfb06929
msgid "To support local development, you'll need to install some system packages. The list of packages required varies depending on your distribution:"
msgstr "為了支援本地開發，您需要安裝一些系統軟體包。所需的軟體包清單因您的發行版而異："

#: ../../tutorial/tutorial-0.rst:96 67a7436d2e224c489e8c29968f76970a
msgid "**Ubuntu 20.04+ / Debian 10+**"
msgstr "**Ubuntu 20.04+ / Debian 10+**"

#: ../../tutorial/tutorial-0.rst:107 dcfd60aebc11424fb640bb5d17bc6e30
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../tutorial/tutorial-0.rst:113 0e29549715de451ea1cc91097f07dc53
msgid "**Arch, Manjaro**"
msgstr "**Arch, Manjaro**"

#: ../../tutorial/tutorial-0.rst:121 3420d1203a4b432ba36d9941e52b09f0
msgid "Building BeeWare apps on Windows requires:"
msgstr "在 Windows 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:123 eb2fb71b0a7147c19f99955c61ae6be1
msgid "**Git**, a version control system. You can download Git from from `git-scm.org <https://git-scm.com/download/>`__."
msgstr "**Git** ，版本控制系統。您可以從 `git-scm.org <https://git-scm.com/download/>`__ 下載 Git。"

#: ../../tutorial/tutorial-0.rst:126 be0c467f87c841dbb27313d0fea26fa6
msgid "After installing these tools, you should ensure you restart any terminal sessions. Windows will only expose newly installed tools terminals started *after* the install has completed."
msgstr "安裝這些工具後，您應該確保重新啟動所有終端會話。 Windows 只會公開安裝完成 *之後* 啟動的新安裝的工具終端。"

#: ../../tutorial/tutorial-0.rst:131 e4ce868720eb4b0c9d5035be9b86f0f3
msgid "Set up a virtual environment"
msgstr "設定虛擬環境"

#: ../../tutorial/tutorial-0.rst:133 e7658f41d06f44f8b995c37da34d725d
msgid "We're now going to create a virtual environment - a \"sandbox\" that we can use to isolate our work on this tutorial from our main Python installation. If we install packages into the virtual environment, our main Python installation (and any other Python projects on our computer) won't be affected. If we make a complete mess of our virtual environment, we'll be able to simply delete it and start again, without affecting any other Python project on our computer, and without the need to re-install Python."
msgstr "現在，我們將創建一個虛擬環境 - 一個 `沙箱` ，我們可以使用它來將本教程的工作與主 Python 安裝隔離。如果我們將套件安裝到虛擬環境中，我們的主要 Python 安裝（以及我們電腦上的任何其他 Python 專案）將不會受到影響。如果我們把虛擬環境弄得一團糟，我們只需刪除它並重新開始，就不會影響我們電腦上的任何其他 Python 項目，也不需要重新安裝 Python。"

#: ../../tutorial/tutorial-0.rst:170 31246bdf3ef84705b564f7e05ad1363b
msgid "Errors running PowerShell Scripts"
msgstr "執行 PowerShell 腳本時發生錯誤"

#: ../../tutorial/tutorial-0.rst:172 43d725a748e640fcb0d3ab3a0324f988
msgid "If you're using PowerShell, and you receive the error::"
msgstr "如果您使用 PowerShell，並且收到錯誤::"

#: ../../tutorial/tutorial-0.rst:176 de8ba5305e964547b6579d6bb066bad7
msgid "Your Windows account doesn't have permissions to run scripts. To fix this:"
msgstr "您的 Windows 帳戶沒有執行腳本的權限。要解決此問題："

#: ../../tutorial/tutorial-0.rst:178 6d04cd9c4de8481191b22d2668f0b038
msgid "Run Windows PowerShell as Administrator."
msgstr "以管理員身分執行 Windows PowerShell。"

#: ../../tutorial/tutorial-0.rst:179 efda025cf9874a38a0813a408d285fe2
msgid "Run ``set-executionpolicy RemoteSigned``"
msgstr "運行 ``set-executionpolicy RemoteSigned``"

#: ../../tutorial/tutorial-0.rst:180 1e56a9bd1c3046d98a21f7a6419cf47e
msgid "Select ``Y`` to change the execution policy."
msgstr "選擇 ``Y`` 更改執行策略。"

#: ../../tutorial/tutorial-0.rst:182 a61e2eda1e4a4527acd74823609498e9
msgid "Once you've done this you can rerun ``beeware-venv\\Scripts\\activate.ps1`` in your original PowerShell session (or a new session in the same directory)."
msgstr "完成此操作後，您可以在原始 PowerShell 會話（或同一目錄中的新會話）中重新執行 ``beeware-venv\\Scripts\\activate.ps1`` 。"

#: ../../tutorial/tutorial-0.rst:186 c32a267898a54ea2b6aef10d7e960ff7
msgid "If this worked, your prompt should now be changed - it should have a ``(beeware-venv)`` prefix. This lets you know that you're currently in your BeeWare virtual environment. Whenever you're working on this tutorial, you should make sure your virtual environment is activated. If it isn't, re-run the last command (the ``activate`` command) to re-activate your environment."
msgstr "如果這有效，你的提示現在應該改變 - 它應該有一個 ``(beeware-venv)`` 前綴。這可以讓您知道您目前處於 BeeWare 虛擬環境。每當您學習本教學時，您都應該確保您的虛擬環境已啟動。如果不是，請重新執行最後一個命令（ ``activate`` 命令）以啟動您的虛擬環境。"

#: ../../tutorial/tutorial-0.rst:192 f2d5ae6c676142698fa63246a75542c7
msgid "Alternative virtual environments"
msgstr "替代的虛擬環境"

#: ../../tutorial/tutorial-0.rst:194 638cd06d13044805a1d82358997e28d7
msgid "If you're using Anaconda or miniconda, you may be more familiar with using conda environments. You might also have heard of ``virtualenv``, a predecessor to Python's built in ``venv`` module. As with Python installs - if you're on macOS or Windows, it doesn't matter *how* you create your virtual environment, as long as you have one. If you're on Linux, you should stick to ``venv`` and the system Python."
msgstr "如果您使用 Anaconda 或 miniconda，您可能會更熟悉使用 conda 環境。您可能也聽說過 ``virtualenv`` ，它是 Python 內建的 ``venv`` 模組的前身。與 Python 安裝一樣 - 如果您使用的是 macOS 或 Windows，只要您有一個虛擬環境， *如何* 建立虛擬環境並不重要。如果您使用的是 Linux，則應該堅持使用 ``venv`` 和系統 Python。"

#: ../../tutorial/tutorial-0.rst:202 fdd0cca760c14ccfa88d58022a8dd4ee
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-0.rst:204 67d28129da7e4f75801352edace8a472
msgid "We've now set up our environment. We're ready to :doc:`create our first BeeWare application <tutorial-1>`."
msgstr "我們現在已經設定好了我們的環境。我們準備好 :doc:`創建我們的第一個 BeeWare 應用程式<tutorial-1>`。"

