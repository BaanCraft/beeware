# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-21 20:05+0000\n"
"PO-Revision-Date: 2024-04-12 07:01+0000\n"
"Last-Translator: sus <jeffpeng2012@gmail.com>\n"
"Language: zh_TW\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-0/zh_Hant/>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../tutorial/tutorial-0.rst:3 eb1bc7e8083c47c6b04e2c5e51e73f0b
msgid "Tutorial 0 - Let's get set up!"
msgstr "教學 0 - 讓我們開始設定吧！"

#: ../../tutorial/tutorial-0.rst:5 8b43fc68c5234346a72cda799dc13970
msgid "Before we build our first BeeWare app, we have to make sure we've got all the prerequisites for running BeeWare."
msgstr "在建立第一個 BeeWare 應用程式之前，我們必須確保具備運行 BeeWare 的所有先決條件。"

#: ../../tutorial/tutorial-0.rst:9 511ea80b81b84e6499a77edc47da9344
msgid "Install Python"
msgstr "安裝Python"

#: ../../tutorial/tutorial-0.rst:11 659365af713f4e5db072eac18874ad87
msgid "The first thing we'll need is a working Python interpreter."
msgstr "我們首先需要的是一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:15 ../../tutorial/tutorial-0.rst:84
#: ../../tutorial/tutorial-0.rst:153 901e2c14705440c5b21a269c4167c8ac
#: b981013fb15b4193a3c653053aba29b5 ea21b18da7c643949aebe69ea30da190
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-0.rst:17 ded363bccd3e4e6b9020e8134c4e50bb
msgid "If you're on macOS, a recent version of Python is included with Xcode or the command line developer tools. To check if you already have it, run the following command:"
msgstr "如果您使用的是 macOS，則 Xcode 或命令列開發人員工具中包含最新版本的 Python。要檢查您是否已經擁有它，請執行以下命令："

#: ../../tutorial/tutorial-0.rst:25 3a02cff9d3c94e07ab904504c5d23ff2
msgid "If Python is installed, you'll see its version number. Otherwise, you'll be prompted to install the command line developer tools."
msgstr "如果安裝了 Python，您將看到其版本號。否則，系統將提示您安裝命令列開發人員工具。"

#: ../../tutorial/tutorial-0.rst:28 f6060124797346f5bb04b8fba4b866a1
#, fuzzy
msgid "You should ensure that you are using Python 3.8 or newer. If it isn't, you'll need to upgrade your Python install. You can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.8 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:35 ../../tutorial/tutorial-0.rst:94
#: ../../tutorial/tutorial-0.rst:162 22eb2eb1cc5846f88ac215e31b5f5d4c
#: 78d3152bdf174ba1a464c50281c1a899 bce81db734eb49d09e1a616ca77ff8cc
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-0.rst:37 0fcac53e1d7a4d188d9b4b23f4142eeb
msgid "If you're on Linux, you'll install Python using the system package manager (``apt`` on Debian/Ubuntu/Mint, ``dnf`` on Fedora, or ``pacman`` on Arch)."
msgstr "如果您使用的是 Linux，則會使用系統套件管理器（Debian/Ubuntu/Mint 上的 ``apt`` 、Fedora 上的 ``dnf`` 或 Arch 上的 ``pacman`` ）安裝 Python。"

#: ../../tutorial/tutorial-0.rst:40 6241c21cff014645889d29db3ad1a552
msgid "You should ensure that the system Python is Python 3.8 or newer; if it isn't (e.g., Ubuntu 18.04 ships with Python 3.6), you'll need to upgrade your Linux distribution to something more recent."
msgstr "您應該確保系統Python是Python 3.8或更高版本；如果不是（例如，Ubuntu 18.04 附帶 Python 3.6），則需要將 Linux 發行版升級到更新的版本。"

#: ../../tutorial/tutorial-0.rst:44 d0f5b0f07097491c933345d61af6b105
msgid "Support for Raspberry Pi is limited at this time."
msgstr "目前對 Raspberry Pi 的支援有限。"

#: ../../tutorial/tutorial-0.rst:46 ../../tutorial/tutorial-0.rst:129
#: ../../tutorial/tutorial-0.rst:171 03a69ebfdc484003bb6e68a29583e36d
#: 765bdbff26214e7e92f2f46d841654bc fd5b7c60921343d7b574ef08fd83b12e
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-0.rst:48 96104e7bc6e749948b72c3d9c1edab1c
msgid "If you're on Windows, you can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.8 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:53 86db4a4f4a924b81b3f5e011b1660741
msgid "Alternative Python distributions"
msgstr "替代的 Python 發行版"

#: ../../tutorial/tutorial-0.rst:55 01c8a608ab574bd1a9b933acf43c7adb
msgid "There are lots of different ways of installing Python. You can install Python through `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__. You can use `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ to manage multiple Python installs on the same machine. Windows users can install Python from the Windows App Store. Users from a data science background might want to use `Anaconda <https://docs.anaconda.com/anaconda/install/>`__ or `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__."
msgstr "安裝 Python 有很多不同的方法。您可以透過 `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__ 安裝 Python。您可以使用 `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ 來管理同一台電腦上的多個 Python 安裝。 Windows 使用者可以從 Windows App Store 安裝 Python。有數據科學背景的用戶可能希望使用 `Anaconda <https://docs.anaconda.com/anaconda/install/>`_ 或 `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__ 。"

#: ../../tutorial/tutorial-0.rst:65 748544b03d144760897bf1b201ca734a
msgid "If you're on macOS or Windows, it doesn't matter *how* you've installed Python - it only matters that you can run ``python3`` from your operating system's command prompt/terminal application, and get a working Python interpreter."
msgstr "如果你在 macOS 或 Windows 上，你如何安裝 Python 並不重要 - 重要的是你可以從作業系統的命令提示字元/終端應用程式運行 ``python3`` ，並獲得一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:70 c928721783e744b68bcb4d4181925112
#, fuzzy
msgid "If you're on Linux, you *must* use the system Python provided by your operating system. You will be able to complete *most* of this tutorial using a non-system Python, but you won't be able to package your application for distribution to others."
msgstr "如果您使用的是 Linux，則應該使用作業系統提供的系統 Python。您將能夠使用非系統 Python 完成本教程的 *大部分* ，但您將無法打包您的應用程式以分發給其他人。"

#: ../../tutorial/tutorial-0.rst:78 f8f9b4cfef4e4578872ee20f1e08d2be
msgid "Install dependencies"
msgstr "安裝依賴項"

#: ../../tutorial/tutorial-0.rst:80 41f0427dcedc4c3b903037d404e53ca6
msgid "Next, install the additional dependencies needed for your operating system:"
msgstr "接下來，安裝作業系統所需的其他依賴項："

#: ../../tutorial/tutorial-0.rst:86 69000de7b3b740c5916eb7d8c25fae2b
msgid "Building BeeWare apps on macOS requires:"
msgstr "在 macOS 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:88 91ac8491bf57410eb2dd7b6f8068c239
msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above. You may need to open Xcode for the first time in order for Git to work in your terminal session. If it still doesn't register that Git is installed, you may need to restart your terminal session."
msgstr ""

#: ../../tutorial/tutorial-0.rst:96 ff60720c56d44448a400f6aa871dd217
msgid "To support local development, you'll need to install some system packages. The list of packages required varies depending on your distribution:"
msgstr "為了支援本地開發，您需要安裝一些系統軟體包。所需的軟體包清單因您的發行版而異："

#: ../../tutorial/tutorial-0.rst:99 2ca78bf1b8734569a5eb5406dfe1d586
#, fuzzy
msgid "**Ubuntu / Debian**"
msgstr "**Ubuntu 20.04+ / Debian 10+**"

#: ../../tutorial/tutorial-0.rst:110 a3914b9577964a7cb0d4e589647233f3
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../tutorial/tutorial-0.rst:116 4475390587a944a9b4209e4b25e811a9
#, fuzzy
msgid "**Arch / Manjaro**"
msgstr "**Arch, Manjaro**"

#: ../../tutorial/tutorial-0.rst:122 e7f1125eab8645309e377c5b66670e00
msgid "**OpenSUSE Tumbleweed**"
msgstr ""

#: ../../tutorial/tutorial-0.rst:131 3e996cd0776149bda406332fb2f68eb1
msgid "Building BeeWare apps on Windows requires:"
msgstr "在 Windows 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:133 4b305e48a5e844bc80810dead4516262
msgid "**Git**, a version control system. You can download Git from from `git-scm.org <https://git-scm.com/download/>`__."
msgstr "**Git** ，版本控制系統。您可以從 `git-scm.org <https://git-scm.com/download/>`__ 下載 Git。"

#: ../../tutorial/tutorial-0.rst:136 a2b0dff2aba0429993de3cbd7fa4a7e0
msgid "After installing these tools, you should ensure you restart any terminal sessions. Windows will only expose newly installed tools terminals started *after* the install has completed."
msgstr "安裝這些工具後，您應該確保重新啟動所有終端會話。 Windows 只會公開安裝完成 *之後* 啟動的新安裝的工具終端。"

#: ../../tutorial/tutorial-0.rst:141 f5fa261258d7497ab00344faf65189c5
msgid "Set up a virtual environment"
msgstr "設定虛擬環境"

#: ../../tutorial/tutorial-0.rst:143 d7ce1c20752644d88dcdc696204c7095
msgid "We're now going to create a virtual environment - a \"sandbox\" that we can use to isolate our work on this tutorial from our main Python installation. If we install packages into the virtual environment, our main Python installation (and any other Python projects on our computer) won't be affected. If we make a complete mess of our virtual environment, we'll be able to simply delete it and start again, without affecting any other Python project on our computer, and without the need to re-install Python."
msgstr "現在，我們將創建一個虛擬環境 - 一個 `沙箱` ，我們可以使用它來將本教程的工作與主 Python 安裝隔離。如果我們將套件安裝到虛擬環境中，我們的主要 Python 安裝（以及我們電腦上的任何其他 Python 專案）將不會受到影響。如果我們把虛擬環境弄得一團糟，我們只需刪除它並重新開始，就不會影響我們電腦上的任何其他 Python 項目，也不需要重新安裝 Python。"

#: ../../tutorial/tutorial-0.rst:180 1684cb1156eb4b4199a18b030cda0425
msgid "Errors running PowerShell Scripts"
msgstr "執行 PowerShell 腳本時發生錯誤"

#: ../../tutorial/tutorial-0.rst:182 7094f6eab0db4ea9a162dabf81cf6a57
msgid "If you're using PowerShell, and you receive the error::"
msgstr "如果您使用 PowerShell，並且收到錯誤::"

#: ../../tutorial/tutorial-0.rst:186 e308ba27eb1649dabd6313022c869b25
msgid "Your Windows account doesn't have permissions to run scripts. To fix this:"
msgstr "您的 Windows 帳戶沒有執行腳本的權限。要解決此問題："

#: ../../tutorial/tutorial-0.rst:188 1ac5b208afdb4498a5e2b7452c20b5a9
msgid "Run `Windows PowerShell as Administrator <https://learn.microsoft.com/en-us/powershell/scripting/windows-powershell/starting-windows-powershell?view=powershell-7.4>`_."
msgstr ""

#: ../../tutorial/tutorial-0.rst:189 c015ba5e8e4a4ce29d61db4c1e1fc428
msgid "Run ``set-executionpolicy RemoteSigned``"
msgstr "運行 ``set-executionpolicy RemoteSigned``"

#: ../../tutorial/tutorial-0.rst:190 d2f7f4c5fc7d4013b7f3dc0cbd2ea669
msgid "Select ``Y`` to change the execution policy."
msgstr "選擇 ``Y`` 更改執行策略。"

#: ../../tutorial/tutorial-0.rst:192 74a4fcbd37d64bfd84cf028cd49d8805
msgid "Once you've done this you can rerun ``beeware-venv\\Scripts\\activate.ps1`` in your original PowerShell session (or a new session in the same directory)."
msgstr "完成此操作後，您可以在原始 PowerShell 會話（或同一目錄中的新會話）中重新執行 ``beeware-venv\\Scripts\\activate.ps1`` 。"

#: ../../tutorial/tutorial-0.rst:196 0ee1dfad0e3d47d784dfc3b400b46701
msgid "If this worked, your prompt should now be changed - it should have a ``(beeware-venv)`` prefix. This lets you know that you're currently in your BeeWare virtual environment. Whenever you're working on this tutorial, you should make sure your virtual environment is activated. If it isn't, re-run the last command (the ``activate`` command) to re-activate your environment."
msgstr "如果這有效，你的提示現在應該改變 - 它應該有一個 ``(beeware-venv)`` 前綴。這可以讓您知道您目前處於 BeeWare 虛擬環境。每當您學習本教學時，您都應該確保您的虛擬環境已啟動。如果不是，請重新執行最後一個命令（ ``activate`` 命令）以啟動您的虛擬環境。"

#: ../../tutorial/tutorial-0.rst:202 4a4510030c6741968335cb15793c9db7
msgid "Alternative virtual environments"
msgstr "替代的虛擬環境"

#: ../../tutorial/tutorial-0.rst:204 4011b3666bb74bce820f3da1592bd1c4
msgid "If you're using Anaconda or miniconda, you may be more familiar with using conda environments. You might also have heard of ``virtualenv``, a predecessor to Python's built in ``venv`` module. As with Python installs - if you're on macOS or Windows, it doesn't matter *how* you create your virtual environment, as long as you have one. If you're on Linux, you should stick to ``venv`` and the system Python."
msgstr "如果您使用 Anaconda 或 miniconda，您可能會更熟悉使用 conda 環境。您可能也聽說過 ``virtualenv`` ，它是 Python 內建的 ``venv`` 模組的前身。與 Python 安裝一樣 - 如果您使用的是 macOS 或 Windows，只要您有一個虛擬環境， *如何* 建立虛擬環境並不重要。如果您使用的是 Linux，則應該堅持使用 ``venv`` 和系統 Python。"

#: ../../tutorial/tutorial-0.rst:212 c94226ceed95422c829eec7d245c2aaa
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-0.rst:214 2d333ec83f174cca8f071823e4771091
msgid "We've now set up our environment. We're ready to :doc:`create our first BeeWare application <tutorial-1>`."
msgstr "我們現在已經設定好了我們的環境。我們準備好 :doc:`創建我們的第一個 BeeWare 應用程式<tutorial-1>`。"

#~ msgid "Run Windows PowerShell as Administrator."
#~ msgstr "以管理員身分執行 Windows PowerShell。"

#~ msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above."
#~ msgstr "**Git** ，版本控制系統。它包含在您上面安裝的 Xcode 或命令列開發人員工具中。"

