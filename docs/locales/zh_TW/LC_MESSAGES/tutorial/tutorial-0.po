# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-20 19:10+0000\n"
"PO-Revision-Date: 2024-04-12 07:01+0000\n"
"Last-Translator: sus <jeffpeng2012@gmail.com>\n"
"Language: zh_TW\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-0/zh_Hant/>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../tutorial/tutorial-0.rst:3 e0c3f5a0792644919731b741fc5dc233
msgid "Tutorial 0 - Let's get set up!"
msgstr "教學 0 - 讓我們開始設定吧！"

#: ../../tutorial/tutorial-0.rst:5 85b2a396558540feba07f2ac33fe2b7d
msgid "Before we build our first BeeWare app, we have to make sure we've got all the prerequisites for running BeeWare."
msgstr "在建立第一個 BeeWare 應用程式之前，我們必須確保具備運行 BeeWare 的所有先決條件。"

#: ../../tutorial/tutorial-0.rst:9 13020e19a62546a1b430b1d5c199583d
msgid "Install Python"
msgstr "安裝Python"

#: ../../tutorial/tutorial-0.rst:11 6cedc8f864824389bd942918224191d3
msgid "The first thing we'll need is a working Python interpreter."
msgstr "我們首先需要的是一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:15 ../../tutorial/tutorial-0.rst:84
#: ../../tutorial/tutorial-0.rst:150 33e67e4bcd4e465e9d4b3151d8e2cc80
#: 541bd3073c9c469c8171f5b87472d3b2 6812a2ad3f514ea4b10e684e40f32c2b
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-0.rst:17 60613ae1cc3d46c394bd54e0cbacf5c6
msgid "If you're on macOS, a recent version of Python is included with Xcode or the command line developer tools. To check if you already have it, run the following command:"
msgstr "如果您使用的是 macOS，則 Xcode 或命令列開發人員工具中包含最新版本的 Python。要檢查您是否已經擁有它，請執行以下命令："

#: ../../tutorial/tutorial-0.rst:25 c9550a18d7ea4df29b622d38a2ac1913
msgid "If Python is installed, you'll see its version number. Otherwise, you'll be prompted to install the command line developer tools."
msgstr "如果安裝了 Python，您將看到其版本號。否則，系統將提示您安裝命令列開發人員工具。"

#: ../../tutorial/tutorial-0.rst:28 420330692bfa45f38abd025e8ff7d833
#, fuzzy
msgid "You should ensure that you are using Python 3.8 or newer. If it isn't, you'll need to upgrade your Python install. You can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.8 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:35 ../../tutorial/tutorial-0.rst:91
#: ../../tutorial/tutorial-0.rst:159 148a0542650d4cb7be1ab753620e9833
#: 2c5be9706a0c40498633ab92f9003b98 ee58a70d19fe479082f2372d8ff42905
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-0.rst:37 63070ac714fc46db8d56520fd9b4dd4e
msgid "If you're on Linux, you'll install Python using the system package manager (``apt`` on Debian/Ubuntu/Mint, ``dnf`` on Fedora, or ``pacman`` on Arch)."
msgstr "如果您使用的是 Linux，則會使用系統套件管理器（Debian/Ubuntu/Mint 上的 ``apt`` 、Fedora 上的 ``dnf`` 或 Arch 上的 ``pacman`` ）安裝 Python。"

#: ../../tutorial/tutorial-0.rst:40 ab014d5656c349f7bb907b2c1c22b6c0
msgid "You should ensure that the system Python is Python 3.8 or newer; if it isn't (e.g., Ubuntu 18.04 ships with Python 3.6), you'll need to upgrade your Linux distribution to something more recent."
msgstr "您應該確保系統Python是Python 3.8或更高版本；如果不是（例如，Ubuntu 18.04 附帶 Python 3.6），則需要將 Linux 發行版升級到更新的版本。"

#: ../../tutorial/tutorial-0.rst:44 a05b8d0a2caa4b07af0399b7c5c7a033
msgid "Support for Raspberry Pi is limited at this time."
msgstr "目前對 Raspberry Pi 的支援有限。"

#: ../../tutorial/tutorial-0.rst:46 ../../tutorial/tutorial-0.rst:126
#: ../../tutorial/tutorial-0.rst:168 914a543e34d845ca8115375c3e9769d2
#: d1ee39b08c9a44d3983307f9baaaefed ddb2a62b592b4b13a4bc57bf102ef300
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-0.rst:48 3b42da500e814824bae1489700b5737f
msgid "If you're on Windows, you can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.8 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr "如果您使用的是 Windows，則可以從 `Python 網站 <https://www.python.org/downloads>`_ 取得官方安裝程式。您可以使用 3.8 及以上的任何穩定版本的 Python。我們建議避免 alpha、beta 和候選版本，除非您 **真的** 知道自己在做什麼。"

#: ../../tutorial/tutorial-0.rst:53 4badf384736a41df9fb947d86be12514
msgid "Alternative Python distributions"
msgstr "替代的 Python 發行版"

#: ../../tutorial/tutorial-0.rst:55 70d2d4bb4b574128b3d2fabeabc65fb1
msgid "There are lots of different ways of installing Python. You can install Python through `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__. You can use `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ to manage multiple Python installs on the same machine. Windows users can install Python from the Windows App Store. Users from a data science background might want to use `Anaconda <https://docs.anaconda.com/anaconda/install/>`__ or `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__."
msgstr "安裝 Python 有很多不同的方法。您可以透過 `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__ 安裝 Python。您可以使用 `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ 來管理同一台電腦上的多個 Python 安裝。 Windows 使用者可以從 Windows App Store 安裝 Python。有數據科學背景的用戶可能希望使用 `Anaconda <https://docs.anaconda.com/anaconda/install/>`_ 或 `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__ 。"

#: ../../tutorial/tutorial-0.rst:65 be7ff70156804f629aa5293832766598
msgid "If you're on macOS or Windows, it doesn't matter *how* you've installed Python - it only matters that you can run ``python3`` from your operating system's command prompt/terminal application, and get a working Python interpreter."
msgstr "如果你在 macOS 或 Windows 上，你如何安裝 Python 並不重要 - 重要的是你可以從作業系統的命令提示字元/終端應用程式運行 ``python3`` ，並獲得一個可用的 Python 直譯器。"

#: ../../tutorial/tutorial-0.rst:70 1adb609b8eac48bbb96bc63a4ccb4586
msgid "If you're on Linux, you should use the system Python provided by your operating system. You will be able to complete *most* of this tutorial using a non-system Python, but you won't be able to package your application for distribution to others."
msgstr "如果您使用的是 Linux，則應該使用作業系統提供的系統 Python。您將能夠使用非系統 Python 完成本教程的 *大部分* ，但您將無法打包您的應用程式以分發給其他人。"

#: ../../tutorial/tutorial-0.rst:78 5fcf7192089f474ab44cf8fed9dbf848
msgid "Install dependencies"
msgstr "安裝依賴項"

#: ../../tutorial/tutorial-0.rst:80 b4b6726bf5e64fa3bd84dd170988ebb6
msgid "Next, install the additional dependencies needed for your operating system:"
msgstr "接下來，安裝作業系統所需的其他依賴項："

#: ../../tutorial/tutorial-0.rst:86 f8beea82cc7c4bb9a48672465c2cba9f
msgid "Building BeeWare apps on macOS requires:"
msgstr "在 macOS 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:88 351e169b34334be1af53129f16900ea1
msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above."
msgstr "**Git** ，版本控制系統。它包含在您上面安裝的 Xcode 或命令列開發人員工具中。"

#: ../../tutorial/tutorial-0.rst:93 942cd2a9417e419884e17cae0436692a
msgid "To support local development, you'll need to install some system packages. The list of packages required varies depending on your distribution:"
msgstr "為了支援本地開發，您需要安裝一些系統軟體包。所需的軟體包清單因您的發行版而異："

#: ../../tutorial/tutorial-0.rst:96 05829d46a5fb4e1da1aa29f86af73e04
#, fuzzy
msgid "**Ubuntu / Debian**"
msgstr "**Ubuntu 20.04+ / Debian 10+**"

#: ../../tutorial/tutorial-0.rst:107 98e0f64d4a7e402289e35e5fa77cbc24
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../tutorial/tutorial-0.rst:113 36d5ebc3aa13435cb8ab4e249e5a9421
#, fuzzy
msgid "**Arch / Manjaro**"
msgstr "**Arch, Manjaro**"

#: ../../tutorial/tutorial-0.rst:119 1f17437fa236422b9266b44150c72ce1
msgid "**OpenSUSE Tumbleweed**"
msgstr ""

#: ../../tutorial/tutorial-0.rst:128 28b7a2f194504f7c9beca86f8b059137
msgid "Building BeeWare apps on Windows requires:"
msgstr "在 Windows 上建立 BeeWare 應用程式需要："

#: ../../tutorial/tutorial-0.rst:130 936c5cee5c5c47429e3d8e00d9917350
msgid "**Git**, a version control system. You can download Git from from `git-scm.org <https://git-scm.com/download/>`__."
msgstr "**Git** ，版本控制系統。您可以從 `git-scm.org <https://git-scm.com/download/>`__ 下載 Git。"

#: ../../tutorial/tutorial-0.rst:133 a737a6e8a92240d8833137d293cfbb0b
msgid "After installing these tools, you should ensure you restart any terminal sessions. Windows will only expose newly installed tools terminals started *after* the install has completed."
msgstr "安裝這些工具後，您應該確保重新啟動所有終端會話。 Windows 只會公開安裝完成 *之後* 啟動的新安裝的工具終端。"

#: ../../tutorial/tutorial-0.rst:138 045b209b33c84cfc9c92a2e28ee63166
msgid "Set up a virtual environment"
msgstr "設定虛擬環境"

#: ../../tutorial/tutorial-0.rst:140 47984cdae09b4308bb336b6f0a3dcf09
msgid "We're now going to create a virtual environment - a \"sandbox\" that we can use to isolate our work on this tutorial from our main Python installation. If we install packages into the virtual environment, our main Python installation (and any other Python projects on our computer) won't be affected. If we make a complete mess of our virtual environment, we'll be able to simply delete it and start again, without affecting any other Python project on our computer, and without the need to re-install Python."
msgstr "現在，我們將創建一個虛擬環境 - 一個 `沙箱` ，我們可以使用它來將本教程的工作與主 Python 安裝隔離。如果我們將套件安裝到虛擬環境中，我們的主要 Python 安裝（以及我們電腦上的任何其他 Python 專案）將不會受到影響。如果我們把虛擬環境弄得一團糟，我們只需刪除它並重新開始，就不會影響我們電腦上的任何其他 Python 項目，也不需要重新安裝 Python。"

#: ../../tutorial/tutorial-0.rst:177 4b305b8b7682482f86806db14f66b715
msgid "Errors running PowerShell Scripts"
msgstr "執行 PowerShell 腳本時發生錯誤"

#: ../../tutorial/tutorial-0.rst:179 0fabac90bd9b44d3bd02d136dc893de9
msgid "If you're using PowerShell, and you receive the error::"
msgstr "如果您使用 PowerShell，並且收到錯誤::"

#: ../../tutorial/tutorial-0.rst:183 6a4bcfa26bfb4a8d8a51471fd7468723
msgid "Your Windows account doesn't have permissions to run scripts. To fix this:"
msgstr "您的 Windows 帳戶沒有執行腳本的權限。要解決此問題："

#: ../../tutorial/tutorial-0.rst:185 5a83ef1b55bd4ab1b9667a6218ab60e7
msgid "Run `Windows PowerShell as Administrator <https://learn.microsoft.com/en-us/powershell/scripting/windows-powershell/starting-windows-powershell?view=powershell-7.4>`_."
msgstr ""

#: ../../tutorial/tutorial-0.rst:186 74a4422484924279ad231e53e2f7dd80
msgid "Run ``set-executionpolicy RemoteSigned``"
msgstr "運行 ``set-executionpolicy RemoteSigned``"

#: ../../tutorial/tutorial-0.rst:187 e0cf6876eece41a4adc0e24080ffbc04
msgid "Select ``Y`` to change the execution policy."
msgstr "選擇 ``Y`` 更改執行策略。"

#: ../../tutorial/tutorial-0.rst:189 6d3a630da96f4c3b9f6bddfb4a64ed60
msgid "Once you've done this you can rerun ``beeware-venv\\Scripts\\activate.ps1`` in your original PowerShell session (or a new session in the same directory)."
msgstr "完成此操作後，您可以在原始 PowerShell 會話（或同一目錄中的新會話）中重新執行 ``beeware-venv\\Scripts\\activate.ps1`` 。"

#: ../../tutorial/tutorial-0.rst:193 f209eab388c749c28931974968fd734b
msgid "If this worked, your prompt should now be changed - it should have a ``(beeware-venv)`` prefix. This lets you know that you're currently in your BeeWare virtual environment. Whenever you're working on this tutorial, you should make sure your virtual environment is activated. If it isn't, re-run the last command (the ``activate`` command) to re-activate your environment."
msgstr "如果這有效，你的提示現在應該改變 - 它應該有一個 ``(beeware-venv)`` 前綴。這可以讓您知道您目前處於 BeeWare 虛擬環境。每當您學習本教學時，您都應該確保您的虛擬環境已啟動。如果不是，請重新執行最後一個命令（ ``activate`` 命令）以啟動您的虛擬環境。"

#: ../../tutorial/tutorial-0.rst:199 152b3584431742ad956028ca2502dbf3
msgid "Alternative virtual environments"
msgstr "替代的虛擬環境"

#: ../../tutorial/tutorial-0.rst:201 6b90b9b2517e4324a2d4cff5f80b2051
msgid "If you're using Anaconda or miniconda, you may be more familiar with using conda environments. You might also have heard of ``virtualenv``, a predecessor to Python's built in ``venv`` module. As with Python installs - if you're on macOS or Windows, it doesn't matter *how* you create your virtual environment, as long as you have one. If you're on Linux, you should stick to ``venv`` and the system Python."
msgstr "如果您使用 Anaconda 或 miniconda，您可能會更熟悉使用 conda 環境。您可能也聽說過 ``virtualenv`` ，它是 Python 內建的 ``venv`` 模組的前身。與 Python 安裝一樣 - 如果您使用的是 macOS 或 Windows，只要您有一個虛擬環境， *如何* 建立虛擬環境並不重要。如果您使用的是 Linux，則應該堅持使用 ``venv`` 和系統 Python。"

#: ../../tutorial/tutorial-0.rst:209 9d154b200b484fb98dd45ee1b82c7b34
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-0.rst:211 38cdfb23b38147adac64334dac8ac3b6
msgid "We've now set up our environment. We're ready to :doc:`create our first BeeWare application <tutorial-1>`."
msgstr "我們現在已經設定好了我們的環境。我們準備好 :doc:`創建我們的第一個 BeeWare 應用程式<tutorial-1>`。"

#~ msgid "Run Windows PowerShell as Administrator."
#~ msgstr "以管理員身分執行 Windows PowerShell。"

