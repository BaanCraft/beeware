msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-25 04:42+0000\n"
"PO-Revision-Date: 2025-04-20 22:01+0000\n"
"Last-Translator: John <johnzhou721@gmail.com>\n"
"Language-Team: Chinese (Simplified Han script) <https://hosted.weblate.org/"
"projects/beeware/tutorial/tutorial-0/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.11.1-dev\n"
"Generated-By: Babel 2.16.0\n"

#: ../../tutorial/tutorial-0.rst:3 a7080c0d128e459e841635ede8753759
msgid "Tutorial 0 - Let's get set up!"
msgstr "教程 0 - 让我们开始吧！"

#: ../../tutorial/tutorial-0.rst:5 531c898a2fac41adadabb016ad34a08a
msgid "Before we build our first BeeWare app, we have to make sure we've got all the prerequisites for running BeeWare."
msgstr "在构建第一个使用 BeeWare 的应用程序之前，我们必须确保已具备运行 BeeWare "
"的所有先决条件。"

#: ../../tutorial/tutorial-0.rst:11 db2c3c34a4774e25b86fdeb6fa729536
msgid "Install Python"
msgstr "安装 Python"

#: ../../tutorial/tutorial-0.rst:13 774d1224ab0a4cbf8b6005bedcb3fcab
msgid "The first thing we'll need is a working Python interpreter."
msgstr "首先，我们需要一个正常工作的 Python 解释器。"

#: ../../tutorial/tutorial-0.rst:17 ../../tutorial/tutorial-0.rst:88
#: ../../tutorial/tutorial-0.rst:157 0170cf9f02fa457f867a9b35fa469d2c
#: 83a05ab2dc424e249e65d82589945453 9f7ebc68e0784bc78935fdd86c2adc66
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-0.rst:19 949d592ab01043c9beeaefc1acf63e07
msgid "If you're on macOS, a recent version of Python is included with Xcode or the command line developer tools. To check if you already have it, run the following command:"
msgstr "如果您使用的是 macOS，Xcode 或命令行开发工具中会包含最新版本的 "
"Python。要检查是否已安装，请运行以下命令："

#: ../../tutorial/tutorial-0.rst:27 5f923f1d6e374476b1dab6579e321219
msgid "If Python is installed, you'll see its version number. Otherwise, you'll be prompted to install the command line developer tools."
msgstr "如果已安装 Python，则会看到其版本号。否则，系统会提示您安装命令行开发工具。"

#: ../../tutorial/tutorial-0.rst:30 41f19bfc516e4f29bdf89db879d2591e
msgid "You should ensure that you are using Python 3.9 or newer. If it isn't, you'll need to upgrade your Python install. You can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.9 onward. We'd advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr ""
"您应该确保您使用的是 Python 3.9 或更高版本。如果不是，则需要升级 Python "
"安装。您可以从 `Python官网 <https://www.python.org/downloads>`_ "
"获取官方安装程序。从 3.9 开始，您可以使用任何稳定版本的 Python。"
"我们建议避免使用 Alpha、Beta 和候选版本，除非你真的知道自己在做什么。"

#: ../../tutorial/tutorial-0.rst:37 ../../tutorial/tutorial-0.rst:98
#: ../../tutorial/tutorial-0.rst:166 3624709aede84845a17f69312657f558
#: 6d8949d4ab344619b818fa341a87f657 888ec70e42a64ac581880988f39108d3
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-0.rst:39 993bd14ac3dc410a9929544d4395fde5
msgid "If you're on Linux, you'll install Python using the system package manager (``apt`` on Debian/Ubuntu/Mint, ``dnf`` on Fedora, or ``pacman`` on Arch)."
msgstr ""
"如果您使用的是 Linux，您将使用系统软件包管理器（Debian/Ubuntu/Mint 上的 "
"``apt``，Fedora 上的 ``dnf``，或 Arch 上的 ``pacman``）安装 Python。"

#: ../../tutorial/tutorial-0.rst:42 76bdbfedbad54feebd4b4375808018c6
msgid "You should ensure that the system Python is Python 3.9 or newer; if it isn't (e.g., Ubuntu 20.04 ships with Python 3.8), you'll need to upgrade your Linux distribution to something more recent."
msgstr ""
"您应该确保系统 Python 是 Python 3.9 或更高；如果不是（例如，Ubuntu 20.04 "
"附带 Python 3.8），您需要将您的 Linux 发行版升级到更新版本。"

#: ../../tutorial/tutorial-0.rst:46 b1f1cbd00bc34fc8bc059a329ae91a3e
msgid "Support for Raspberry Pi is limited at this time."
msgstr "目前对 Raspberry Pi 的支持有限。"

#: ../../tutorial/tutorial-0.rst:48 ../../tutorial/tutorial-0.rst:133
#: ../../tutorial/tutorial-0.rst:175 24b41528339a49de91c4ac0bf291e61f
#: 3e3092779f0c40fdb5a731cffc1f2f60 b4e6def8193741a39eeef3d36c8ae852
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-0.rst:50 a946f68deb414439b36259705e0fa06e
msgid "If you're on Windows, you can get the official installer from `the Python website <https://www.python.org/downloads>`_. You can use any stable version of Python from 3.9 to 3.12 - `Python 3.13 is not currently supported <https://github.com/beeware/toga/issues/2889>`__. We'd also advise avoiding alphas, betas, and release candidates unless you *really* know what you're doing."
msgstr ""
"如果您使用的是 Windows，您可以从 `Python 网站 <https://www.python.org/"
"downloads>`_ 获取官方安装程序。您可以使用 Python 3.9 到 3.12 的任何稳定版本 -"
" `Python 3.13 目前不被支持 <https://github.com/beeware/toga/issues/2889>`__。"
"我们还建议避免使用 Alpha、Beta "
"和候选版本，除非你<b>真的知</b>道自己在做什么。"

#: ../../tutorial/tutorial-0.rst:57 3342972ab0ac4c0fb2bbe34583f8e59d
msgid "Alternative Python distributions"
msgstr "其他 Python 发行版"

#: ../../tutorial/tutorial-0.rst:59 cecf1952f725413abd9775a421b29f78
msgid "There are lots of different ways of installing Python. You can install Python through `homebrew <https://docs.brew.sh/Homebrew-and-Python>`__. You can use `pyenv <https://github.com/pyenv/pyenv#simple-python-version-management-pyenv>`__ to manage multiple Python installs on the same machine. Windows users can install Python from the Windows App Store. Users from a data science background might want to use `Anaconda <https://docs.anaconda.com/anaconda/install/>`__ or `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`__."
msgstr ""
"安装 Python 有很多不同的方法。您可以通过 `homebrew <https://docs.brew.sh/"
"Homebrew-and-Python>`__ 安装 Python。您可以使用 `pyenv <https://github.com/"
"pyenv/pyenv#simple-python-version-management-pyenv>`__ "
"来管理同一台机器上的多个 Python 安装。Windows 用户可以从 Windows "
"应用商店安装 Python。数据科学背景的用户可以考虑使用 `Anaconda <https://"
"docs.anaconda.com/anaconda/install/>`__ 或 `Miniconda <https://docs.conda.io/"
"en/latest/miniconda.html>`__。"

#: ../../tutorial/tutorial-0.rst:69 52590b55f10c41a5920b21271553dddd
msgid "If you're on macOS or Windows, it doesn't matter *how* you've installed Python - it only matters that you can run ``python3`` from your operating system's command prompt/terminal application, and get a working Python interpreter."
msgstr ""
"如果您使用的是 macOS 或 Windows 操作系统，<i>如何</i>安装 Python "
"并不重要，重要的是您能从操作系统的命令提示符/终端应用程序中运行 ``python3``，"
"并获得一个正常工作的 Python 解释器。"

#: ../../tutorial/tutorial-0.rst:74 3c128d13cbfa400192b3db8c7871d25b
msgid "If you're on Linux, you *must* use the system Python provided by your operating system. You will be able to complete *most* of this tutorial using a non-system Python, but you won't be able to package your application for distribution to others."
msgstr ""
"如果您使用 Linux，则<b>必须</b>使用操作系统提供的系统 Python。"
"您可以使用非系统 Python "
"完成本教程的<i>大部分</i>内容，但是您无法将应用程序打包发布给他人。"

#: ../../tutorial/tutorial-0.rst:82 25ba6833ad3b4dd4b00482afe4442e10
msgid "Install dependencies"
msgstr "安装依赖项"

#: ../../tutorial/tutorial-0.rst:84 0ee9d86572494506931c9435282e1500
msgid "Next, install the additional dependencies needed for your operating system:"
msgstr "接下来，安装您的操作系统所需的其他依赖项："

#: ../../tutorial/tutorial-0.rst:90 69cdef17759a414c93fc7ede835bb4da
msgid "Building BeeWare apps on macOS requires:"
msgstr "在 macOS 上构建 BeeWare 应用程序需要："

#: ../../tutorial/tutorial-0.rst:92 d026ea60b9de4971abb90a5ef9ba7f8c
msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above. You may need to open Xcode for the first time in order for Git to work in your terminal session. If it still doesn't register that Git is installed, you may need to restart your terminal session."
msgstr ""
"**Git**，一个版本控制系统。上面已安装的 Xcode "
"或其命令行开发工具已经包含了Git。您可能需要第一次打开 Xcode "
"以后才能再命令行会话中使Git正常工作。如果仍然无法识别 "
"Git，可能需要重启您的命令行会话。"

#: ../../tutorial/tutorial-0.rst:100 97e3ebd30749471e9c6bd7aa2187fa70
msgid "To support local development, you'll need to install some system packages. The list of packages required varies depending on your distribution:"
msgstr "为支持本地开发，您将需要安装一些系统软件包。所需的软件包列表因发行版而异："

#: ../../tutorial/tutorial-0.rst:103 af9811dc10044ae69e6a540209a5f4f4
msgid "**Ubuntu / Debian**"
msgstr "**Ubuntu 或 Debian**"

#: ../../tutorial/tutorial-0.rst:114 ecf116c31c344c95bd10a0ac6a75c02d
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../tutorial/tutorial-0.rst:120 92194d7157d442668823ddfc9f2d8081
msgid "**Arch / Manjaro**"
msgstr "**Arch 或 Manjaro**"

#: ../../tutorial/tutorial-0.rst:126 bf5b8589ad994659a0a51177890f46e4
msgid "**OpenSUSE Tumbleweed**"
msgstr "**OpenSUSE Tumbleweed**"

#: ../../tutorial/tutorial-0.rst:135 1cc65b8d3b1c4dd28fe76323cbe73650
msgid "Building BeeWare apps on Windows requires:"
msgstr "在 Windows 上构建 BeeWare 应用程序需要："

#: ../../tutorial/tutorial-0.rst:137 bd4b4b6d498747e9ac5f893297efe111
msgid "**Git**, a version control system. You can download Git from from `git-scm.com <https://git-scm.com/downloads/>`__."
msgstr ""
"**Git**，一个版本控制系统。您可以从 `git-scm.com <https://git-scm.com/"
"downloads/>`__ 下载 Git。"

#: ../../tutorial/tutorial-0.rst:140 c4d364ec534b45ca96415e29eb7c989c
msgid "After installing these tools, you should ensure you restart any terminal sessions. Windows will only expose newly installed tools terminals started *after* the install has completed."
msgstr "安装这些工具后，应确保重新启动任何终端会话。Windows "
"只在安装完成后开始的命令行，才会显示新安装的工具。"

#: ../../tutorial/tutorial-0.rst:145 cab0f0fead034f84a619b19924e7b80f
msgid "Set up a virtual environment"
msgstr "建立虚拟环境"

#: ../../tutorial/tutorial-0.rst:147 920043a8e7ba413fae77fa909c2e6e31
msgid "We're now going to create a virtual environment - a \"sandbox\" that we can use to isolate our work on this tutorial from our main Python installation. If we install packages into the virtual environment, our main Python installation (and any other Python projects on our computer) won't be affected. If we make a complete mess of our virtual environment, we'll be able to simply delete it and start again, without affecting any other Python project on our computer, and without the need to re-install Python."
msgstr ""
"我们现在要创建一个虚拟环境--一个 \"沙箱\"，用来将本教程的工作与我们的主 "
"Python 安装隔离开来。如果我们将软件包安装到虚拟环境中，我们的主 Python 安装（"
"以及计算机上的任何其他 Python "
"项目）将不会受到影响。如果我们把虚拟环境弄得一团糟，我们可以简单地删除它，然"
"后重新开始，不会影响计算机上的任何其他 Python 项目，也不需要重新安装 Python。"

#: ../../tutorial/tutorial-0.rst:184 4f3f164d365c4982bc9863decb87300a
msgid "If you're not using Python 3.12, replace the ``-3.12`` in these instructions with the version number that you are using."
msgstr "如果您不在使用 Python 3.12，将指示中的 ``-3.12`` 替换为您在使用的版本号。"

#: ../../tutorial/tutorial-0.rst:187 7f3144c47eda4e2cbd67be3c832c8ae2
msgid "Errors running PowerShell Scripts"
msgstr "运行 PowerShell 脚本时出现的错误"

#: ../../tutorial/tutorial-0.rst:189 a4331382fa5f45ab808c6bf332f3255e
msgid "If you're using PowerShell, and you receive the error::"
msgstr "如果使用 PowerShell 时收到以下错误信息：："

#: ../../tutorial/tutorial-0.rst:193 4a8048a177564a66974bc93db9067eac
msgid "Your Windows account doesn't have permissions to run scripts. To fix this:"
msgstr "您的 Windows 账户没有运行脚本的权限。要解决这个问题:"

#: ../../tutorial/tutorial-0.rst:195 9e24a555fa07465386329627c1503abd
msgid "Run `Windows PowerShell as Administrator <https://learn.microsoft.com/en-us/powershell/scripting/windows-powershell/starting-windows-powershell?view=powershell-7.4>`_."
msgstr ""
"`以管理员身份执行 PowerShell <https://learn.microsoft.com/en-us/powershell/"
"scripting/windows-powershell/starting-windows-"
"powershell?view=powershell-7.4>`_."

#: ../../tutorial/tutorial-0.rst:196 55ce0d79f6574ac3b76a7116d7053d72
msgid "Run ``set-executionpolicy RemoteSigned``"
msgstr "运行 ``set-executionpolicy RemoteSigned``"

#: ../../tutorial/tutorial-0.rst:197 99973d4af9b44a4684238b35b0ca576d
msgid "Select ``Y`` to change the execution policy."
msgstr "选择 ``Y`` 更改执行策略。"

#: ../../tutorial/tutorial-0.rst:199 dcfd91de7afd40d39242887232de849d
msgid "Once you've done this you can rerun ``beeware-venv\\Scripts\\activate.ps1`` in your original PowerShell session (or a new session in the same directory)."
msgstr ""
"完成后，您就可以在原来的 PowerShell 会话（或同一目录下的新会话）中重新运行 "
"``beeware-venv\\scripts\\activate.ps1``。"

#: ../../tutorial/tutorial-0.rst:203 7f298f8d4e3b4dbd863369e7466491cd
msgid "If this worked, your prompt should now be changed - it should have a ``(beeware-venv)`` prefix. This lets you know that you're currently in your BeeWare virtual environment. Whenever you're working on this tutorial, you should make sure your virtual environment is activated. If it isn't, re-run the last command (the ``activate`` command) to re-activate your environment."
msgstr ""
"如果这样做成功了，您的提示符现在应该有所改变--它会带有 ``(beeware-venv)`` "
"前缀。这样，您就可以知道您当前正处于 BeeWare "
"虚拟环境中。无论何时运行本教程，都应确保虚拟环境已激活。如果没有激活，请重新"
"执行前一条命令（``activate``）以重新激活虚拟环境。"

#: ../../tutorial/tutorial-0.rst:209 394713a9464942dc95b65a3e6a63bec6
msgid "Alternative virtual environments"
msgstr "替代虚拟环境"

#: ../../tutorial/tutorial-0.rst:211 a4c2b684637347d6aeb18045b6c84617
msgid "If you're using Anaconda or miniconda, you may be more familiar with using conda environments. You might also have heard of ``virtualenv``, a predecessor to Python's built in ``venv`` module. As with Python installs - if you're on macOS or Windows, it doesn't matter *how* you create your virtual environment, as long as you have one. If you're on Linux, you should stick to ``venv`` and the system Python."
msgstr ""
"如果您使用的是 Anaconda 或 miniconda，那么您可能对使用 conda 环境更为熟悉。"
"您可能还听说过 ``virtualenv``，它是 Python 内置的 ``venv`` 模块的前身。就像 "
"Python 安装一样，如您使用的是 macOS 或 "
"Windows，那么如何创建虚拟环境并不重要，只要有就够了。如果在 Linux 上，"
"则应坚持使用 ``venv`` 和系统 Python。"

#: ../../tutorial/tutorial-0.rst:219 81d88937c4dc4ebbae6905396db5104f
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-0.rst:221 4355582616d24de5a9ecb78e46df75e5
msgid "We've now set up our environment. We're ready to :doc:`create our first BeeWare application <tutorial-1>`."
msgstr "现在我们已经设置好了环境。我们准备创建 "
":doc:`您的第一个应用程序<tutorial-1>`。"

#~ msgid "Run Windows PowerShell as Administrator."
#~ msgstr "以管理员身份运行 Windows PowerShell。"

#~ msgid "**Git**, a version control system. This is included with Xcode or the command line developer tools, which you installed above."
#~ msgstr "*版本控制系统 *Git**。它包含在您安装的 Xcode 或命令行开发工具中。"
