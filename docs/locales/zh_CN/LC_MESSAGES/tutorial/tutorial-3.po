msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-06 18:04+0800\n"
"PO-Revision-Date: 2024-01-13 02:06+0000\n"
"Last-Translator: Sheep Cat <xymsyh@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"beeware/tutorial/tutorial-3/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4-dev\n"
"Generated-By: Babel 2.14.0\n"

#: ../../tutorial/tutorial-3.rst:3 fdd0a9a4b9c346bbb0cca0346cf0dd5e
#, fuzzy
msgid "Tutorial 3 - Packaging for distribution"
msgstr "教程 3 - 包装以便分发"

#: ../../tutorial/tutorial-3.rst:5 d9daedef46654abe8ead4410a50e83f0
#, fuzzy
msgid "So far, we've been running our application in \"Developer mode\". This makes it easy for us to run our application locally - but what we really want is to be able to give our application to others."
msgstr "到目前为止，我们一直在 \"开发者模式 \"下运行应用程序。这让我们可以轻松地在本地运行应用程序，但我们真正想要的是能将我们的应用程序提供给其他人。"

#: ../../tutorial/tutorial-3.rst:9 ce17bf4756964983a8d3a6d4075e0c7f
#, fuzzy
msgid "However, we don't want to have to teach our users how to install Python, create a virtual environment, clone a git repository, and run Briefcase in developer mode. We'd rather just give them an installer, and have the application Just Work."
msgstr "但是，我们不想教用户如何安装 Python、创建虚拟环境、克隆 git 仓库并在开发者模式下运行 Briefcase。我们宁可只给他们一个安装程序，让应用程序能够正常运行。"

#: ../../tutorial/tutorial-3.rst:14 04fe03b7723744ac957d4f8537f2719f
#, fuzzy
msgid "Briefcase can be used to package your application for distribution in this way."
msgstr "公文包可用于打包您的应用程序，以便以这种方式发布。"

#: ../../tutorial/tutorial-3.rst:17 be093693d67441a5b7174d7d161a9e2c
#, fuzzy
msgid "Creating your application scaffold"
msgstr "创建应用程序脚手架"

#: ../../tutorial/tutorial-3.rst:19 e4a82af20e3948548087a6293c088f08
#, fuzzy
msgid "Since this is the first time we're packaging our application, we need to create some configuration files and other scaffolding to support the packaging process. From the ``helloworld`` directory, run:"
msgstr "由于这是第一次打包应用程序，我们需要创建一些配置文件和其他脚手架来支持打包过程。在 ``helloworld`` 目录中，运行"

#: ../../tutorial/tutorial-3.rst:25 ../../tutorial/tutorial-3.rst:174 ../../tutorial/tutorial-3.rst:257 ../../tutorial/tutorial-3.rst:351 099ee50f8f0743afa538b05a9a9aa7c1 701af6cf5fd14f23a4284b9ae631fd4e 84a9dff60fbd42e09bf700aeccf02dcc f03d8b5bbbe74508ac296b18fb4856a6
msgid "macOS"
msgstr "MacOS"

#: ../../tutorial/tutorial-3.rst:52 ../../tutorial/tutorial-3.rst:193 ../../tutorial/tutorial-3.rst:280 ../../tutorial/tutorial-3.rst:386 06f18d7cf1d34c7a9238874a85ec9dbd aaa0490b949e4506953c17c3af523197 e420e6a025a5402a93902f0335c2a8bc e55b98a2403141789b00986d63c24e60
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-3.rst:86 ../../tutorial/tutorial-3.rst:228 ../../tutorial/tutorial-3.rst:307 ../../tutorial/tutorial-3.rst:497 0e46df37edc148c98635503102c47419 0f71d7b7664c434cac12fa308d5ce9c6 e6300b9c02c240fea8e2f921dcbc70c6 ee735a24396f483ca54d53335c9a4444
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-3.rst:110 1739a625c4f6468a9b59926f8f1aae48
#, fuzzy
msgid "You've probably just seen pages of content go past in your terminal... so what just happened? Briefcase has done the following:"
msgstr "您可能刚刚在终端上看到了几页内容......那么刚刚发生了什么？公文包做了以下工作："

#: ../../tutorial/tutorial-3.rst:113 620bee0c1ebf443ba70157bd98e6f90f
#, fuzzy
msgid "It **generated an application template**. There's a lot of files and configurations required to build a native installer, above and beyond the code of your actual application. This extra scaffolding is almost the same for every application on the same platform, except for the name of the actual application being constructed - so Briefcase provides an application template for each platform it supports. This step rolls out the template, substituting the name of your application, bundle ID, and other properties of your configuration file as required to support the platform you're building on."
msgstr "它**生成一个应用程序模板**。除了实际应用程序的代码之外，构建本机安装程序还需要许多文件和配置。这些额外的脚手架对于同一平台上的每个应用程序几乎都是一样的，除了正在构建的实际应用程序的名称--因此，Briefcase 为其支持的每个平台提供了一个应用程序模板。这一步将推出模板，替换应用程序名称、捆绑 ID 和配置文件中的其他属性，以支持正在构建的平台。"

#: ../../tutorial/tutorial-3.rst:123 fa07103b96254f648376e079e54e7533
#, fuzzy
msgid "If you're not happy with the template provided by Briefcase, you can provide your own. However, you probably don't want to do this until you've got a bit more experience using Briefcase's default template."
msgstr "如果您对 Briefcase 提供的模板不满意，可以提供自己的模板。不过，在使用 Briefcase 的默认模板获得更多经验之前，您可能不想这样做。"

#: ../../tutorial/tutorial-3.rst:127 cf0e48c7a62343e4b85a47f750da7fcd
#, fuzzy
msgid "It **downloaded and installed a support package**. The packaging approach taken by briefcase is best described as \"the simplest thing that could possibly work\" - it ships a complete, isolated Python interpreter as part of every application it builds. This is slightly space inefficient - if you have 5 applications packaged with Briefcase, you'll have 5 copies of the Python interpreter. However, this approach guarantees that every application is completely independent, using a specific version of Python that is known to work with the application."
msgstr "它**下载并安装了一个支持包**。公文包所采用的打包方法被描述为 \"最简单可行的方法\"--它将一个完整、独立的 Python 解释器作为其构建的每个应用程序的一部分。这种打包方式在空间利用上略显不足--如果有 5 个应用程序打包到 Briefcase 中，那么就会有 5 份 Python 解释器副本。但是，这种方法保证了每个应用程序都是完全独立的，使用的 Python 都是已知的能与应用程序一起工作的特定版本。"

#: ../../tutorial/tutorial-3.rst:136 cbd7cb66e5db4c36982697c6e5bd2eeb
#, fuzzy
msgid "Again, Briefcase provides a default support package for each platform; if you want, you can provide your own support package, and have that package included as part of the build process. You may want to do this if you have particular options in the Python interpreter that you need to have enabled, or if you want to strip modules out of the standard library that you don't need at runtime."
msgstr "同样，Briefcase 为每个平台提供了默认的支持包；如果需要，您可以提供自己的支持包，并将其作为构建过程的一部分。如果您需要启用 Python 解释器中的特定选项，或者如果您想从标准库中剥离运行时不需要的模块，您可能需要这样做。"

#: ../../tutorial/tutorial-3.rst:143 dde73086074349a5a6d5f63c81a6f96d
#, fuzzy
msgid "Briefcase maintains a local cache of support packages, so once you've downloaded a specific support package, that cached copy will be used on future builds."
msgstr "公文包维护支持包的本地缓存，因此一旦您下载了特定的支持包，该缓存副本将用于未来的构建。"

#: ../../tutorial/tutorial-3.rst:147 356b651daddf4072accbc5bfa6611b57
#, fuzzy
msgid "It **installed application requirements**. Your application can specify any third-party modules that are required at runtime. These will be installed using ``pip`` into your application's installer."
msgstr "它**安装应用程序要求**。您的应用程序可以指定运行时所需的任何第三方模块。这些模块将使用 ``pip`` 安装到应用程序的安装程序中。"

#: ../../tutorial/tutorial-3.rst:151 911dfac85a9d4470a953ae3d5ee9b8a0
#, fuzzy
msgid "It **Installed your application code**. Your application will have its own code and resources (e.g., images that are needed at runtime); these files are copied into the installer."
msgstr "它**安装你的应用程序代码**。您的应用程序将有自己的代码和资源（如运行时需要的图像）；这些文件会被复制到安装程序中。"

#: ../../tutorial/tutorial-3.rst:155 47185a96dd884c74b55a7de0eff51086
#, fuzzy
msgid "It **installed your resources needed by your application.** Lastly, it adds any additional resources that are needed by the installer itself. This includes things like icons that need to be attached to the final application and splash screen images."
msgstr "最后，它还会添加安装程序本身所需的其他资源。这包括需要附加到最终应用程序的图标和闪屏图像等。"

#: ../../tutorial/tutorial-3.rst:160 81d16f440aab4398b0da38265d6136ca
#, fuzzy
msgid "Once this completes, if you look in the project directory, you should now see a directory corresponding to your platform (``macOS``, ``linux``, or ``windows``) that contains additional files. This is the platform-specific packaging configuration for your application."
msgstr "完成上述操作后，如果查看项目目录，就会发现一个与平台（\"macOS\"、\"linux \"或 \"windows\"）相对应的目录，其中包含附加文件。这就是应用程序的特定平台打包配置。"

#: ../../tutorial/tutorial-3.rst:166 d08a7e92d37542578ff674e237de20a6
#, fuzzy
msgid "Building your application"
msgstr "构建您的应用程序"

#: ../../tutorial/tutorial-3.rst:168 1a2da7c173384ec2a16fe684b24f4f8a
#, fuzzy
msgid "You can now compile your application. This step performs any binary compilation that is necessary for your application to be executable on your target platform."
msgstr "现在可以编译应用程序了。此步骤将执行二进制编译，这是应用程序在目标平台上可执行所必需的。"

#: ../../tutorial/tutorial-3.rst:187 ee1d20ce0a0c47e8900d68afdf511dfe
#, fuzzy
msgid "On macOS, the ``build`` command doesn't need to *compile* anything, but it does need to sign the contents of binary so that it can be executed. This signature is an *ad hoc* signature - it will only work on *your* machine; if you want to distribute the application to others, you'll need to provide a full signature."
msgstr "在 macOS 上，\"`build```\"命令不需要*编译*任何内容，但需要对二进制文件的内容进行签名，以便执行。这种签名是一种*临时*签名--它只能在*你*的机器上工作；如果你想将应用程序发布给其他人，就需要提供完整的签名。"

#: ../../tutorial/tutorial-3.rst:222 2cdb7a133d1c4d67847a7412b4fe646b
#, fuzzy
msgid "Once this step completes, the ``build`` folder will contain a ``helloworld-0.0.1`` folder that contains a mirror of a Linux ``/usr`` file system. This file system mirror will contain a ``bin`` folder with a ``helloworld`` binary, plus ``lib`` and ``share`` folders needed to support the binary."
msgstr "此步骤完成后，`build`文件夹将包含一个`helloworld-0.0.1`文件夹，其中包含一个 Linux ``/usr`` 文件系统的镜像。这个文件系统镜像将包含一个``bin``文件夹，里面有一个``helloworld``二进制文件，以及支持二进制文件所需的``lib``和``share``文件夹。"

#: ../../tutorial/tutorial-3.rst:237 8ba389d275a84053b61212dfcfcea07b
#, fuzzy
msgid "On Windows, the ``build`` command doesn't need to *compile* anything, but it does need to write some metadata so that the application knows its name, version, and so on."
msgstr "在 Windows 上，``build`` 命令不需要编译*任何东西，但它确实需要写入一些元数据，以便应用程序知道它的名称、版本等。"

#: ../../tutorial/tutorial-3.rst:241 4f470023d69d45578db6e9722ddd1260
#, fuzzy
msgid "Triggering antivirus"
msgstr "触发杀毒软件"

#: ../../tutorial/tutorial-3.rst:243 ddc9f984412e4721b9d30d9d4da71932
#, fuzzy
msgid "Since this metadata is being written directly in to the pre-compiled binary rolled out from the template during the ``create`` command, this may trigger antivirus software running on your machine and prevent the metadata from being written. In that case, instruct the antivirus to allow the tool (named ``rcedit-x64.exe``) to run and re-run the command above."
msgstr "由于这些元数据是在 ``create`` 命令中直接写入从模板推出的预编译二进制文件的，因此可能会触发机器上运行的杀毒软件，从而阻止元数据的写入。在这种情况下，请指示杀毒软件允许工具（名为 ``rcedit-x64.exe``）运行，并重新运行上述命令。"

#: ../../tutorial/tutorial-3.rst:251 93d9f8907f4b41538a6d170ec686c367
#, fuzzy
msgid "Running your app"
msgstr "运行应用程序"

#: ../../tutorial/tutorial-3.rst:253 6d0478ce6fd2401f888539567bc6e6ec
#, fuzzy
msgid "You can now use Briefcase to run your application:"
msgstr "现在您可以使用公文包运行应用程序了："

#: ../../tutorial/tutorial-3.rst:329 3417625aa8c8494c87d8630083eb90d5
#, fuzzy
msgid "This will start to run your native application, using the output of the ``build`` command."
msgstr "这将使用 ``build`` 命令的输出开始运行本地应用程序。"

#: ../../tutorial/tutorial-3.rst:332 e881de062b844a6299c3fa0e693de4b0
#, fuzzy
msgid "You might notice some small differences in the way your application looks when it's running. For example, icons and the name displayed by the operating system may be slightly different to those you saw when running under developer mode. This is also because you're using the packaged application, not just running Python code. From the operating system's perspective, you're now running \"an app\", not \"a Python program\", and this is reflected in how the application appears."
msgstr "你可能会注意到应用程序运行时的外观有一些细微差别。例如，操作系统显示的图标和名称可能与在开发者模式下运行时略有不同。这也是因为您使用的是打包的应用程序，而不仅仅是运行 Python 代码。从操作系统的角度来看，您现在运行的是 \"一个应用程序\"，而不是 \"一个 Python 程序\"，这也反映在应用程序的显示方式上。"

#: ../../tutorial/tutorial-3.rst:341 43b79ea953b3465e96867d701479d784
#, fuzzy
msgid "Building your installer"
msgstr "创建安装程序"

#: ../../tutorial/tutorial-3.rst:343 cbade342872a488fbba87220265136d4
#, fuzzy
msgid "You can now package your application for distribution, using the ``package`` command. The package command does any compilation that is required to convert the scaffolded project into a final, distributable product. Depending on the platform, this may involve compiling an installer, performing code signing, or doing other pre-distribution tasks."
msgstr "现在，您可以使用 ``package`` 命令打包应用程序，以便发布。打包命令会执行将脚手架项目转换为最终可发布产品所需的编译工作。根据平台的不同，这可能涉及编译安装程序、执行代码签名或执行其他发布前任务。"

#: ../../tutorial/tutorial-3.rst:367 cd4d147e40a145e9b2432cf7b85cba2f
#, fuzzy
msgid "The ``dist`` folder will contain a file named ``Hello World-0.0.1.dmg``. If you locate this file in the Finder, and double click on its icon, you'll mount the DMG, giving you a copy of the Hello World app, and a link to your Applications folder for easy installation. Drag the app file into Applications, and you've installed your application. Send the DMG file to a friend, and they should be able to do the same."
msgstr "dist \"文件夹将包含一个名为 \"Hello World-0.0.1.dmg \"的文件。如果在 Finder 中找到该文件，并双击其图标，就会加载 DMG，从而获得 Hello World 应用程序的副本，并链接到 \"应用程序 \"文件夹以方便安装。将应用程序文件拖入 \"应用程序\"，就安装好了应用程序。将 DMG 文件发送给朋友，他们应该也能完成同样的操作。"

#: ../../tutorial/tutorial-3.rst:374 e9944d4035bf4bdeba158089f80f1d9e
#, fuzzy
msgid "In this example, we've used the ``--adhoc-sign`` option - that is, we're signing our application with *ad hoc* credentials - temporary credentials that will only work on your machine. We've done this to keep the tutorial simple. Setting up code signing identities is a little fiddly, and they're only *required* if you're intending to distribute your application to others. If we were publishing a real application for others to use, we would need to specify real credentials."
msgstr "在本例中，我们使用了\"--adhoc-sign \"选项--也就是说，我们使用*ad hoc* 凭据（仅在你的机器上有效的临时凭据）来签署我们的应用程序。我们这样做是为了让教程简单明了。设置代码签名身份有点麻烦，而且只有当你打算将应用程序发布给他人时才*需要。如果我们要发布一个真正的应用程序供他人使用，我们就需要指定真实的凭据。"

#: ../../tutorial/tutorial-3.rst:382 be160a389c734f03a9699f905031103d
#, fuzzy
msgid "When you're ready to publish a real application, check out the Briefcase How-To guide on `Setting up a macOS code signing identity <https://briefcase.readthedocs.io/en/latest/how-to/code-signing/macOS.html>`__"
msgstr "当您准备发布真正的应用程序时，请查看关于 \"设置 macOS 代码签名身份 <https://briefcase.readthedocs.io/en/latest/how-to/code-signing/macOS.html>`__\" 的公文包操作指南。"

#: ../../tutorial/tutorial-3.rst:388 6277fafc898d4f7682269e55577b94bc
#, fuzzy
msgid "The output of the package step will be slightly different depending on your Linux distribution. If you're on a Debian-derived distribution, you'll see:"
msgstr "软件包步骤的输出会因 Linux 发行版的不同而略有不同。如果你使用的是 Debian 衍生发行版，你会看到"

#: ../../tutorial/tutorial-3.rst:410 00f1238e5d104721a05c09c92a58c424
#, fuzzy
msgid "The ``dist`` folder will contain the ``.deb`` file that was generated."
msgstr "dist \"文件夹将包含生成的\".deb \"文件。"

#: ../../tutorial/tutorial-3.rst:412 d42c1b659bcc428ab432d5a8b04c107d
#, fuzzy
msgid "If you're on a RHEL-based distribution, you'll see:"
msgstr "如果你使用的是基于 RHEL 的发行版，你就会看到："

#: ../../tutorial/tutorial-3.rst:440 c9c9b44505384b5780ef751e3f296d06
#, fuzzy
msgid "The ``dist`` folder will contain the ``.rpm`` file that was generated."
msgstr "dist \"文件夹将包含生成的\".rpm \"文件。"

#: ../../tutorial/tutorial-3.rst:442 84405fa8c574474ab9fa78e7f3e3fc45
#, fuzzy
msgid "If you're on an Arch-based distribution, you'll see:"
msgstr "如果你使用的是基于 Arch 的发行版，你就会看到："

#: ../../tutorial/tutorial-3.rst:460 c94353ce1746454184413effc5fccd8c
#, fuzzy
msgid "The ``dist`` folder will contain the ``.pkg.tar.zst`` file that was generated."
msgstr "dist \"文件夹将包含生成的\".pkg.tar.zst \"文件。"

#: ../../tutorial/tutorial-3.rst:462 ef57f8f0a0c444b88f8db0cbf2eeee7d
#, fuzzy
msgid "Other Linux distributions aren't currently supported for packaging."
msgstr "目前不支持其他 Linux 发行版的打包。"

#: ../../tutorial/tutorial-3.rst:464 8843c8702b664ced963dc9e07111576a
#, fuzzy
msgid "If you want to build a package for a Linux distribution other than the one you're using, Briefcase can also help - but you'll need to install Docker."
msgstr "如果你想为你正在使用的 Linux 发行版之外的其他发行版构建软件包，Briefcase 也能提供帮助，但你需要安装 Docker。"

#: ../../tutorial/tutorial-3.rst:467 a1fe5b801a8a4609bbc95c65479bebdc
#, fuzzy
msgid "Official installers for `Docker Engine <https://docs.docker.com/engine/install>`__ are available for a range of Unix distributions. Follow the instructions for your platform; however, ensure you don't install Docker in \"rootless\" mode."
msgstr "Docker Engine <https://docs.docker.com/engine/install>`__ 的官方安装程序适用于一系列 Unix 发行版。请按照您所在平台的说明进行操作；不过，请确保不要在 \"无根 \"模式下安装 Docker。"

#: ../../tutorial/tutorial-3.rst:472 c81e6ac37b1b4ad6b52102f679a53ead
#, fuzzy
msgid "Once you've installed Docker, you should be able to start an Linux container - for example:"
msgstr "安装好 Docker 后，你就可以启动 Linux 容器了，例如"

#: ../../tutorial/tutorial-3.rst:479 552176a735584970ab9cf06997345103
#, fuzzy
msgid "will show you a Unix prompt (something like ``root@84444e31cff9:/#``) inside an Ubuntu 22.04 Docker container. Type Ctrl-D to exit Docker and return to your local shell."
msgstr "将显示 Ubuntu 22.04 Docker 容器中的 Unix 提示（类似于 ``root@84444e31cff9:/#``）。键入 Ctrl-D 退出 Docker 并返回本地 shell。"

#: ../../tutorial/tutorial-3.rst:483 cc8105ff411947a786788196adfe4ea5
#, fuzzy
msgid "Once you've got Docker installed, you can use Briefcase to build a package for any Linux distribution that Briefcase supports by passing in a Docker image as an argument. For example, to build a DEB package for Ubuntu 22.04 (Jammy), regardless of the operating system you're on, you can run:"
msgstr "一旦安装了 Docker，只要将 Docker 镜像作为参数传递，就可以使用 Briefcase 为 Briefcase 支持的任何 Linux 发行版构建软件包。例如，要为 Ubuntu 22.04 (Jammy) 构建一个 DEB 包，无论你使用的是哪种操作系统，你都可以运行"

#: ../../tutorial/tutorial-3.rst:492 91815e290c754f838026ef5f77f4406b
#, fuzzy
msgid "This will download the Docker image for your selected operating system, create a container that is able to run Briefcase builds, and build the app package inside the image. Once it's completed, the ``dist`` folder will contain the package for the target Linux distribution."
msgstr "这将下载所选操作系统的 Docker 镜像，创建一个能够运行 Briefcase 构建的容器，并在镜像中构建应用程序软件包。完成后，`dist`` 文件夹将包含目标 Linux 发行版的软件包。"

#: ../../tutorial/tutorial-3.rst:515 8d0c4eeab9c44b5cb05bbe038ec2cef4
#, fuzzy
msgid "Once this step completes, the ``dist`` folder will contain a file named ``Hello_World-0.0.1.msi``. If you double click on this installer to run it, you should go through a familiar Windows installation process. Once this installation completes, there will be a \"Hello World\" entry in your start menu."
msgstr "此步骤完成后，\"dist \"文件夹中将包含一个名为 \"Hello_World-0.0.1.msi \"的文件。如果双击运行该安装程序，就会进入熟悉的 Windows 安装过程。安装完成后，开始菜单中将出现 \"Hello World \"条目。"

#: ../../tutorial/tutorial-3.rst:522 3677dce6788c428d81f66379410c3484
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-3.rst:524 fd39791c3dbf4dcebb9127d70a415288
#, fuzzy
msgid "We now have our application packaged for distribution on desktop platforms. But what happens when we need to update the code in our application? How do we get those updates into our packaged application? Turn to :doc:`Tutorial 4 <./tutorial-4>` to find out..."
msgstr "现在，我们已将应用程序打包发布到桌面平台上。但是，当我们需要更新应用程序中的代码时该怎么办？如何将这些更新添加到打包的应用程序中？请访问 :doc:`Tutorial 4 <./tutorial-4>` 了解详情..."
