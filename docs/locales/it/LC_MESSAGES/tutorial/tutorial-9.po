# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-13 11:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: it\n"
"Language-Team: it <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../tutorial/tutorial-9.rst:3 7c5e1ccb27df4d08a0a105db136704d1
msgid "Tutorial 9 - Testing times"
msgstr ""

#: ../../tutorial/tutorial-9.rst:5 d761a0c039564593a9549015fb3d00ca
msgid "Most software development doesn't involve writing new code - it's modifying existing code. Ensuring that existing code continues to work in the way we expect is a key part of the software development process. One way to do ensure the behavior of our app is with a *test suite*."
msgstr ""

#: ../../tutorial/tutorial-9.rst:11 160a52d4af1445788f2387fd737f3ebe
msgid "Running the test suite"
msgstr ""

#: ../../tutorial/tutorial-9.rst:13 a755a6f3494e4597ad0d1ed725d000f9
msgid "It turns out our project already has a test suite! When we originally generated our project, two top-level directories were generated: ``src`` and ``tests``. The ``src`` folder contains the code for our app; the ``tests`` folder contains our test suite. Inside the ``tests`` folder is a file named ``test_app.py`` with the following content::"
msgstr ""

#: ../../tutorial/tutorial-9.rst:23 82527db64ad64abfa9cf7e8710bafd86
msgid "This is a `Pytest <https://pytest.org>`__ *test case* - a block of code that can be executed to verify some behavior of your app. In this case, the test is a placeholder, and doesn't test anything about our app - but it is a test that we can perform."
msgstr ""

#: ../../tutorial/tutorial-9.rst:28 8e208f5dd3ef4f73ad5d62b60e8e84ae
msgid "We can run this test suite using the ``--test`` option to ``briefcase dev``. As this is the first time we are running tests, we also need to pass in the ``-r`` option to ensure that the test requirements are also installed:"
msgstr ""

#: ../../tutorial/tutorial-9.rst:34 ../../tutorial/tutorial-9.rst:139
#: ../../tutorial/tutorial-9.rst:209 ../../tutorial/tutorial-9.rst:326
#: ../../tutorial/tutorial-9.rst:396 117ea806536643afad076c6108a8e8a7
#: 9e138ce0fcb04261a2bdfe2ea4bafd71 bf13294578924bac8148f3890b2ff095
#: c1b0675369f04936b94731d328c3a3b2 dc804af23a414bcfbea0393d07e496c8
msgid "macOS"
msgstr ""

#: ../../tutorial/tutorial-9.rst:57 ../../tutorial/tutorial-9.rst:156
#: ../../tutorial/tutorial-9.rst:241 ../../tutorial/tutorial-9.rst:344
#: ../../tutorial/tutorial-9.rst:438 6e937babe300483197a53f7446bf4044
#: 93d5b34be64249dfb319beeaf9efad8d c53072b1bd604be99574a5a7d0be1f6a
#: da95b815a40d47bd9d7c0e8fc2d2f182 f3304cb9fb3d401db09d61ad2a557c32
msgid "Linux"
msgstr ""

#: ../../tutorial/tutorial-9.rst:83 ../../tutorial/tutorial-9.rst:173
#: ../../tutorial/tutorial-9.rst:275 ../../tutorial/tutorial-9.rst:362
#: ../../tutorial/tutorial-9.rst:471 17c4d32c9eb847169179b240e6ff1c00
#: 3380b8933225476698655afbfcce7b62 3736ddb11d4d43a8a5ec96034131145a
#: 76f29a1cb3124b4cbab677ed90e7630d fbd5af427c7740c9bb5dce4fec03725c
msgid "Windows"
msgstr ""

#: ../../tutorial/tutorial-9.rst:109 75d97a7d8dc24d228919d0b745a0e10c
msgid "Success! We've just executed a single test that verifies Python math works in the way we'd expect (What a relief!)."
msgstr ""

#: ../../tutorial/tutorial-9.rst:112 dc09b2c2b97c46c98abbd6040f69c991
msgid "Let's replace this placeholder test with a test to verify that our ``greeting()`` method behaves the way we'd expect. Replace the contents of ``test_app.py`` with the following::"
msgstr ""

#: ../../tutorial/tutorial-9.rst:130 46e1573cf28a468b90aae8ce20312c0a
msgid "This defines two new tests, verifying the two behaviors we expect to see: the output when a name is provided, and the output when the name is empty."
msgstr ""

#: ../../tutorial/tutorial-9.rst:133 0aaeab48aab94cddbc1e2419d39a3502
msgid "We can now re-run the test suite. This time, we don't need to provided the ``-r`` option, as the test requirements have already been installed; we only need to use the ``--test`` option:"
msgstr ""

#: ../../tutorial/tutorial-9.rst:190 a7d550b4809546c69fa9d34408517374
msgid "Excellent! Our ``greeting()`` utility method is working as expected."
msgstr ""

#: ../../tutorial/tutorial-9.rst:193 aab056a889054d7d9920afe37b58c3a7
msgid "Test driven development"
msgstr ""

#: ../../tutorial/tutorial-9.rst:195 6f08bc1f13104116927424adc34f8c81
msgid "Now that we have a test suite, we can use it to drive the development of new features. Let's modify our app to have a special greeting for one particular user. We can start by adding a test case for the new behavior that we'd like to see to the bottom of ``test_app.py``::"
msgstr ""

#: ../../tutorial/tutorial-9.rst:205 52eb47bc91b049d58056cdcf945450d5
msgid "Then, run the test suite with this new test:"
msgstr ""

#: ../../tutorial/tutorial-9.rst:307 7c94a63b055545649683604f4b1f3a43
msgid "This time, we see a test failure - and the output explains the source of the failure: the test is expecting the output \"BeeWare the IDEs of Python!\", but our implementation of ``greeting()`` is returning \"Hello, Brutus\". Let's modify the implementation of ``greeting()`` in ``src/helloworld/app.py`` to have the new behavior::"
msgstr ""

#: ../../tutorial/tutorial-9.rst:322 64c74129da7c45f7a237afbac0dbeece
msgid "If we run the tests again, we'll now see our tests pass:"
msgstr ""

#: ../../tutorial/tutorial-9.rst:381 323f7579f5654b97b6fcd4333a728b01
msgid "Runtime tests"
msgstr ""

#: ../../tutorial/tutorial-9.rst:383 24ba508f6bcd446a9793176f190ed154
msgid "So far, we've been running the tests in development mode. This is especially useful when you're developing new features, as you can rapidly iterate on adding tests, and adding code to make those tests pass. However, at some point, you'll want to verify that your code also runs correctly when inside the bundle app environment."
msgstr ""

#: ../../tutorial/tutorial-9.rst:389 a0e0a3d39c2341ee9b0604fc7b50595c
msgid "The ``--test`` and ``-r`` options can also be passed to the ``run`` command. If you use ``briefcase run --test -r``, the same test suite will run, but it will run inside the packaged application bundle rather than your development environment:"
msgstr ""

#: ../../tutorial/tutorial-9.rst:508 93fd1cad48f84f6a98a4d1b46c13fecc
msgid "As with ``briefcase dev --test``, the ``-r`` option is only needed the first time you run the test suite to ensure that the test dependencies are present. On subsequent runs, you can omit this option."
msgstr ""

#: ../../tutorial/tutorial-9.rst:512 216ad24e57a34c8eabbac1cd513db040
msgid "You can also use the ``--test`` option on mobile backends: - so ``briefcase run iOS --test`` and ``briefcase run android --test`` will both work, running the test suite on the mobile device you select."
msgstr ""

#: ../../tutorial/tutorial-9.rst:517 ef483966d37e4e9183b0d90a9d2700f8
msgid "Next steps"
msgstr ""

#: ../../tutorial/tutorial-9.rst:519 20f4a955cd314b65b5c19097de210006
msgid "This has been a taste for what you can do with the tools provided by the BeeWare project. What you do from here is up to you!"
msgstr ""

#: ../../tutorial/tutorial-9.rst:522 b89f2c1ae36743d79c6879727a6dddb6
msgid "Some places to go from here:"
msgstr ""

#: ../../tutorial/tutorial-9.rst:524 a0b430bd298a4887af19d0db92fd172a
msgid "Tutorials demonstrating `features of the Toga widget toolkit <https://toga.readthedocs.io/en/latest/tutorial/index.html>`__."
msgstr ""

#: ../../tutorial/tutorial-9.rst:526 4086f87bfca847f5a2401a2ab7904a82
msgid "Details on the `options available when configuring your Briefcase project <https://briefcase.readthedocs.io/en/latest/reference/index.html>`__."
msgstr ""

