
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-09 04:13+0000\n"
"PO-Revision-Date: 2024-01-14 01:02+0000\n"
"Last-Translator: Lancelot Fouillet <lancelot.fouillet@orange.fr>\n"
"Language: fr\n"
"Language-Team: French <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-8/fr/>\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../tutorial/tutorial-8.rst:3 79b12b796456454086f682383c354929
#, fuzzy
msgid "Tutorial 8 - Making it Smooooth"
msgstr "Tutoriel 8 - Le rendre lisse"

#: ../../tutorial/tutorial-8.rst:5 631099956fd340f4b0f65e9223420445
msgid "So far, our application has been relatively simple - displaying GUI widgets, calling a simple third-party library, and displaying output in a dialog. All these operations happen very quickly, and our application remains responsive."
msgstr ""

#: ../../tutorial/tutorial-8.rst:9 ff8e973843ac431088820563f7a7cfee
msgid "However, in a real world application, we'll need to perform complex tasks or calculations that may take a while to complete - and as those tasks are performed, we want our application to remain responsive. Let's make a change to our application that might take a little time to complete, and see the changes that need to be made to accommodate that behavior."
msgstr ""

#: ../../tutorial/tutorial-8.rst:16 c47b36785eaa40828aacaf5b19bd81c7
msgid "Accessing an API"
msgstr ""

#: ../../tutorial/tutorial-8.rst:18 03883eb4ebcc4e15987b54d0241ebff9
msgid "A common time-consuming task an app will need to perform is to make a request on a web API to retrieve data, and display that data to the user. Web APIs sometimes take a second or two to respond, so if we're calling an API like that, we need to ensure our application doesn't become unresponsive while we wait for the web API to return an answer."
msgstr ""

#: ../../tutorial/tutorial-8.rst:24 1e514e2055234423bdae73b3c31a210a
#, python-brace-format
msgid "This is a toy app, so we don't have a *real* API to work with, so we'll use the `{JSON} Placeholder API <https://jsonplaceholder.typicode.com>`__ as a source of data. The {JSON} Placeholder API has a number of \"fake\" API endpoints you can use as test data. One of those APIs is the ``/posts/`` endpoint, which returns fake blog posts. If you open ``https://jsonplaceholder.typicode.com/posts/42`` in your browser, you'll get a JSON payload describing a single post - some `Lorum ipsum <https://en.wikipedia.org/wiki/Lorem_ipsum>`__ content for a blog post with ID 42."
msgstr ""

#: ../../tutorial/tutorial-8.rst:33 5ef290570fbc438c80c2c84aae68c25b
msgid "The Python standard library contains all the tools you'd need to access an API. However, the built-in APIs are very low level. They are good implementations of the HTTP protocol - but they require the user to manage lots of low-level details, like URL redirection, sessions, authentication, and payload encoding. As a \"normal browser user\" you're probably used to taking these details for granted, as a browser manages them for you."
msgstr ""

#: ../../tutorial/tutorial-8.rst:40 17f3f885924d4237922548a33c58392d
#, python-brace-format
msgid "As a result, people have developed third-party libraries that wrap the built-in APIs and provide a simpler API that is a closer match for the everyday browser experience. We're going to use one of those libraries to access the {JSON} Placeholder API - a library called `httpx <https://www.python-httpx.org>`__. Briefcase uses ``httpx`` internally, so it's already in your local environment - you don't need to install it separately to use it here."
msgstr ""

#: ../../tutorial/tutorial-8.rst:47 e968dd4fbbb7472f82d90b92b49f1f4b
msgid "Let's add a ``httpx`` API call to our app. Add an import to the top of the ``app.py`` to import ``httpx``::"
msgstr ""

#: ../../tutorial/tutorial-8.rst:52 5e09a257326a4ffb961561fdfcbb013b
#, fuzzy
msgid "Then modify the ``say_hello()`` callback so it looks like this::"
msgstr "Pour rendre notre tutoriel asynchrone, modifiez le gestionnaire d'événement ``say_hello()`` pour qu'il ressemble à ceci: :"

#: ../../tutorial/tutorial-8.rst:68 c70055fbbaab4977a8c53e4adfa886e8
msgid "This will change the ``say_hello()`` callback so that when it is invoked, it will:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:71 0d7f8ecca2de4f638b192100300e70b2
msgid "make a GET request on the JSON placeholder API to obtain post 42;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:73 0167e677dc5d4c0faeeb0daac1b0b245
msgid "decode the response as JSON;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:75 bc7abd7c5e8e42b695d4734fa4744e96
msgid "extract the body of the post; and"
msgstr ""

#: ../../tutorial/tutorial-8.rst:77 93516388141a40a5b5dd0a62cc9c4de9
msgid "include the body of that post as the text of the \"message\" dialog, in place of the text generated by Faker."
msgstr ""

#: ../../tutorial/tutorial-8.rst:80 964a9033126344f188ddfd9d943dd879
msgid "Lets run our updated app in Briefcase developer mode to check that our change has worked."
msgstr ""

#: ../../tutorial/tutorial-8.rst:85 98bc2713156040e9ac348b647f629f40
msgid "macOS"
msgstr ""

#: ../../tutorial/tutorial-8.rst:91 ../../tutorial/tutorial-8.rst:104
#: ../../tutorial/tutorial-8.rst:117 8bbe6090688b459c8e6d9be625a98932
#: 918ed310dce0451dbbdb7d8365d28e33 e7e40f53a533475face93679d73e54cd
msgid "When you enter a name and press the button, you should see a dialog that looks something like:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:94 218147df86f740e984cbea394616b5c1
msgid "Hello World Tutorial 8 dialog, on macOS"
msgstr ""

#: ../../tutorial/tutorial-8.rst:98 ee6a468376694420993c51a4acbe3488
msgid "Linux"
msgstr ""

#: ../../tutorial/tutorial-8.rst:107 be5afd5855d64123857d4ba2b8c39e74
msgid "Hello World Tutorial 8 dialog, on Linux"
msgstr ""

#: ../../tutorial/tutorial-8.rst:111 d9fe0ceeceb8424697cf34d5dc81f4e7
msgid "Windows"
msgstr ""

#: ../../tutorial/tutorial-8.rst:120 a41885f8279f4df0b10254db1778a700
msgid "Hello World Tutorial 8 dialog, on Windows"
msgstr ""

#: ../../tutorial/tutorial-8.rst:124 5b8f238e60164548a4d24d0ced91e0f1
msgid "Unless you've got a *really* fast internet connection, you may notice that when you press the button, the GUI for your app locks up for a little bit. The operating system may even manifest this with a \"beachball\" or \"spinner\" cursor to indicate that the app is being unresponsive."
msgstr ""

#: ../../tutorial/tutorial-8.rst:129 28d238f33d6a4283ad198f47eab54e05
#, fuzzy
msgid "This is because the web request we have made is *synchronous*. When our application makes the web request, it waits for the API to return a response before continuing. While it's waiting, it *isn't* allowing the application to redraw - and as a result, the application locks up."
msgstr "A moins que vous ne disposiez d'une connexion internet *très* rapide, vous remarquerez peut-être que lorsque vous appuyez sur le bouton, l'interface graphique de votre application se bloque pendant un petit moment. C'est parce que la requête web que nous avons faite est *synchrone*. Lorsque notre application effectue la requête web, elle attend que l'API renvoie une réponse avant de continuer. Pendant cette attente, l'API ne permet pas à l'application de se redessiner, ce qui a pour effet de bloquer l'application."

#: ../../tutorial/tutorial-8.rst:135 ba2f7e5e7e9c45f8b063f88aea60d2a4
#, fuzzy
msgid "GUI Event Loops"
msgstr "Boucles d'événements de l'interface graphique"

#: ../../tutorial/tutorial-8.rst:137 d1a9ce65713645c5beb3da3be9cfaf12
#, fuzzy
msgid "To understand why this happens, we need to dig into the details of how a GUI application works. The specifics vary depending on the platform; but the high level concepts are the same, no matter the platform or GUI environment you're using."
msgstr "Pour comprendre pourquoi cela se produit, nous devons entrer dans les détails du fonctionnement d'une application GUI. Les spécificités varient en fonction de la plate-forme, mais les concepts de haut niveau sont les mêmes, quelle que soit la plate-forme ou l'environnement d'interface graphique que vous utilisez."

#: ../../tutorial/tutorial-8.rst:142 cf3e14bcd30144a4950e859876dbc882
#, fuzzy
msgid "A GUI app is, fundamentally, a single loop that looks something like::"
msgstr "Une application GUI est, fondamentalement, une boucle unique qui ressemble à quelque chose comme: :"

#: ../../tutorial/tutorial-8.rst:148 e4d06a8fd98848ddb42bc63bc3bc8e7d
#, fuzzy
msgid "This loop is called the *Event Loop*. (These aren't actual method names - it's an illustration of what is going on using \"pseudo-code\")."
msgstr "Cette boucle est appelée *boucle d'événements*. (Il ne s'agit pas de noms de méthodes réels, mais d'une illustration de ce qui se passe dans le \"pseudo-code\")."

#: ../../tutorial/tutorial-8.rst:151 1d582391bb1d4403836fcfe2bd19f6d4
#, fuzzy
msgid "When you click on a button, or drag a scroll bar, or type a key, you are generating an \"event\". That \"event\" is put onto a queue, and the app will process the queue of events when it next has the opportunity to do so. The user code that is triggered in response to the event is called an *event handler*. These event handlers are invoked as part of the ``process_events()`` call."
msgstr "Lorsque vous cliquez sur un bouton, faites glisser une barre de défilement ou tapez une touche, vous générez un \"événement\". Cet \"événement\" est placé dans une file d'attente, et l'application traitera la file d'événements lorsqu'elle en aura l'occasion. Le code utilisateur déclenché en réponse à l'événement est appelé \"gestionnaire d'événement\". Ces gestionnaires d'événements sont invoqués dans le cadre de l'appel ``process_events()``."

#: ../../tutorial/tutorial-8.rst:157 c92cc6dea61f4641a000070e2f5ffccd
#, fuzzy
msgid "Once an app has processed all the available events, it will ``redraw()`` the GUI. This takes into account any changes that the events have caused to the display of the app, as well as anything else that is going on in the operating system - for example, the windows of another app may obscure or reveal part of our app's window, and our app's redraw will need to reflect the portion of the window that is currently visible."
msgstr "Une fois qu'une application a traité tous les événements disponibles, elle va ``redraw()`` l'interface graphique. Cela prend en compte tous les changements que les événements ont causés à l'affichage de l'application, ainsi que tout ce qui se passe dans le système d'exploitation - par exemple, les fenêtres d'une autre application peuvent masquer ou révéler une partie de la fenêtre de notre application, et le redessin de notre application devra refléter la partie de la fenêtre qui est actuellement visible."

#: ../../tutorial/tutorial-8.rst:164 aaa4adc6b96d46f9930328f56ba2966a
#, fuzzy
msgid "The important detail to notice: while an application is processing an event, *it can't redraw*, and *it can't process other events*."
msgstr "Détail important : pendant qu'une application traite un événement, *elle ne peut pas redessiner*, et *elle ne peut pas traiter d'autres événements*."

#: ../../tutorial/tutorial-8.rst:167 ffd664c03119447d984359437fb59f05
#, fuzzy
msgid "This means any user logic contained in an event handler needs to complete quickly. Any delay in completing the event handler will be observed by the user as a slowdown (or stop) in GUI updates. If this delay is long enough, your operating system may report this as a problem - the macOS \"beachball\" and Windows \"spinner\" icons are the operating system telling you that your app is taking too long in an event handler."
msgstr "Cela signifie que toute logique utilisateur contenue dans un gestionnaire d'événements doit être exécutée rapidement. Tout retard dans l'exécution du gestionnaire d'événements sera observé par l'utilisateur sous la forme d'un ralentissement (ou d'un arrêt) des mises à jour de l'interface graphique. Si ce délai est suffisamment long, votre système d'exploitation peut signaler qu'il s'agit d'un problème - les icônes macOS \"beachball\" et Windows \"spinner\" indiquent que votre application prend trop de temps dans un gestionnaire d'événements."

#: ../../tutorial/tutorial-8.rst:174 1a49d0617b914da39fce939bf13a6e92
#, fuzzy
msgid "Simple operations like \"update a label\", or \"recompute the total of the inputs\" are easy to complete quickly. However, there are a lot of operations that can't be completed quickly. If you're performing a complex mathematical calculation, or indexing all the files on a file system, or performing a large network request, you can't \"just do it quickly\" - the operations are inherently slow."
msgstr "Des opérations simples comme \"mettre à jour une étiquette\" ou \"recalculer le total des entrées\" sont faciles à réaliser rapidement. Cependant, de nombreuses opérations ne peuvent pas être effectuées rapidement. Si vous effectuez un calcul mathématique complexe, si vous indexez tous les fichiers d'un système de fichiers ou si vous effectuez une requête réseau importante, vous ne pouvez pas \"faire vite\" - les opérations sont intrinsèquement lentes."

#: ../../tutorial/tutorial-8.rst:180 be0d6d90454045eb8e782814d5b02503
#, fuzzy
msgid "So - how do we perform long-lived operations in a GUI application?"
msgstr "Alors, comment effectuer des opérations à long terme dans une application GUI ?"

#: ../../tutorial/tutorial-8.rst:183 ca262d9d1a6c4f98be62d5293c422ec2
#, fuzzy
msgid "Asynchronous programming"
msgstr "Programmation asynchrone"

#: ../../tutorial/tutorial-8.rst:185 9da8659380cf48088ec5a5ace52c78d9
#, fuzzy
msgid "What we need is a way to tell an app in the middle of a long-lived event handler that it is OK to temporarily release control back to the event loop, as long as we can resume where we left off. It's up to the app to determine when this release can occur; but if the app releases control to the event loop regularly, we can have a long-running event handler *and* maintain a responsive UI."
msgstr "Ce dont nous avons besoin, c'est d'un moyen de dire à une application au milieu d'un gestionnaire d'événements de longue durée qu'il est acceptable de relâcher temporairement le contrôle dans la boucle d'événements, tant que nous pouvons reprendre là où nous nous sommes arrêtés. C'est à l'application de déterminer quand cette libération peut avoir lieu ; mais si l'application libère le contrôle dans la boucle d'événements régulièrement, nous pouvons avoir un gestionnaire d'événements de longue durée *et* maintenir une interface utilisateur réactive."

#: ../../tutorial/tutorial-8.rst:191 064b454a2df24a1ca4ba73ddb6915417
#, fuzzy
msgid "We can do this by using *asynchronous programming*. Asynchronous programming is a way to describe a program that allows the interpreter to run multiple functions at the same time, sharing resources between all the concurrently running functions."
msgstr "Nous pouvons le faire en utilisant la *programmation asynchrone*. La programmation asynchrone est une façon de décrire un programme qui permet à l'interpréteur d'exécuter plusieurs fonctions en même temps, en partageant les ressources entre toutes les fonctions qui s'exécutent simultanément."

#: ../../tutorial/tutorial-8.rst:196 1181622c02e5430e969e1d5f96ad8729
#, fuzzy
msgid "Asynchronous functions (known as *coroutines*) need to be explicitly declared as being asynchronous. They also need to internally declare when an opportunity exists to change context to another coroutine."
msgstr "Les fonctions asynchrones (appelées *co-routines*) doivent être explicitement déclarées comme étant asynchrones. Elles doivent également déclarer en interne lorsqu'il est possible de changer de contexte et de passer à une autre co-routine."

#: ../../tutorial/tutorial-8.rst:200 9791b8b8eff04bd2a794f16f8097a447
#, fuzzy
msgid "In Python, asynchronous programming is implemented using the ``async`` and ``await`` keywords, and the `asyncio <https://docs.python.org/3/library/asyncio.html>`__ module in the standard library. The ``async`` keyword allows us to declare that a function is an asynchronous coroutine. The ``await`` keyword provides a way to declare when an opportunity exists to change context to another coroutine. The `asyncio <https://docs.python.org/3/library/asyncio.html>`__ module provides some other useful tools and primitives for asynchronous coding."
msgstr "En Python, la programmation asynchrone est implémentée à l'aide des mots-clés ``async`` et ``await``, et du module ``asyncio <https://docs.python.org/3/library/asyncio.html>`__ dans la bibliothèque standard. Le mot-clé ``async`` nous permet de déclarer qu'une fonction est une co-routine asynchrone. Le mot-clé ``await`` permet de déclarer qu'il existe une opportunité de changer de contexte vers une autre co-routine. Le module `asyncio <https://docs.python.org/3/library/asyncio.html>`__ fournit d'autres outils et primitives utiles pour le codage asynchrone."

#: ../../tutorial/tutorial-8.rst:210 3c6a34677e1d49b3a5ab3bbc513ea8b8
#, fuzzy
msgid "Making the tutorial asynchronous"
msgstr "Rendre le didacticiel asynchrone"

#: ../../tutorial/tutorial-8.rst:212 25e6555575424b4a9fb4e37fac4e4984
#, fuzzy
msgid "To make our tutorial asynchronous, modify the ``say_hello()`` event handler so it looks like this::"
msgstr "Pour rendre notre tutoriel asynchrone, modifiez le gestionnaire d'événement ``say_hello()`` pour qu'il ressemble à ceci: :"

#: ../../tutorial/tutorial-8.rst:228 7cfa268bb7cf414eadf7215eba0a44b2
#, fuzzy
msgid "There are only three changes to this callback from the previous version:"
msgstr "Il n'y a que 4 changements dans ce code par rapport à la version précédente :"

#: ../../tutorial/tutorial-8.rst:230 bc2c2412f6174cff926da04cbbe29746
#, fuzzy
msgid "The client that is created is an asynchronous ``AsyncClient()``, rather than a synchronous ``Client()``. This tells ``httpx`` that it should operate in asynchronous mode, rather than synchronous mode."
msgstr "Le client créé est un ``AsyncClient()`` asynchrone, plutôt qu'un ``Client()`` synchrone. Cela indique à ``httpx`` qu'il doit fonctionner en mode asynchrone, plutôt qu'en mode synchrone."

#: ../../tutorial/tutorial-8.rst:234 6118b1bc778c46b0bce08af431d3a498
#, fuzzy
msgid "The context manager used to create the client is marked as ``async``. This tells Python that there is an opportunity to release control as the context manager is entered and exited."
msgstr "Le gestionnaire de contexte utilisé pour créer le client est marqué comme ``async``. Cela indique à Python qu'il y a une opportunité de relâcher le contrôle lorsque le gestionnaire de contexte est entré et sorti."

#: ../../tutorial/tutorial-8.rst:238 45e717399cde4e4887a1102eedc47d59
msgid "The ``get`` call is made with an ``await`` keyword. This instructs the app that while we are waiting for the response from the network, the app can release control to the event loop. We've seen this keyword before - we also use ``await`` when displaying the dialog box. The reason for that usage is the same as it is for the HTTP request - we need to tell the app that while the dialog is displayed, and we're waiting for the user to push a button, it's OK to release control back to the event loop."
msgstr ""

#: ../../tutorial/tutorial-8.rst:246 7f0519010e6642c9be79b80ef010cdb3
msgid "It's also important to note that the handler itself is defined as ``async def``, rather than just ``def``. This tells Python that the method is an asynchronous coroutine. We made this change back in Tutorial 3 when we added the dialog box. You can only use ``await`` statements inside a method that is declared as ``async def``."
msgstr ""

#: ../../tutorial/tutorial-8.rst:252 cc36afbfda8142fdabe9b2f50b3b6b54
#, fuzzy
msgid "Toga allows you to use regular methods or asynchronous coroutines as handlers; Toga manages everything behind the scenes to make sure the handler is invoked or awaited as required."
msgstr "Toga vous permet d'utiliser des méthodes normales ou des co-programmes asynchrones en tant que gestionnaires ; Toga gère tout en coulisses pour s'assurer que le gestionnaire est invoqué ou attendu selon les besoins."

#: ../../tutorial/tutorial-8.rst:256 6923dcca5ffe44919d014abd917e418d
#, fuzzy
msgid "If you save these changes and re-run the app (either with ``briefcase dev`` in development mode, or by updating and re-running the packaged app), there won't be any obvious changes to the app. However, when you click on the button to trigger the dialog, you may notice a number of subtle improvements:"
msgstr "Si vous sauvegardez ces changements et relancez l'application (soit avec ``briefcase dev`` en mode développement, soit en mettant à jour et en relançant l'application packagée), il n'y aura pas de changements évidents dans l'application. Cependant, lorsque vous cliquez sur le bouton pour déclencher le dialogue, vous pouvez remarquer un certain nombre d'améliorations subtiles :"

#: ../../tutorial/tutorial-8.rst:261 51ced55dba5c49d5a274b33b5abb09ad
#, fuzzy
msgid "The button returns to an \"unclicked\" state, rather than being stuck in a \"clicked\" state."
msgstr "Le bouton revient à l'état \"décliqué\" au lieu d'être bloqué à l'état \"cliqué\"."

#: ../../tutorial/tutorial-8.rst:264 f7061cb781a848858f3a77749308ca55
#, fuzzy
msgid "The \"beachball\"/\"spinner\" icon won't appear"
msgstr "L'icône \"beachball\"/\"spinner\" n'apparaît pas"

#: ../../tutorial/tutorial-8.rst:266 23fd432e23f04576a6888e3b13bcc9d6
#, fuzzy
msgid "If you move/resize the app window while waiting for the dialog to appear, the window will redraw."
msgstr "Si vous déplacez ou redimensionnez la fenêtre de l'application en attendant que la boîte de dialogue s'affiche, la fenêtre se redessinera."

#: ../../tutorial/tutorial-8.rst:269 50a453d8344a45ba814ae4e49e5d546c
#, fuzzy
msgid "If you try to open an app menu, the menu will appear immediately."
msgstr "Si vous essayez d'ouvrir un menu d'application, le menu s'affiche immédiatement."

#: ../../tutorial/tutorial-8.rst:272 16a8b9f1eace46f68cd9b1c18979c418
msgid "Next steps"
msgstr "Étapes suivantes"

#: ../../tutorial/tutorial-8.rst:274 c14a77947e84485ea5aff618402d7e2b
msgid "This has been a taste for what you can do with the tools provided by the BeeWare project. Over the course of this tutorial, you have:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:277 209367b3999d4236b49586d693bbf805
msgid "Created a new GUI app project;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:278 b32c551e7b8a4667a37ead710a649c0a
msgid "Run that app in development mode;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:279 4ad0c111d0604d4f8bec875c5666a443
msgid "Built the app as a standalone binary for a desktop operating system;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:280 71ccc4fbd50045c49956277256de7179
msgid "Packaged that project for distribution to others;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:281 0fd3b86bf1fc46b883af81880c61ce72
msgid "Run the app on a mobile simulator and/or device;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:282 42e372790ba741f1aef0b185a50a2cb9
msgid "Run the app as a web app;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:283 3dbd97eb6b7a41dbb4042588531a2dc6
msgid "Added a third-party dependency to your app; and"
msgstr ""

#: ../../tutorial/tutorial-8.rst:284 e731f38eec584776aed73c92138ff72b
msgid "Modified the app so that it remains responsive."
msgstr ""

#: ../../tutorial/tutorial-8.rst:286 0690333d4bcc4c71a6e041fb069401b3
msgid "So - where to from here?"
msgstr ""

#: ../../tutorial/tutorial-8.rst:288 73c89bf1af964f55a811b0aa7995ccc7
msgid "If you'd like to go further, there are some additional :doc:`topic tutorials </tutorial/topics/index>` that go into detail on specific aspects of application development."
msgstr ""

#: ../../tutorial/tutorial-8.rst:291 00b3a709e2254c928f61602659e76140
msgid "If you'd like to know more about how to build complex user interfaces with Toga, you can dive into `Toga's documentation <https://toga.readthedocs.io>`__. Toga also has it's own tutorial `demonstrating how to use various features of the widget toolkit <https://toga.readthedocs.io/en/latest/tutorial/index.html>`__."
msgstr ""

#: ../../tutorial/tutorial-8.rst:296 0cd66a46b35b4aefbaaf80e57d65aea1
msgid "If you'd like to know more about the capabilities of Briefcase, you can dive into `Briefcase's documentation <https://briefcase.readthedocs.io>`__."
msgstr ""

#~ msgid "We've now got an application that is slick and responsive, even when it's waiting on a slow API. But how can we make sure that the app keeps working as we continue to develop it further? How do we test our app? Turn to :doc:`Tutorial 9 <tutorial-9>` to find out..."
#~ msgstr "Nous disposons désormais d'une application élégante et réactive, même lorsqu'elle est en attente d'une API lente. Mais comment s'assurer que l'application continue de fonctionner au fur et à mesure que nous la développons ? Comment tester notre application ? Consultez :doc:`Tutoriel 9 <tutorial-9>` pour le découvrir..."

#~ msgid "The method is defined as ``async def``, rather than just ``def``. This tells Python that the method is an asynchronous coroutine."
#~ msgstr "La méthode est définie comme ``async def``, plutôt que comme ``def``. Cela indique à Python que la méthode est une co-routine asynchrone."

#~ msgid "The ``get`` call is made with an ``await`` keyword. This instructs the app that while we are waiting for the response from the network, the app can release control to the event loop."
#~ msgstr "L'appel ``get`` est fait avec un mot-clé ``await``. Cela indique à l'application que pendant que nous attendons la réponse du réseau, l'application peut laisser le contrôle à la boucle d'événements."

