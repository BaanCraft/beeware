
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-13 17:07+0000\n"
"PO-Revision-Date: 2024-01-14 01:02+0000\n"
"Last-Translator: Lancelot Fouillet <lancelot.fouillet@orange.fr>\n"
"Language: fr\n"
"Language-Team: French <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-8/fr/>\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../tutorial/tutorial-8.rst:3 097575d9b357410599edbc39ac5b014e
#, fuzzy
msgid "Tutorial 8 - Making it Smooooth"
msgstr "Tutoriel 8 - Le rendre lisse"

#: ../../tutorial/tutorial-8.rst:5 2034b347808f4037b184126f60ec0f96
msgid "So far, our application has been relatively simple - displaying GUI widgets, calling a simple third-party library, and displaying output in a dialog. All these operations happen very quickly, and our application remains responsive."
msgstr ""

#: ../../tutorial/tutorial-8.rst:9 cf23963503ad4ed1a3609db4de386640
msgid "However, in a real world application, we'll need to perform complex tasks or calculations that may take a while to complete - and as those tasks are performed, we want our application to remain responsive. Let's make a change to our application that might take a little time to complete, and see the changes that need to be made to accommodate that behavior."
msgstr ""

#: ../../tutorial/tutorial-8.rst:16 1a44eb0788a34c9984cfab166d269e48
msgid "Accessing an API"
msgstr ""

#: ../../tutorial/tutorial-8.rst:18 74c68cc7d0f84e98ad9c70b7850074b9
msgid "A common time-consuming task an app will need to perform is to make a request on a web API to retrieve data, and display that data to the user. Web APIs sometimes take a second or two to respond, so if we're calling an API like that, we need to ensure our application doesn't become unresponsive while we wait for the web API to return an answer."
msgstr ""

#: ../../tutorial/tutorial-8.rst:24 031070ecaa37422ca45ac6ae0ab7e493
#, python-brace-format
msgid "This is a toy app, so we don't have a *real* API to work with, so we'll use the `{JSON} Placeholder API <https://jsonplaceholder.typicode.com>`__ as a source of data. The {JSON} Placeholder API has a number of \"fake\" API endpoints you can use as test data. One of those APIs is the ``/posts/`` endpoint, which returns fake blog posts. If you open ``https://jsonplaceholder.typicode.com/posts/42`` in your browser, you'll get a JSON payload describing a single post - some `Lorum ipsum <https://en.wikipedia.org/wiki/Lorem_ipsum>`__ content for a blog post with ID 42."
msgstr ""

#: ../../tutorial/tutorial-8.rst:33 8bcf97e53ea247b68c3d5c9fbcd102a9
msgid "The Python standard library contains all the tools you'd need to access an API. However, the built-in APIs are very low level. They are good implementations of the HTTP protocol - but they require the user to manage lots of low-level details, like URL redirection, sessions, authentication, and payload encoding. As a \"normal browser user\" you're probably used to taking these details for granted, as a browser manages them for you."
msgstr ""

#: ../../tutorial/tutorial-8.rst:40 be52fb0013f54df28baa8a4d0957f47a
#, python-brace-format
msgid "As a result, people have developed third-party libraries that wrap the built-in APIs and provide a simpler API that is a closer match for the everyday browser experience. We're going to use one of those libraries to access the {JSON} Placeholder API - a library called `httpx <https://www.python-httpx.org>`__. Briefcase uses ``httpx`` internally, so it's already in your local environment - you don't need to install it separately to use it here."
msgstr ""

#: ../../tutorial/tutorial-8.rst:47 db39ca883088416fa62b737a9efe9885
msgid "Let's add a ``httpx`` API call to our app. Modify the ``requires`` setting in our ``pyproject.toml`` to include the new requirement::"
msgstr ""

#: ../../tutorial/tutorial-8.rst:55 6d4dbf43128f4e0ca293808acfc02a46
msgid "Add an import to the top of the ``app.py`` to import ``httpx``::"
msgstr ""

#: ../../tutorial/tutorial-8.rst:59 8db80a09f529461aaab05bb7410ddd57
#, fuzzy
msgid "Then modify the ``say_hello()`` callback so it looks like this::"
msgstr "Pour rendre notre tutoriel asynchrone, modifiez le gestionnaire d'événement ``say_hello()`` pour qu'il ressemble à ceci: :"

#: ../../tutorial/tutorial-8.rst:75 037ba660f4d643d3bb612df82cccd235
msgid "This will change the ``say_hello()`` callback so that when it is invoked, it will:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:78 4f260489f40a4f3ab479fb7443ed933c
msgid "make a GET request on the JSON placeholder API to obtain post 42;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:80 7bce1c880e574a129dcf70fecd539872
msgid "decode the response as JSON;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:82 06bafe1542104dd5a5542fac9b28627b
msgid "extract the body of the post; and"
msgstr ""

#: ../../tutorial/tutorial-8.rst:84 8e581dab59e84eb5917fc24eca85eff6
msgid "include the body of that post as the text of the \"message\" dialog, in place of the text generated by Faker."
msgstr ""

#: ../../tutorial/tutorial-8.rst:87 d3c62a9aeeb84f59a7cd1fc83f901c1e
msgid "Lets run our updated app in Briefcase developer mode to check that our change has worked. As we've added a new requirement, we need to tell developer mode to reinstall requirements, by using the ``-r`` argument:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:93 ../../tutorial/tutorial-8.rst:310
#: 15e34a6f6ec14a03955b458b04f2b182 42e928d7fc74466f8e6c677b936a1a85
msgid "macOS"
msgstr ""

#: ../../tutorial/tutorial-8.rst:104 ../../tutorial/tutorial-8.rst:122
#: ../../tutorial/tutorial-8.rst:140 0bb4f3054d004654bc643bd7b7e4cad1
#: 37fe5c08fab145f88bc728791f8aa354 ce3374959a8b487cb1a78fe8db12e44d
msgid "When you enter a name and press the button, you should see a dialog that looks something like:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:107 0b045ee48f284e3193f1b25905ede079
msgid "Hello World Tutorial 8 dialog, on macOS"
msgstr ""

#: ../../tutorial/tutorial-8.rst:111 ../../tutorial/tutorial-8.rst:316
#: 4d5207711cbd46d18b5a85dc4058ca58 79e1c9eb27524e168bc091655a943c92
msgid "Linux"
msgstr ""

#: ../../tutorial/tutorial-8.rst:125 7ccbffd4ebf74fdfb5271060c389a868
msgid "Hello World Tutorial 8 dialog, on Linux"
msgstr ""

#: ../../tutorial/tutorial-8.rst:129 ../../tutorial/tutorial-8.rst:322
#: 2175d927d8534ee9b15ac97410af026c 6a152eaaa32d45c2a27dfaf5b32bdf04
msgid "Windows"
msgstr ""

#: ../../tutorial/tutorial-8.rst:143 45b4f7e6d0034a6e885da4366807cb4f
msgid "Hello World Tutorial 8 dialog, on Windows"
msgstr ""

#: ../../tutorial/tutorial-8.rst:147 ../../tutorial/tutorial-8.rst:328
#: 23767d903480410992a50e675499f42d 2998b1158bc6438cbc651211a0e15e38
msgid "Android"
msgstr ""

#: ../../tutorial/tutorial-8.rst:149 a6c26f3612fc43589c1e266fe3e9fcb7
msgid "You can't run an Android app in developer mode - use the instructions for your chosen desktop platform."
msgstr ""

#: ../../tutorial/tutorial-8.rst:152 ../../tutorial/tutorial-8.rst:334
#: 031e41a8a24a48769f293c866d7f8e8c 6013ef8d07de4dfdb5f4bce57c874008
msgid "iOS"
msgstr ""

#: ../../tutorial/tutorial-8.rst:154 8598fc7645ff445ca755726e959e640c
msgid "You can't run an iOS app in developer mode - use the instructions for your chosen desktop platform."
msgstr ""

#: ../../tutorial/tutorial-8.rst:157 5719433b5bbb4a27950e76b2adad791c
msgid "Unless you've got a *really* fast internet connection, you may notice that when you press the button, the GUI for your app locks up for a little bit. The operating system may even manifest this with a \"beachball\" or \"spinner\" cursor to indicate that the app is being unresponsive."
msgstr ""

#: ../../tutorial/tutorial-8.rst:162 ccb4d77b01fc4313881db7e9ae865789
#, fuzzy
msgid "This is because the web request we have made is *synchronous*. When our application makes the web request, it waits for the API to return a response before continuing. While it's waiting, it *isn't* allowing the application to redraw - and as a result, the application locks up."
msgstr "A moins que vous ne disposiez d'une connexion internet *très* rapide, vous remarquerez peut-être que lorsque vous appuyez sur le bouton, l'interface graphique de votre application se bloque pendant un petit moment. C'est parce que la requête web que nous avons faite est *synchrone*. Lorsque notre application effectue la requête web, elle attend que l'API renvoie une réponse avant de continuer. Pendant cette attente, l'API ne permet pas à l'application de se redessiner, ce qui a pour effet de bloquer l'application."

#: ../../tutorial/tutorial-8.rst:168 e275bb181d0245a2a2162c661a694474
#, fuzzy
msgid "GUI Event Loops"
msgstr "Boucles d'événements de l'interface graphique"

#: ../../tutorial/tutorial-8.rst:170 022ac3af460a49cbb3fea7349e4ff42b
#, fuzzy
msgid "To understand why this happens, we need to dig into the details of how a GUI application works. The specifics vary depending on the platform; but the high level concepts are the same, no matter the platform or GUI environment you're using."
msgstr "Pour comprendre pourquoi cela se produit, nous devons entrer dans les détails du fonctionnement d'une application GUI. Les spécificités varient en fonction de la plate-forme, mais les concepts de haut niveau sont les mêmes, quelle que soit la plate-forme ou l'environnement d'interface graphique que vous utilisez."

#: ../../tutorial/tutorial-8.rst:175 0c4cf69570f24e53bf68a4dfb8e5560c
#, fuzzy
msgid "A GUI app is, fundamentally, a single loop that looks something like::"
msgstr "Une application GUI est, fondamentalement, une boucle unique qui ressemble à quelque chose comme: :"

#: ../../tutorial/tutorial-8.rst:181 d005674bf44546c393aff25cc8f37d27
#, fuzzy
msgid "This loop is called the *Event Loop*. (These aren't actual method names - it's an illustration of what is going on using \"pseudo-code\")."
msgstr "Cette boucle est appelée *boucle d'événements*. (Il ne s'agit pas de noms de méthodes réels, mais d'une illustration de ce qui se passe dans le \"pseudo-code\")."

#: ../../tutorial/tutorial-8.rst:184 3758a90eb77d42248d814fc7e5288add
#, fuzzy
msgid "When you click on a button, or drag a scroll bar, or type a key, you are generating an \"event\". That \"event\" is put onto a queue, and the app will process the queue of events when it next has the opportunity to do so. The user code that is triggered in response to the event is called an *event handler*. These event handlers are invoked as part of the ``process_events()`` call."
msgstr "Lorsque vous cliquez sur un bouton, faites glisser une barre de défilement ou tapez une touche, vous générez un \"événement\". Cet \"événement\" est placé dans une file d'attente, et l'application traitera la file d'événements lorsqu'elle en aura l'occasion. Le code utilisateur déclenché en réponse à l'événement est appelé \"gestionnaire d'événement\". Ces gestionnaires d'événements sont invoqués dans le cadre de l'appel ``process_events()``."

#: ../../tutorial/tutorial-8.rst:190 44b492799e4c42e488186efe8110fdd2
#, fuzzy
msgid "Once an app has processed all the available events, it will ``redraw()`` the GUI. This takes into account any changes that the events have caused to the display of the app, as well as anything else that is going on in the operating system - for example, the windows of another app may obscure or reveal part of our app's window, and our app's redraw will need to reflect the portion of the window that is currently visible."
msgstr "Une fois qu'une application a traité tous les événements disponibles, elle va ``redraw()`` l'interface graphique. Cela prend en compte tous les changements que les événements ont causés à l'affichage de l'application, ainsi que tout ce qui se passe dans le système d'exploitation - par exemple, les fenêtres d'une autre application peuvent masquer ou révéler une partie de la fenêtre de notre application, et le redessin de notre application devra refléter la partie de la fenêtre qui est actuellement visible."

#: ../../tutorial/tutorial-8.rst:197 cfa0f338eecf4bcf8a3f4704578a5f9b
#, fuzzy
msgid "The important detail to notice: while an application is processing an event, *it can't redraw*, and *it can't process other events*."
msgstr "Détail important : pendant qu'une application traite un événement, *elle ne peut pas redessiner*, et *elle ne peut pas traiter d'autres événements*."

#: ../../tutorial/tutorial-8.rst:200 9bf59a2ac0024ca9a7174fcfb7c11959
#, fuzzy
msgid "This means any user logic contained in an event handler needs to complete quickly. Any delay in completing the event handler will be observed by the user as a slowdown (or stop) in GUI updates. If this delay is long enough, your operating system may report this as a problem - the macOS \"beachball\" and Windows \"spinner\" icons are the operating system telling you that your app is taking too long in an event handler."
msgstr "Cela signifie que toute logique utilisateur contenue dans un gestionnaire d'événements doit être exécutée rapidement. Tout retard dans l'exécution du gestionnaire d'événements sera observé par l'utilisateur sous la forme d'un ralentissement (ou d'un arrêt) des mises à jour de l'interface graphique. Si ce délai est suffisamment long, votre système d'exploitation peut signaler qu'il s'agit d'un problème - les icônes macOS \"beachball\" et Windows \"spinner\" indiquent que votre application prend trop de temps dans un gestionnaire d'événements."

#: ../../tutorial/tutorial-8.rst:207 79c4178d2dd14807bbd1896605f1e4e1
#, fuzzy
msgid "Simple operations like \"update a label\", or \"recompute the total of the inputs\" are easy to complete quickly. However, there are a lot of operations that can't be completed quickly. If you're performing a complex mathematical calculation, or indexing all the files on a file system, or performing a large network request, you can't \"just do it quickly\" - the operations are inherently slow."
msgstr "Des opérations simples comme \"mettre à jour une étiquette\" ou \"recalculer le total des entrées\" sont faciles à réaliser rapidement. Cependant, de nombreuses opérations ne peuvent pas être effectuées rapidement. Si vous effectuez un calcul mathématique complexe, si vous indexez tous les fichiers d'un système de fichiers ou si vous effectuez une requête réseau importante, vous ne pouvez pas \"faire vite\" - les opérations sont intrinsèquement lentes."

#: ../../tutorial/tutorial-8.rst:213 e7d856eabcdb4b67aff246f9a58b5b40
#, fuzzy
msgid "So - how do we perform long-lived operations in a GUI application?"
msgstr "Alors, comment effectuer des opérations à long terme dans une application GUI ?"

#: ../../tutorial/tutorial-8.rst:216 078bba670d4c48f5851ee57c18ffd54f
#, fuzzy
msgid "Asynchronous programming"
msgstr "Programmation asynchrone"

#: ../../tutorial/tutorial-8.rst:218 e08a26b9ed4347899c800ea3ead1724a
#, fuzzy
msgid "What we need is a way to tell an app in the middle of a long-lived event handler that it is OK to temporarily release control back to the event loop, as long as we can resume where we left off. It's up to the app to determine when this release can occur; but if the app releases control to the event loop regularly, we can have a long-running event handler *and* maintain a responsive UI."
msgstr "Ce dont nous avons besoin, c'est d'un moyen de dire à une application au milieu d'un gestionnaire d'événements de longue durée qu'il est acceptable de relâcher temporairement le contrôle dans la boucle d'événements, tant que nous pouvons reprendre là où nous nous sommes arrêtés. C'est à l'application de déterminer quand cette libération peut avoir lieu ; mais si l'application libère le contrôle dans la boucle d'événements régulièrement, nous pouvons avoir un gestionnaire d'événements de longue durée *et* maintenir une interface utilisateur réactive."

#: ../../tutorial/tutorial-8.rst:224 abc84ce79d964e7f9a0011a6e513ed0b
#, fuzzy
msgid "We can do this by using *asynchronous programming*. Asynchronous programming is a way to describe a program that allows the interpreter to run multiple functions at the same time, sharing resources between all the concurrently running functions."
msgstr "Nous pouvons le faire en utilisant la *programmation asynchrone*. La programmation asynchrone est une façon de décrire un programme qui permet à l'interpréteur d'exécuter plusieurs fonctions en même temps, en partageant les ressources entre toutes les fonctions qui s'exécutent simultanément."

#: ../../tutorial/tutorial-8.rst:229 807ad9ecea8a4c66a6c83973f5594571
#, fuzzy
msgid "Asynchronous functions (known as *coroutines*) need to be explicitly declared as being asynchronous. They also need to internally declare when an opportunity exists to change context to another coroutine."
msgstr "Les fonctions asynchrones (appelées *co-routines*) doivent être explicitement déclarées comme étant asynchrones. Elles doivent également déclarer en interne lorsqu'il est possible de changer de contexte et de passer à une autre co-routine."

#: ../../tutorial/tutorial-8.rst:233 31b14513e7004ea09d64ab7a8c0aa645
#, fuzzy
msgid "In Python, asynchronous programming is implemented using the ``async`` and ``await`` keywords, and the `asyncio <https://docs.python.org/3/library/asyncio.html>`__ module in the standard library. The ``async`` keyword allows us to declare that a function is an asynchronous coroutine. The ``await`` keyword provides a way to declare when an opportunity exists to change context to another coroutine. The `asyncio <https://docs.python.org/3/library/asyncio.html>`__ module provides some other useful tools and primitives for asynchronous coding."
msgstr "En Python, la programmation asynchrone est implémentée à l'aide des mots-clés ``async`` et ``await``, et du module ``asyncio <https://docs.python.org/3/library/asyncio.html>`__ dans la bibliothèque standard. Le mot-clé ``async`` nous permet de déclarer qu'une fonction est une co-routine asynchrone. Le mot-clé ``await`` permet de déclarer qu'il existe une opportunité de changer de contexte vers une autre co-routine. Le module `asyncio <https://docs.python.org/3/library/asyncio.html>`__ fournit d'autres outils et primitives utiles pour le codage asynchrone."

#: ../../tutorial/tutorial-8.rst:243 933e1ab323664151ad72aa6be5e1bb6e
#, fuzzy
msgid "Making the tutorial asynchronous"
msgstr "Rendre le didacticiel asynchrone"

#: ../../tutorial/tutorial-8.rst:245 516b6ecdf6c14413b805ec66b96a716b
#, fuzzy
msgid "To make our tutorial asynchronous, modify the ``say_hello()`` event handler so it looks like this::"
msgstr "Pour rendre notre tutoriel asynchrone, modifiez le gestionnaire d'événement ``say_hello()`` pour qu'il ressemble à ceci: :"

#: ../../tutorial/tutorial-8.rst:261 d2134db9452f48bd96dc88a481851ee3
#, fuzzy
msgid "There are only three changes to this callback from the previous version:"
msgstr "Il n'y a que 4 changements dans ce code par rapport à la version précédente :"

#: ../../tutorial/tutorial-8.rst:263 16f89dda63b64fb2ae2c3b0810d787e4
#, fuzzy
msgid "The client that is created is an asynchronous ``AsyncClient()``, rather than a synchronous ``Client()``. This tells ``httpx`` that it should operate in asynchronous mode, rather than synchronous mode."
msgstr "Le client créé est un ``AsyncClient()`` asynchrone, plutôt qu'un ``Client()`` synchrone. Cela indique à ``httpx`` qu'il doit fonctionner en mode asynchrone, plutôt qu'en mode synchrone."

#: ../../tutorial/tutorial-8.rst:267 51fa12d5dd144674a116d9bda705529b
#, fuzzy
msgid "The context manager used to create the client is marked as ``async``. This tells Python that there is an opportunity to release control as the context manager is entered and exited."
msgstr "Le gestionnaire de contexte utilisé pour créer le client est marqué comme ``async``. Cela indique à Python qu'il y a une opportunité de relâcher le contrôle lorsque le gestionnaire de contexte est entré et sorti."

#: ../../tutorial/tutorial-8.rst:271 c48acbbbb1614718a60e4e8d0e68d889
msgid "The ``get`` call is made with an ``await`` keyword. This instructs the app that while we are waiting for the response from the network, the app can release control to the event loop. We've seen this keyword before - we also use ``await`` when displaying the dialog box. The reason for that usage is the same as it is for the HTTP request - we need to tell the app that while the dialog is displayed, and we're waiting for the user to push a button, it's OK to release control back to the event loop."
msgstr ""

#: ../../tutorial/tutorial-8.rst:279 f16e45fb19b1438b8732f08dbca544a0
msgid "It's also important to note that the handler itself is defined as ``async def``, rather than just ``def``. This tells Python that the method is an asynchronous coroutine. We made this change back in Tutorial 3 when we added the dialog box. You can only use ``await`` statements inside a method that is declared as ``async def``."
msgstr ""

#: ../../tutorial/tutorial-8.rst:285 55abb354ca1b48498dad3b069f43e02c
#, fuzzy
msgid "Toga allows you to use regular methods or asynchronous coroutines as handlers; Toga manages everything behind the scenes to make sure the handler is invoked or awaited as required."
msgstr "Toga vous permet d'utiliser des méthodes normales ou des co-programmes asynchrones en tant que gestionnaires ; Toga gère tout en coulisses pour s'assurer que le gestionnaire est invoqué ou attendu selon les besoins."

#: ../../tutorial/tutorial-8.rst:289 19415abc7f9b4a16a66b7411d9b0de88
#, fuzzy
msgid "If you save these changes and re-run the app in development mode, there won't be any obvious changes to the app. However, when you click on the button to trigger the dialog, you may notice a number of subtle improvements:"
msgstr "Si vous sauvegardez ces changements et relancez l'application (soit avec ``briefcase dev`` en mode développement, soit en mettant à jour et en relançant l'application packagée), il n'y aura pas de changements évidents dans l'application. Cependant, lorsque vous cliquez sur le bouton pour déclencher le dialogue, vous pouvez remarquer un certain nombre d'améliorations subtiles :"

#: ../../tutorial/tutorial-8.rst:293 e3227ecb34bf485195196883a7b13d09
#, fuzzy
msgid "The button returns to an \"unclicked\" state, rather than being stuck in a \"clicked\" state."
msgstr "Le bouton revient à l'état \"décliqué\" au lieu d'être bloqué à l'état \"cliqué\"."

#: ../../tutorial/tutorial-8.rst:296 9d0516062639470bb990794762868445
#, fuzzy
msgid "The \"beachball\"/\"spinner\" icon won't appear"
msgstr "L'icône \"beachball\"/\"spinner\" n'apparaît pas"

#: ../../tutorial/tutorial-8.rst:298 6dbc9f17639847be9246f5792c0e09a3
#, fuzzy
msgid "If you move/resize the app window while waiting for the dialog to appear, the window will redraw."
msgstr "Si vous déplacez ou redimensionnez la fenêtre de l'application en attendant que la boîte de dialogue s'affiche, la fenêtre se redessinera."

#: ../../tutorial/tutorial-8.rst:301 a5786a9f31694f03beae13470144edc7
#, fuzzy
msgid "If you try to open an app menu, the menu will appear immediately."
msgstr "Si vous essayez d'ouvrir un menu d'application, le menu s'affiche immédiatement."

#: ../../tutorial/tutorial-8.rst:303 4bf6ae8c7aeb4fb4a4d25007a7c483bf
msgid "We can now run the full app. However, as we've added an extra requirement (``httpx``) we also need to update our app's requirements; we can do this by passing ``-r`` to ``briefcase run``. This will update our app's requirements, then re-build the app, then launch the app:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:340 d68aa5280fe54260be024d6c099f1569
msgid "You should see you app running, and remaining responsive when you press the button and network content is retrieved."
msgstr ""

#: ../../tutorial/tutorial-8.rst:344 e727f9c495fc4bd58c2982f7b3467e73
msgid "Next steps"
msgstr "Étapes suivantes"

#: ../../tutorial/tutorial-8.rst:346 ca6636b701ca4ec7a222f71c8d5ad51f
msgid "This has been a taste for what you can do with the tools provided by the BeeWare project. Over the course of this tutorial, you have:"
msgstr ""

#: ../../tutorial/tutorial-8.rst:349 8ecb4dd89ffa4bf19c56627e5e043007
msgid "Created a new GUI app project;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:350 09d25907e8fb4046a1f6c7f5b45fe970
msgid "Run that app in development mode;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:351 725712893dcf42d7a28405c6ff67f2f5
msgid "Built the app as a standalone binary for a desktop operating system;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:352 fc3d290ff026426cbbbf767eee349b34
msgid "Packaged that project for distribution to others;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:353 c35819a9e8144cf0a7a04a450c3584ee
msgid "Run the app on a mobile simulator and/or device;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:354 b3bfb3b8d1cb4897a6c93a756144084d
msgid "Run the app as a web app;"
msgstr ""

#: ../../tutorial/tutorial-8.rst:355 bf5f0866957944728a4b3112f0e2d22a
msgid "Added a third-party dependency to your app; and"
msgstr ""

#: ../../tutorial/tutorial-8.rst:356 d82450e6c9f04056956bd1a91dfa68ca
msgid "Modified the app so that it remains responsive."
msgstr ""

#: ../../tutorial/tutorial-8.rst:358 aff7eab141344faab3d22ee3bfbf38f0
msgid "So - where to from here?"
msgstr ""

#: ../../tutorial/tutorial-8.rst:360 70a464c5e0134d7c9bc6c5e58300fa0c
msgid "If you'd like to go further, there are some additional :doc:`topic tutorials </tutorial/topics/index>` that go into detail on specific aspects of application development."
msgstr ""

#: ../../tutorial/tutorial-8.rst:363 af538ee11398408ca51448e67d167111
msgid "If you'd like to know more about how to build complex user interfaces with Toga, you can dive into `Toga's documentation <https://toga.readthedocs.io>`__. Toga also has it's own tutorial `demonstrating how to use various features of the widget toolkit <https://toga.readthedocs.io/en/latest/tutorial/index.html>`__."
msgstr ""

#: ../../tutorial/tutorial-8.rst:368 7cce58a85f7944eda243f0f0ac686c0a
msgid "If you'd like to know more about the capabilities of Briefcase, you can dive into `Briefcase's documentation <https://briefcase.readthedocs.io>`__."
msgstr ""

#~ msgid "We've now got an application that is slick and responsive, even when it's waiting on a slow API. But how can we make sure that the app keeps working as we continue to develop it further? How do we test our app? Turn to :doc:`Tutorial 9 <tutorial-9>` to find out..."
#~ msgstr "Nous disposons désormais d'une application élégante et réactive, même lorsqu'elle est en attente d'une API lente. Mais comment s'assurer que l'application continue de fonctionner au fur et à mesure que nous la développons ? Comment tester notre application ? Consultez :doc:`Tutoriel 9 <tutorial-9>` pour le découvrir..."

#~ msgid "The method is defined as ``async def``, rather than just ``def``. This tells Python that the method is an asynchronous coroutine."
#~ msgstr "La méthode est définie comme ``async def``, plutôt que comme ``def``. Cela indique à Python que la méthode est une co-routine asynchrone."

#~ msgid "The ``get`` call is made with an ``await`` keyword. This instructs the app that while we are waiting for the response from the network, the app can release control to the event loop."
#~ msgstr "L'appel ``get`` est fait avec un mot-clé ``await``. Cela indique à l'application que pendant que nous attendons la réponse du réseau, l'application peut laisser le contrôle à la boucle d'événements."

#~ msgid "Let's add a ``httpx`` API call to our app. Add an import to the top of the ``app.py`` to import ``httpx``::"
#~ msgstr ""

#~ msgid "Lets run our updated app in Briefcase developer mode to check that our change has worked."
#~ msgstr ""

