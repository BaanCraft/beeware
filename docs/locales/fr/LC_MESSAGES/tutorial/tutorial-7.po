
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-13 22:49+0000\n"
"PO-Revision-Date: 2024-01-14 01:02+0000\n"
"Last-Translator: Lancelot Fouillet <lancelot.fouillet@orange.fr>\n"
"Language: fr\n"
"Language-Team: French <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-7/fr/>\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../tutorial/tutorial-7.rst:3 580d8b5ae97e4569a0478f8164dd311b
#, fuzzy
msgid "Tutorial 7 - Get this (third)-party started"
msgstr "Tutoriel n° 7 - Démarrer cette (troisième) partie"

#: ../../tutorial/tutorial-7.rst:5 6ff0e343d21748729a9aad8aa45906d9
#, fuzzy
msgid "So far, the app we've built has only used our own code, plus the code provided by BeeWare. However, in a real-world app, you'll likely want to use a third-party library, downloaded from the Python Package Index (PyPI)."
msgstr "Jusqu'à présent, l'application que nous avons construite n'a utilisé que notre propre code, ainsi que le code fourni par BeeWare. Cependant, dans une application réelle, vous voudrez probablement utiliser une bibliothèque tierce, téléchargée à partir du Python Package Index (PyPI)."

#: ../../tutorial/tutorial-7.rst:9 eaa725ae7687465284cc03b0741ba64c
#, fuzzy
msgid "Let's modify our app to include a third-party library."
msgstr "Modifions notre application pour y inclure une bibliothèque tierce."

#: ../../tutorial/tutorial-7.rst:12 9ba96ae85be14940995d02cdf2899c5c
msgid "Adding a package"
msgstr ""

#: ../../tutorial/tutorial-7.rst:14 37fd35da930349a3b7fb7d5e29f2dba6
msgid "Let's modify our application to say a little bit more than just \"Hi, there!\"."
msgstr ""

#: ../../tutorial/tutorial-7.rst:16 ba49d1662ac34e22b8db2f1becbf2a08
msgid "To generate some more interesting text for the dialog, we're going to use a library called `Faker <https://faker.readthedocs.io/en/stable/>`__ . Faker is a Python package that generates fake content, including names and text blocks. The names and words in the text block are generated from an arbitrary list of words provided by Faker. We're going to use Faker to construct a fake message, as if someone is responding to the user."
msgstr ""

#: ../../tutorial/tutorial-7.rst:23 06894091b5e24e8aaeed5bb173ee2cdb
#, fuzzy
msgid "We start by adding ``faker`` to our app. Add an import to the top of the ``app.py`` to import ``faker``::"
msgstr "Ajoutons un appel API ``httpx`` à notre application. Ajoutez un import au début de ``app.py`` pour importer ``httpx``: :"

#: ../../tutorial/tutorial-7.rst:28 e6de18fa54084ccb8dc6010d1bd34585
#, fuzzy
msgid "Then modify the ``say_hello()`` callback so it looks like this::"
msgstr "Ensuite, modifiez le callback ``say_hello()`` pour qu'il ressemble à ceci: :"

#: ../../tutorial/tutorial-7.rst:39 b21d74eedabf4f7e98770b79357172df
#, fuzzy
msgid "Let's run our updated app in Briefcase developer mode to check that our change has worked."
msgstr "Exécutons notre application mise à jour dans le mode développeur de Briefcase pour vérifier que notre changement a fonctionné."

#: ../../tutorial/tutorial-7.rst:44 ../../tutorial/tutorial-7.rst:120
#: ../../tutorial/tutorial-7.rst:182 ../../tutorial/tutorial-7.rst:510
#: 61548a09b2164c178e3bb58c42e471b1 7a2e7e1c2eae4bcebe52acccdde62e01
#: a467ffd7681a455c9c636c25b4b29995 fb7bedb418cf4b22adab19ecf56c8b8d
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-7.rst:64 ../../tutorial/tutorial-7.rst:134
#: ../../tutorial/tutorial-7.rst:220 ../../tutorial/tutorial-7.rst:531
#: 1317dcb17cdd4b95bd6a0ee248a9c093 617b61a060884471938e7fe9a4bc806b
#: 7d17517742aa4531923def56aedce2fa 8b1d25855f2b43f68be9f3224967f55a
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-7.rst:84 ../../tutorial/tutorial-7.rst:148
#: ../../tutorial/tutorial-7.rst:273 ../../tutorial/tutorial-7.rst:558
#: 2209b6fd26a94161b8a3abb893d20518 3c8c2d06c2db49fc94621d89ca564b01
#: d44871c3a16a41e6af459d99736109ee f231d4cb520a428c8c58eecbdbd433af
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-7.rst:104 ../../tutorial/tutorial-7.rst:162
#: ../../tutorial/tutorial-7.rst:311 ../../tutorial/tutorial-7.rst:579
#: 0dc152c92c7049938e54a8d56d46b01a 0e50e55255064cf48311bffcc6ed4567
#: 2c7d4337d51342b9944fad6e40494400 d514be2319fe4f58bae277b1605d1e52
msgid "Android"
msgstr ""

#: ../../tutorial/tutorial-7.rst:106 ../../tutorial/tutorial-7.rst:164
#: 06fa474df9c44fe194083d3864d319c9 6e607a591b3a46a2aad6b0c4fa959dc1
msgid "You can't run an Android app in developer mode - use the instructions for your chosen desktop platform."
msgstr ""

#: ../../tutorial/tutorial-7.rst:109 ../../tutorial/tutorial-7.rst:167
#: ../../tutorial/tutorial-7.rst:384 ../../tutorial/tutorial-7.rst:596
#: 1dee22327bb94a9da51c395ea609cb4d d7503790f16646f1ac00b9d2ea391c87
#: e5ae9658a3e64a379026f1a9afd659aa f58b9912df1e4f1ca3fdd94df4bb5192
#, fuzzy
msgid "iOS"
msgstr "Windows"

#: ../../tutorial/tutorial-7.rst:111 ../../tutorial/tutorial-7.rst:169
#: 4a25bd30ca024d31867049b76fb697a2 9607737e3e7644e697b08034d013a1c1
msgid "You can't run an iOS app in developer mode - use the instructions for your chosen desktop platform."
msgstr ""

#: ../../tutorial/tutorial-7.rst:114 83ca143bca7d450388010c41a0abd2b8
#, fuzzy
msgid "What happened? We've added ``faker`` to our *code*, but we haven't added it to our development virtual environment. We can fix this by installing ``faker`` with ``pip``, and then re-running ``briefcase dev``:"
msgstr "Qu'est-ce qui s'est passé ? Nous avons ajouté ``httpx`` à notre *code*, mais nous ne l'avons pas ajouté à notre environnement virtuel de développement. Nous pouvons corriger cela en installant ``httpx`` avec ``pip``, puis en relançant ``briefcase dev`` :"

#: ../../tutorial/tutorial-7.rst:127 ../../tutorial/tutorial-7.rst:141
#: ../../tutorial/tutorial-7.rst:155 50f31dc110654e7a9aeecde2326c22e4
#: 73067b6f5be24503b6e15643af6a508f 8484921f80d84b6992bb2175d7ee4ea9
#, fuzzy
msgid "When you enter a name and press the button, you should see a dialog that looks something like:"
msgstr "Lorsque vous entrez un nom et que vous appuyez sur le bouton, une boîte de dialogue doit s'afficher :"

#: ../../tutorial/tutorial-7.rst:130 00c9ac7a7f4149c1a7849e23540cd629
#, fuzzy
msgid "Hello World Tutorial 7 dialog, on macOS"
msgstr "Tutoriel Hello World 7 dialogue, sur macOS"

#: ../../tutorial/tutorial-7.rst:144 7356c16844994903a444727af786c7dc
#, fuzzy
msgid "Hello World Tutorial 7 dialog, on Linux"
msgstr "Tutoriel Hello World 7 dialogue, sur Linux"

#: ../../tutorial/tutorial-7.rst:158 ff6e38475b214e3c88b6edabaff26255
#, fuzzy
msgid "Hello World Tutorial 7 dialog, on Windows"
msgstr "Tutoriel Hello World 7 dialogue, sur Windows"

#: ../../tutorial/tutorial-7.rst:172 6044a104b4e948bba51e2ee932ac3172
#, fuzzy
msgid "We've now got a working app, using a third party library, running in development mode!"
msgstr "Nous avons maintenant une application fonctionnelle, utilisant une bibliothèque tierce, fonctionnant en mode développement !"

#: ../../tutorial/tutorial-7.rst:175 f04b9890e17149aa9e1266b55db369d1
#, fuzzy
msgid "Running the updated app"
msgstr "Exécution de l'application mise à jour"

#: ../../tutorial/tutorial-7.rst:177 3dd30546e9734388bcdad5c17cc06da7
#, fuzzy
msgid "Let's get this updated application code packaged as a standalone app. Since we've made code changes, we need to follow the same steps as in :doc:`Tutorial 4 <tutorial-4>`:"
msgstr "Nous allons faire en sorte que ce code d'application mis à jour soit empaqueté en tant qu'application autonome. Puisque nous avons modifié le code, nous devons suivre les mêmes étapes que dans :doc:`Tutoriel 4 <tutorial-4>` :"

#: ../../tutorial/tutorial-7.rst:184 ../../tutorial/tutorial-7.rst:222
#: ../../tutorial/tutorial-7.rst:275 ../../tutorial/tutorial-7.rst:313
#: ../../tutorial/tutorial-7.rst:386 068eacdb99314085bafb22f0b2f5af46
#: 0d4bf7484d704c1a8679ec7ab9183782 5c119af55f834110a785c5dd1e5fad79
#: 7db8b2b6bbf148c297e4e7acaa6e44a0 aba05c2e245a41f1b5124f085ce00121
#, fuzzy
msgid "Update the code in the packaged app:"
msgstr "Mettre à jour le code dans l'application packagée :"

#: ../../tutorial/tutorial-7.rst:195 ../../tutorial/tutorial-7.rst:233
#: ../../tutorial/tutorial-7.rst:286 ../../tutorial/tutorial-7.rst:324
#: ../../tutorial/tutorial-7.rst:397 115baaa4d31b48da9b118ea65eea75bf
#: 177df58077d84265bfaa170c215c9a12 500e96a751b5496c9f2525665a52b0ea
#: 7ba588aec4874d598dedfadaae0b7625 e951cabd1ce64b37a9c5704f9a05f190
#, fuzzy
msgid "Rebuild the app:"
msgstr "Reconstruire l'application :"

#: ../../tutorial/tutorial-7.rst:204 ../../tutorial/tutorial-7.rst:247
#: ../../tutorial/tutorial-7.rst:295 684faa37c7ea4e3e9373b68ebf36a790
#: d30fe7351ab848c39e0f6e9f9439a141 d5355cea8a584218bcee1ec69df23f75
#, fuzzy
msgid "And finally, run the app:"
msgstr "Enfin, lancez l'application :"

#: ../../tutorial/tutorial-7.rst:213 ../../tutorial/tutorial-7.rst:304
#: 3f167e15c8a541319e911c90d586b403 d67348bc14e34dbea8dffafbc7640155
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console, plus a crash dialog:"
msgstr "Cependant, lorsque l'application s'exécute, vous verrez une erreur dans la console, ainsi qu'une boîte de dialogue de plantage :"

#: ../../tutorial/tutorial-7.rst:216 edf2a1c2a614454c8815a5283a153fa9
#, fuzzy
msgid "Hello World Tutorial 7 app crash, on macOS"
msgstr "Plantage de l'application Hello World Tutorial 7, sur macOS"

#: ../../tutorial/tutorial-7.rst:256 ../../tutorial/tutorial-7.rst:343
#: 98c800f0f93b46ccac4ec6ee7f9940c8 f0a898ac892f4e22abc0498fe480d281
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console:"
msgstr "Cependant, lorsque l'application s'exécute, une erreur apparaît dans la console :"

#: ../../tutorial/tutorial-7.rst:307 9fa5649fa35540d5ae6aeab5a59fb634
#, fuzzy
msgid "Hello World Tutorial 7 app crash, on Windows"
msgstr "Plantage de l'application Hello World Tutorial 7, sous Windows"

#: ../../tutorial/tutorial-7.rst:334 ../../tutorial/tutorial-7.rst:407
#: 2e05be3da4be4a519aae116274347985 5875895b50bd40268c488fb7884aae93
msgid "And finally, run the app (selecting a simulator when prompted):"
msgstr ""

#: ../../tutorial/tutorial-7.rst:417 e3575e5622f340479e9117e7563dec33
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console"
msgstr "Cependant, lorsque l'application s'exécute, une erreur apparaît dans la console :"

#: ../../tutorial/tutorial-7.rst:430 3f607052ff474463813eb262448ecacf
#, fuzzy
msgid "Once again, the app has failed to start because ``faker`` has not been installed - but why? Haven't we already installed ``faker``?"
msgstr "Une fois de plus, l'application n'a pas pu démarrer parce que ``httpx`` a été installé - mais pourquoi ? N'avons-nous pas déjà installé `httpx` ?"

#: ../../tutorial/tutorial-7.rst:433 722edc3b688d4be984e6664aa71af7a3
#, fuzzy
msgid "We have - but only in the development environment. Your development environment is entirely local to your machine - and is only enabled when you explicitly activate it. Although Briefcase has a development mode, the main reason you'd use Briefcase is to package up your code so you can give it to someone else."
msgstr "Nous l'avons fait, mais uniquement dans l'environnement de développement. Votre environnement de développement est entièrement local à votre machine - et n'est activé que lorsque vous l'activez explicitement. Bien que Briefcase dispose d'un mode de développement, la principale raison pour laquelle vous utilisez Briefcase est d'empaqueter votre code afin de le donner à quelqu'un d'autre."

#: ../../tutorial/tutorial-7.rst:438 ff973870d4bc4511a2501c3c26d365f4
#, fuzzy
msgid "The only way to guarantee that someone else will have a Python environment that contains everything it needs is to build a completely isolated Python environment. This means there's a completely isolated Python install, and a completely isolated set of dependencies. This is what Briefcase is building when you run ``briefcase build`` - an isolated Python environment. This also explains why ``faker`` isn't installed - it has been installed in your *development* environment, but not in the packaged app."
msgstr "La seule façon de garantir que quelqu'un d'autre disposera d'un environnement Python contenant tout ce dont il a besoin est de construire un environnement Python complètement isolé. Cela signifie qu'il y a une installation Python complètement isolée, et un ensemble de dépendances complètement isolé. C'est ce que Briefcase construit quand vous lancez ``briefcase build`` - un environnement Python isolé. Cela explique aussi pourquoi ``httpx`` n'est pas installé - il a été installé dans votre environnement de *développement*, mais pas dans l'application packagée."

#: ../../tutorial/tutorial-7.rst:446 a603a8a91fb345b7b59afb6de0b85958
#, fuzzy
msgid "So - we need to tell Briefcase that our app has an external dependency."
msgstr "Nous devons donc indiquer à Briefcase que notre application a une dépendance externe."

#: ../../tutorial/tutorial-7.rst:449 8b5eb67f4d6643b7891100a8c9e64c56
#, fuzzy
msgid "Updating dependencies"
msgstr "Mise à jour des dépendances"

#: ../../tutorial/tutorial-7.rst:451 a208dcbc5d0949d88e4d4f824bae1433
#, fuzzy
msgid "In the root directory of your app, there is a file named ``pyproject.toml``. This file contains all the app configuration details that you provided when you originally ran ``briefcase new``."
msgstr "Dans le répertoire racine de votre application, il y a un fichier nommé ``pyproject.toml``. Ce fichier contient tous les détails de configuration de l'application que vous avez fournis lorsque vous avez lancé ``briefcase new``."

#: ../../tutorial/tutorial-7.rst:455 27ba516553e549b6958b6e34c35e4311
#, fuzzy
msgid "``pyproject.toml`` is broken up into sections; one of the sections describes the settings for your app::"
msgstr "``pyproject.toml`` est divisé en sections ; l'une d'entre elles décrit les paramètres de votre application: :"

#: ../../tutorial/tutorial-7.rst:466 9f5182c059d243e09ba49f1fa7ef1b63
#, fuzzy
msgid "The ``requires`` option describes the dependencies of our application. It is a list of strings, specifying libraries (and, optionally, versions) of libraries that you want to be included with your app."
msgstr "L'option ``requires`` décrit les dépendances de notre application. C'est une liste de chaînes de caractères, spécifiant les bibliothèques (et, optionnellement, les versions) des bibliothèques que vous voulez inclure dans votre application."

#: ../../tutorial/tutorial-7.rst:470 6f934d7070504fd587b6ed0dff1b36c9
#, fuzzy
msgid "Modify the ``requires`` setting so that it reads::"
msgstr "Modifiez le paramètre ``requires`` de façon à ce qu'il se lise: :"

#: ../../tutorial/tutorial-7.rst:476 e87b139d6a80437cbfdd186b2467abf7
#, fuzzy
msgid "By adding this setting, we're telling Briefcase \"when you build my app, run ``pip install faker`` into the application bundle\". Anything that would be legal input to ``pip install`` can be used here - so, you could specify:"
msgstr "En ajoutant ce paramètre, nous disons à Briefcase \"lorsque vous compilez mon application, lancez ``pip install httpx`` dans le bundle de l'application\". Tout ce qui serait une entrée légale pour `pip install`` peut être utilisé ici - ainsi, vous pourriez spécifier :"

#: ../../tutorial/tutorial-7.rst:480 18302e1a9fae49ca8d6e0aaf45c651f5
#, fuzzy
msgid "A specific library version (e.g., ``\"faker==37.3.0\"``);"
msgstr "Une version spécifique de la bibliothèque (par exemple, ``\"httpx==0.19.0\"``) ;"

#: ../../tutorial/tutorial-7.rst:481 fb6c9e64af414633b7f9b81d0be8f512
#, fuzzy
msgid "A range of library versions (e.g., ``\"faker>=37\"``);"
msgstr "Une gamme de versions de la bibliothèque (par exemple, ``\"httpx>=0.19\"``) ;"

#: ../../tutorial/tutorial-7.rst:482 5473eb2b579e48f5951da00f48df1aa3
#, fuzzy
msgid "A path to a git repository (e.g., ``\"git+https://github.com/joke2k/faker/\"``); or"
msgstr "Un chemin vers un dépôt git (par exemple, ``\"git+https://github.com/encode/httpx\"``) ; ou"

#: ../../tutorial/tutorial-7.rst:484 83c4c457f6844c5f876ea4e870851575
#, fuzzy
msgid "A local file path (However - be warned: if you give your code to someone else, this path probably won't exist on their machine!)"
msgstr "Un chemin d'accès à un fichier local (Cependant, attention : si vous donnez votre code à quelqu'un d'autre, ce chemin d'accès n'existera probablement pas sur sa machine !)"

#: ../../tutorial/tutorial-7.rst:487 ee774b49479d446f96609e60ee795e74
#, fuzzy
msgid "Further down in ``pyproject.toml``, you'll notice other sections that are operating system dependent, like ``[tool.briefcase.app.helloworld.macOS]`` and ``[tool.briefcase.app.helloworld.windows]``. These sections *also* have a ``requires`` setting. These settings allow you to define additional platform-specific dependencies - so, for example, if you need a platform-specific library to handle some aspect of your app, you can specify that library in the platform-specific ``requires`` section, and that setting will only be used for that platform. You will notice that the ``toga`` libraries are all specified in the platform-specific ``requires`` section - this is because the libraries needed to display a user interface are platform specific."
msgstr "Plus loin dans ``pyproject.toml``, vous remarquerez d'autres sections qui dépendent du système d'exploitation, comme ``[tool.briefcase.app.helloworld.macOS]`` et ``[tool.briefcase.app.helloworld.windows]``. Ces sections ont *également* un paramètre ``requires``. Ces paramètres vous permettent de définir des dépendances supplémentaires spécifiques à une plate-forme - ainsi, par exemple, si vous avez besoin d'une bibliothèque spécifique à une plate-forme pour gérer un aspect de votre application, vous pouvez spécifier cette bibliothèque dans la section ``requires'' spécifique à la plate-forme, et ce paramètre ne sera utilisé que pour cette plate-forme. Vous remarquerez que les bibliothèques ``toga`` sont toutes spécifiées dans la section ``requires`` spécifique à la plate-forme - c'est parce que les bibliothèques nécessaires pour afficher une interface utilisateur sont spécifiques à la plate-forme."

#: ../../tutorial/tutorial-7.rst:498 7b1980a6465446399c89796a721874f7
#, fuzzy
msgid "In our case, we want ``faker`` to be installed on all platforms, so we use the app-level ``requires`` setting. The app-level dependencies will always be installed; the platform-specific dependencies are installed *in addition* to the app-level ones."
msgstr "Dans notre cas, nous voulons que ``httpx`` soit installé sur toutes les plateformes, donc nous utilisons le paramètre ``requires`` au niveau de l'application. Les dépendances au niveau de l'application seront toujours installées ; les dépendances spécifiques à la plate-forme sont installées *en plus* de celles au niveau de l'application."

#: ../../tutorial/tutorial-7.rst:503 0ac9b0d0b53146739d5d232ab6a87ddd
#, fuzzy
msgid "Now that we've told Briefcase about our additional requirements, we can try packaging our app again. Ensure that you've saved your changes to ``pyproject.toml``, and then update your app again - this time, passing in the ``-r`` flag. This tells Briefcase to update requirements in the packaged app:"
msgstr "Maintenant que nous avons informé Briefcase de nos exigences supplémentaires, nous pouvons essayer d'empaqueter à nouveau notre application. Assurez-vous que vous avez sauvegardé vos changements dans ``pyproject.toml``, puis mettez à jour votre application à nouveau - cette fois-ci, en passant le drapeau ``-r``. Cela indique à Briefcase de mettre à jour les exigences dans l'application packagée :"

#: ../../tutorial/tutorial-7.rst:618 a7fd07232d874f2ebb4ba104540812a3
#, fuzzy
msgid "Once you've updated, you can run ``briefcase build`` and ``briefcase run`` - and you should see your packaged app, with the new dialog behavior."
msgstr "Une fois la mise à jour effectuée, vous pouvez lancer ``briefcase build`` et ``briefcase run`` - et vous devriez voir votre application packagée, avec le nouveau comportement du dialogue."

#: ../../tutorial/tutorial-7.rst:623 24d71279e77a43688ab764e148f1a8b7
#, fuzzy
msgid "The ``-r`` option for updating requirements is also honored by the ``build`` and ``run`` command, so if you want to update, build, and run in one step, you could use ``briefcase run -u -r``."
msgstr "L'option ``-r`` pour la mise à jour des exigences est également honorée par les commandes ``build`` et ``run``, donc si vous voulez mettre à jour, compiler et exécuter en une seule étape, vous pouvez utiliser ``briefcase run -u -r``."

#: ../../tutorial/tutorial-7.rst:628 1fdc0fd066e8459db8597dfa778611d7
msgid "Third-Party Python Packages for Mobile and Web"
msgstr ""

#: ../../tutorial/tutorial-7.rst:630 bc12f310ac76451d898b2278507730b6
msgid "Faker is just one example of a third-party Python package - a collection of code that isn't part what Python provides out of the box. These third-party packages are most commonly distributed using the `Python Package Index (PyPI) <https://pypi.org>`__, and installed into your local virtual environment. We've been using ``pip`` in this tutorial, but there are other options."
msgstr ""

#: ../../tutorial/tutorial-7.rst:636 73f95f63739d4b70ab2846477b8eaadc
#, fuzzy
msgid "On desktop platforms (macOS, Windows, Linux), essentially any package on PyPI package can be installed into your virtual environment, or added to your app's requirements. However, when building an app for mobile or web platforms, `your options are slightly limited <https://briefcase.readthedocs.io/en/latest/background/faq.html#can-i-use-third-party-python-packages-in-my-app>`__."
msgstr "Sur les plateformes de bureau (macOS, Windows, Linux), tout ``pip``-installable peut être ajouté à vos exigences. Sur les plateformes mobiles et web, `vos options sont légèrement limitées <https://briefcase.readthedocs.io/en/latest/background/faq.html#can-i-use-third-party-python-packages-in-my-app>`__."

#: ../../tutorial/tutorial-7.rst:642 c8f57b1eccd64c1998e7c2b2b6802eb4
msgid "In short; any *pure Python* package (i.e. any package created from a project written *only* in Python) can be used without difficulty. Some packages, though, are created from projects that contain both Python and other languages (e.g. C, C++, Rust, etc). Code written in those languages needs to be compiled to platform-specific binary modules before it can be used, and those pre-compiled binary modules are only available on specific platforms. Mobile and web platforms have very different requirements than \"standard\" desktop platforms. At this time, most Python packages don't provide pre-compiled binaries for mobile and web platforms."
msgstr ""

#: ../../tutorial/tutorial-7.rst:652 67fec59c2cf646a78948337ef0f83557
msgid "On PyPI, packages are often provided in a pre-built distribution format called *wheels*. To check whether a package is pure Python, look at the PyPI downloads page for the project. If the wheels provided have a ``-py3-none-any.whl`` suffix (e.g., `Faker <https://pypi.org/project/Faker/37.3.0/#files>`__), then they are pure Python wheels. However, if the wheels have version and platform-specific extensions (e.g., `Pillow <https://pypi.org/project/pillow/11.2.1/#files>`__, which has wheels with suffixes like ``-cp313-cp313-macosx_11_0_arm64.whl`` and ``-cp39-cp39-win_amd64.whl``), then the wheel *contains a binary component*. That package cannot be installed on mobile or web platforms unless a wheel compatible with those platforms has been provided."
msgstr ""

#: ../../tutorial/tutorial-7.rst:663 1de3dbc8a4184b65afcb0e1421b8d27a
msgid "At this time, *most* binary packages on PyPI don't provide mobile- or web-compatible wheels. To fill this gap, BeeWare provides binaries for some popular binary modules (including ``numpy``, ``pandas``, and ``cryptography``). These wheels are *not* distributed on PyPI, but Briefcase will install those wheels if they're available."
msgstr ""

#: ../../tutorial/tutorial-7.rst:669 ef9e259d327e43088bfcb923d311695b
#, fuzzy
msgid "It's *usually* possible to compile binary packages for mobile platforms, but it's not easy to set up -- well outside the scope of an introductory tutorial like this one."
msgstr "BeeWare peut fournir des binaires pour certains modules binaires populaires (y compris ``numpy``, ``pandas``, et ``cryptographie``). Il est *habituellement* possible de compiler des paquets pour les plateformes mobiles, mais ce n'est pas facile à mettre en place -- ce qui sort du cadre d'un tutoriel d'introduction comme celui-ci."

#: ../../tutorial/tutorial-7.rst:674 1e4ea824bbed486783f2fc905349f5de
msgid "Next steps"
msgstr "Étapes suivantes"

#: ../../tutorial/tutorial-7.rst:676 10a37b3ce02744d3803a29b789d0058c
msgid "We've now got an app that uses a third-party library! In :doc:`Tutorial 8 <tutorial-8>` we'll learn how to ensure our app remains responsive as we add more complex application logic."
msgstr ""

#~ msgid "Accessing an API"
#~ msgstr "Accéder à une API"

#~ msgid "A common task an app will need to perform is to make a request on a web API to retrieve data, and display that data to the user. This is a toy app, so we don't have a *real* API to work with, so we'll use the `{JSON} Placeholder API <https://jsonplaceholder.typicode.com>`__ as a source of data."
#~ msgstr "Une tâche courante qu'une application doit effectuer est de faire une requête sur une API web pour récupérer des données, et afficher ces données à l'utilisateur. Comme il s'agit d'une application jouet, nous n'avons pas de *vraie* API à utiliser. Nous utiliserons donc la `{JSON} Placeholder API <https://jsonplaceholder.typicode.com>`__ comme source de données."

#~ msgid "The {JSON} Placeholder API has a number of \"fake\" API endpoints you can use as test data. One of those APIs is the ``/posts/`` endpoint, which returns fake blog posts. If you open ``https://jsonplaceholder.typicode.com/posts/42`` in your browser, you'll get a JSON payload describing a single post - some `Lorum ipsum <https://en.wikipedia.org/wiki/Lorem_ipsum>`__ content for a blog post with ID 42."
#~ msgstr "L'API {JSON} Placeholder possède un certain nombre de \"faux\" points de terminaison d'API que vous pouvez utiliser comme données de test. L'une de ces API est le point de terminaison ``/posts/``, qui renvoie de faux billets de blog. Si vous ouvrez ``https://jsonplaceholder.typicode.com/posts/42`` dans votre navigateur, vous obtiendrez un fichier JSON décrivant un seul article - un contenu `Lorum ipsum <https://en.wikipedia.org/wiki/Lorem_ipsum>`__ pour un article de blog avec l'ID 42."

#~ msgid "The Python standard library contains all the tools you'd need to access an API. However, the built-in APIs are very low level. They are good implementations of the HTTP protocol - but they require the user to manage lots of low-level details, like URL redirection, sessions, authentication, and payload encoding. As a \"normal browser user\" you're probably used to taking these details for granted, as a browser manages these details for you."
#~ msgstr "La bibliothèque standard de Python contient tous les outils dont vous avez besoin pour accéder à une API. Cependant, les API intégrées sont de très bas niveau. Ce sont de bonnes implémentations du protocole HTTP, mais elles exigent de l'utilisateur qu'il gère de nombreux détails de bas niveau, comme la redirection d'URL, les sessions, l'authentification et l'encodage des données utiles. En tant qu'\"utilisateur normal de navigateur\", vous avez probablement l'habitude de considérer ces détails comme allant de soi, car le navigateur les gère pour vous."

#~ msgid "As a result, people have developed third-party libraries that wrap the built-in APIs and provide a simpler API that is a closer match for the everyday browser experience. We're going to use one of those libraries to access the {JSON} Placeholder API - a library called `httpx <https://www.python-httpx.org>`__."
#~ msgstr "En conséquence, des bibliothèques tierces ont été développées pour envelopper les API intégrées et fournir une API plus simple qui correspond mieux à l'expérience quotidienne du navigateur. Nous allons utiliser l'une de ces bibliothèques pour accéder à l'API {JSON} Placeholder - une bibliothèque appelée `httpx <https://www.python-httpx.org>`__."

#~ msgid "This will change the ``say_hello()`` callback so that when it is invoked, it will:"
#~ msgstr "Cela modifiera le callback ``say_hello()`` de telle sorte que lorsqu'il est invoqué, il le fera :"

#~ msgid "make a GET request on the JSON placeholder API to obtain post 42;"
#~ msgstr "effectuer une requête GET sur l'API JSON pour obtenir le poste 42 ;"

#~ msgid "decode the response as JSON;"
#~ msgstr "décoder la réponse en JSON ;"

#~ msgid "extract the body of the post; and"
#~ msgstr "extraire le corps du message ; et"

#~ msgid "include the body of that post as the text of the dialog."
#~ msgstr "inclure le corps de ce message dans le texte du dialogue."

#~ msgid "Some binary packages may not be available"
#~ msgstr "Certains paquets binaires peuvent ne pas être disponibles"

#~ msgid "In short; any *pure Python* package (i.e., packages that do *not* contain a binary module) can be used without difficulty. However, if your dependency contains a binary component, it must be compiled; at this time, most Python packages don't provide compilation support for non-desktop platforms."
#~ msgstr "En bref, tout paquetage *pure Python* (c'est-à-dire les paquetages qui ne contiennent pas de module binaire) peut être utilisé sans difficulté. Cependant, si votre dépendance contient un composant binaire, il doit être compilé ; à l'heure actuelle, la plupart des paquets Python ne fournissent pas de support de compilation pour les plates-formes autres que les ordinateurs de bureau."

#~ msgid "We've now got an app that uses a third-party library! However, you may have noticed that when you press the button, the app becomes a little unresponsive. Can we do anything to fix this? Turn to :doc:`Tutorial 8 <tutorial-8>` to find out..."
#~ msgstr "Nous avons maintenant une application qui utilise une bibliothèque tierce ! Cependant, vous avez peut-être remarqué que lorsque vous appuyez sur le bouton, l'application ne répond plus vraiment. Pouvons-nous faire quelque chose pour résoudre ce problème ? Consultez :doc:`Tutoriel 8 <tutorial-8>` pour le savoir..."

